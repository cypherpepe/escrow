{
  "contractName": "KlerosLiquid",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "RNBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputesWithoutJurors",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastDelayedSetStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxDrawingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "courts",
      "outputs": [
        {
          "name": "parent",
          "type": "uint96"
        },
        {
          "name": "hiddenVotes",
          "type": "bool"
        },
        {
          "name": "minStake",
          "type": "uint256"
        },
        {
          "name": "alpha",
          "type": "uint256"
        },
        {
          "name": "feeForJuror",
          "type": "uint256"
        },
        {
          "name": "jurorsForCourtJump",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ALPHA_DIVISOR",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "disputes",
      "outputs": [
        {
          "name": "subcourtID",
          "type": "uint96"
        },
        {
          "name": "arbitrated",
          "type": "address"
        },
        {
          "name": "numberOfChoices",
          "type": "uint256"
        },
        {
          "name": "period",
          "type": "uint8"
        },
        {
          "name": "lastPeriodChange",
          "type": "uint256"
        },
        {
          "name": "drawsInRound",
          "type": "uint256"
        },
        {
          "name": "commitsInRound",
          "type": "uint256"
        },
        {
          "name": "ruled",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RN",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RNGenerator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "NON_PAYABLE_AMOUNT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "phase",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_STAKE_PATHS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "delayedSetStakes",
      "outputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "subcourtID",
          "type": "uint96"
        },
        {
          "name": "stake",
          "type": "uint128"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPhaseChange",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minStakingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextDelayedSetStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "jurors",
      "outputs": [
        {
          "name": "stakedTokens",
          "type": "uint256"
        },
        {
          "name": "lockedTokens",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MIN_JURORS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lockInsolventTransfers",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pinakion",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_governor",
          "type": "address"
        },
        {
          "name": "_pinakion",
          "type": "address"
        },
        {
          "name": "_RNGenerator",
          "type": "address"
        },
        {
          "name": "_minStakingTime",
          "type": "uint256"
        },
        {
          "name": "_maxDrawingTime",
          "type": "uint256"
        },
        {
          "name": "_hiddenVotes",
          "type": "bool"
        },
        {
          "name": "_minStake",
          "type": "uint256"
        },
        {
          "name": "_alpha",
          "type": "uint256"
        },
        {
          "name": "_feeForJuror",
          "type": "uint256"
        },
        {
          "name": "_jurorsForCourtJump",
          "type": "uint256"
        },
        {
          "name": "_timesPerPeriod",
          "type": "uint256[4]"
        },
        {
          "name": "_sortitionSumTreeK",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_phase",
          "type": "uint8"
        }
      ],
      "name": "NewPhase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_period",
          "type": "uint8"
        }
      ],
      "name": "NewPeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_subcourtID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_stake",
          "type": "uint128"
        },
        {
          "indexed": false,
          "name": "_newTotalStake",
          "type": "uint256"
        }
      ],
      "name": "StakeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_appeal",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_voteID",
          "type": "uint256"
        }
      ],
      "name": "Draw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_tokenAmount",
          "type": "int256"
        },
        {
          "indexed": false,
          "name": "_ETHAmount",
          "type": "int256"
        }
      ],
      "name": "TokenAndETHShift",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "DisputeCreation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealPossible",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealDecision",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_destination",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "executeGovernorProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_governor",
          "type": "address"
        }
      ],
      "name": "changeGovernor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pinakion",
          "type": "address"
        }
      ],
      "name": "changePinakion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_RNGenerator",
          "type": "address"
        }
      ],
      "name": "changeRNGenerator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minStakingTime",
          "type": "uint256"
        }
      ],
      "name": "changeMinStakingTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxDrawingTime",
          "type": "uint256"
        }
      ],
      "name": "changeMaxDrawingTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_parent",
          "type": "uint96"
        },
        {
          "name": "_hiddenVotes",
          "type": "bool"
        },
        {
          "name": "_minStake",
          "type": "uint256"
        },
        {
          "name": "_alpha",
          "type": "uint256"
        },
        {
          "name": "_feeForJuror",
          "type": "uint256"
        },
        {
          "name": "_jurorsForCourtJump",
          "type": "uint256"
        },
        {
          "name": "_timesPerPeriod",
          "type": "uint256[4]"
        },
        {
          "name": "_sortitionSumTreeK",
          "type": "uint256"
        }
      ],
      "name": "createSubcourt",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_subcourtID",
          "type": "uint96"
        },
        {
          "name": "_minStake",
          "type": "uint256"
        }
      ],
      "name": "changeSubcourtMinStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_subcourtID",
          "type": "uint96"
        },
        {
          "name": "_alpha",
          "type": "uint256"
        }
      ],
      "name": "changeSubcourtAlpha",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_subcourtID",
          "type": "uint96"
        },
        {
          "name": "_feeForJuror",
          "type": "uint256"
        }
      ],
      "name": "changeSubcourtJurorFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_subcourtID",
          "type": "uint96"
        },
        {
          "name": "_jurorsForCourtJump",
          "type": "uint256"
        }
      ],
      "name": "changeSubcourtJurorsForJump",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_subcourtID",
          "type": "uint96"
        },
        {
          "name": "_timesPerPeriod",
          "type": "uint256[4]"
        }
      ],
      "name": "changeSubcourtTimesPerPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "passPhase",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "passPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_subcourtID",
          "type": "uint96"
        },
        {
          "name": "_stake",
          "type": "uint128"
        }
      ],
      "name": "setStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_iterations",
          "type": "uint256"
        }
      ],
      "name": "executeDelayedSetStakes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_iterations",
          "type": "uint256"
        }
      ],
      "name": "drawJurors",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_voteIDs",
          "type": "uint256[]"
        },
        {
          "name": "_commit",
          "type": "bytes32"
        }
      ],
      "name": "castCommit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_voteIDs",
          "type": "uint256[]"
        },
        {
          "name": "_choice",
          "type": "uint256"
        },
        {
          "name": "_salt",
          "type": "uint256"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_appeal",
          "type": "uint256"
        },
        {
          "name": "_iterations",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "executeRuling",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_numberOfChoices",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "createDispute",
      "outputs": [
        {
          "name": "disputeID",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "proxyPayment",
      "outputs": [
        {
          "name": "allowed",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "onTransfer",
      "outputs": [
        {
          "name": "allowed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "onApprove",
      "outputs": [
        {
          "name": "allowed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "arbitrationCost",
      "outputs": [
        {
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appealCost",
      "outputs": [
        {
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "appealPeriod",
      "outputs": [
        {
          "name": "start",
          "type": "uint256"
        },
        {
          "name": "end",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "disputeStatus",
      "outputs": [
        {
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "currentRuling",
      "outputs": [
        {
          "name": "ruling",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_subcourtID",
          "type": "uint96"
        }
      ],
      "name": "getSubcourt",
      "outputs": [
        {
          "name": "children",
          "type": "uint256[]"
        },
        {
          "name": "timesPerPeriod",
          "type": "uint256[4]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_appeal",
          "type": "uint256"
        },
        {
          "name": "_voteID",
          "type": "uint256"
        }
      ],
      "name": "getVote",
      "outputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "commit",
          "type": "bytes32"
        },
        {
          "name": "choice",
          "type": "uint256"
        },
        {
          "name": "voted",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_appeal",
          "type": "uint256"
        }
      ],
      "name": "getVoteCounter",
      "outputs": [
        {
          "name": "winningChoice",
          "type": "uint256"
        },
        {
          "name": "counts",
          "type": "uint256[]"
        },
        {
          "name": "tied",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "getDispute",
      "outputs": [
        {
          "name": "votesLengths",
          "type": "uint256[]"
        },
        {
          "name": "tokensAtStakePerJuror",
          "type": "uint256[]"
        },
        {
          "name": "totalFeesForJurors",
          "type": "uint256[]"
        },
        {
          "name": "votesInEachRound",
          "type": "uint256[]"
        },
        {
          "name": "repartitionsInEachRound",
          "type": "uint256[]"
        },
        {
          "name": "penaltiesInEachRound",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getJuror",
      "outputs": [
        {
          "name": "subcourtIDs",
          "type": "uint96[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        },
        {
          "name": "_subcourtID",
          "type": "uint96"
        }
      ],
      "name": "stakeOf",
      "outputs": [
        {
          "name": "stake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106102995763ffffffff60e060020a600035041662f5822c811461029e578063023d44df146102c157806303432744146102e85780630b274f2e146102fd5780630c340a24146103125780630d44cf791461034357806310f169e814610358578063115d5376146103945780631b92bbbe146103ac5780631c3db16d146103c15780631f5a0dd2146103d95780632d29a47b1461042e5780632ea7b4d01461044c5780633850f804146104615780633e1d09be1461048b57806340026c87146104af57806349912f881461054d5780634a3931491461059e578063564a565d146105dc578063572603641461066057806359354c77146106835780635bc24dd3146106a75780635c92e2f6146106cb5780635e4a627d146106f25780636a4f8f3914610707578063751accd01461071c578063823cfd701461074d578063840bc19c1461076557806385c855f31461077a5780638bb04875146107a75780638ce7ff4a146107bf57806396d92a721461080f5780639929057b14610830578063a2473cc114610848578063a57366e714610875578063afe15cfb14610899578063b1c9fe6e146108ca578063b4a61608146108df578063b78a80ff146108f4578063b888adfa14610945578063c057eca71461095a578063c108f3b41461096f578063c13517e114610984578063cbd88663146109d5578063ce9e7730146109f0578063d4155d1f14610a28578063da682aeb14610a99578063dca5f6b014610ac3578063dd5e5cb514610ae4578063e3a96cbd14610afc578063e3b0073e14610cc1578063e4c0aaf414610d42578063eaff425a14610d63578063f23f16e614610d78578063f48c305414610dd6578063f66d685a14610dea578063f7434ea914610dff578063fbf405b014610e58575b600080fd5b3480156102aa57600080fd5b506102bf600160a060020a0360043516610e6d565b005b3480156102cd57600080fd5b506102d6610ea6565b60408051918252519081900360200190f35b3480156102f457600080fd5b506102d6610eac565b34801561030957600080fd5b506102bf610eb2565b34801561031e57600080fd5b506103276112a1565b60408051600160a060020a039092168252519081900360200190f35b34801561034f57600080fd5b506102d66112b0565b34801561036457600080fd5b506103706004356112b6565b6040518082600281111561038057fe5b60ff16815260200191505060405180910390f35b3480156103a057600080fd5b506102bf60043561132d565b3480156103b857600080fd5b506102d6611a21565b3480156103cd57600080fd5b506102d6600435611a27565b3480156103e557600080fd5b506103f1600435611ab1565b604080516001606060020a0390971687529415156020870152858501939093526060850191909152608084015260a0830152519081900360c00190f35b34801561043a57600080fd5b506102bf600435602435604435611b03565b34801561045857600080fd5b506102d6612640565b34801561046d57600080fd5b506102bf600480359060248035908101910135604435606435612646565b34801561049757600080fd5b506102bf6001606060020a0360043516602435612b9a565b3480156104bb57600080fd5b506104d06001606060020a0360043516612d8a565b604051806020810183608080838360005b838110156104f95781810151838201526020016104e1565b50505050905001828103825284818151815260200191508051906020019060200280838360005b83811015610538578181015183820152602001610520565b50505050905001935050505060405180910390f35b60408051602060046024803582810135601f81018590048502860185019096528585526102bf958335953695604494919390910191908190840183828082843750949750612e4c9650505050505050565b3480156105aa57600080fd5b506105c8600160a060020a036004358116906024351660443561322a565b604080519115158252519081900360200190f35b3480156105e857600080fd5b506105f460043561331e565b604080516001606060020a038a168152600160a060020a03891660208201529081018790526060810186600481111561062957fe5b60ff168152602001858152602001848152602001838152602001821515151581526020019850505050505050505060405180910390f35b34801561066c57600080fd5b506102bf6001606060020a0360043516602461338c565b34801561068f57600080fd5b506102bf6001606060020a03600435166024356133e0565b3480156106b357600080fd5b506102bf6001606060020a0360043516602435613429565b3480156106d757600080fd5b506102bf600480359060248035908101910135604435613472565b3480156106fe57600080fd5b506102d66136ae565b34801561071357600080fd5b506103276136b4565b34801561072857600080fd5b506102bf60048035600160a060020a03169060248035916044359182019101356136c3565b34801561075957600080fd5b506102bf60043561371c565b34801561077157600080fd5b506102d6613738565b34801561078657600080fd5b506102bf6001606060020a03600435166001608060020a0360243516613743565b3480156107b357600080fd5b506102bf60043561375d565b3480156107cb57600080fd5b506107dd600435602435604435613904565b60408051600160a060020a03909516855260208501939093528383019190915215156060830152519081900360800190f35b34801561081b57600080fd5b506102bf600160a060020a0360043516613991565b34801561083c57600080fd5b506102bf600435613a57565b34801561085457600080fd5b506102d6600160a060020a03600435166001606060020a0360243516613b44565b34801561088157600080fd5b506102bf6001606060020a0360043516602435613bf1565b3480156108a557600080fd5b506108b1600435613c3a565b6040805192835260208301919091528051918290030190f35b3480156108d657600080fd5b50610370613cce565b3480156108eb57600080fd5b506102d6613cde565b34801561090057600080fd5b5061090c600435613ce3565b60408051600160a060020a0390941684526001606060020a0390921660208401526001608060020a031682820152519081900360600190f35b34801561095157600080fd5b506102d6613d21565b34801561096657600080fd5b506102d6613d27565b34801561097b57600080fd5b506102d6613d2d565b60408051602060046024803582810135601f81018590048502860185019096528585526102d6958335953695604494919390910191908190840183828082843750949750613d339650505050505050565b3480156109e157600080fd5b506102bf600435602435613ffa565b3480156109fc57600080fd5b506102bf6001606060020a0360043516602435151560443560643560843560a43560c4610144356142fc565b348015610a3457600080fd5b50610a49600160a060020a03600435166145cb565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610a85578181015183820152602001610a6d565b505050509050019250505060405180910390f35b348015610aa557600080fd5b506105c8600160a060020a036004358116906024351660443561466e565b348015610acf57600080fd5b506108b1600160a060020a0360043516614677565b348015610af057600080fd5b506102bf600435614693565b348015610b0857600080fd5b50610b146004356146af565b6040518080602001806020018060200180602001806020018060200187810387528d818151815260200191508051906020019060200280838360005b83811015610b68578181015183820152602001610b50565b5050505090500187810386528c818151815260200191508051906020019060200280838360005b83811015610ba7578181015183820152602001610b8f565b5050505090500187810385528b818151815260200191508051906020019060200280838360005b83811015610be6578181015183820152602001610bce565b5050505090500187810384528a818151815260200191508051906020019060200280838360005b83811015610c25578181015183820152602001610c0d565b50505050905001878103835289818151815260200191508051906020019060200280838360005b83811015610c64578181015183820152602001610c4c565b50505050905001878103825288818151815260200191508051906020019060200280838360005b83811015610ca3578181015183820152602001610c8b565b505050509050019c5050505050505050505050505060405180910390f35b348015610ccd57600080fd5b50610cdc60043560243561490f565b604051808481526020018060200183151515158152602001828103825284818151815260200191508051906020019060200280838360005b83811015610d2c578181015183820152602001610d14565b5050505090500194505050505060405180910390f35b348015610d4e57600080fd5b506102bf600160a060020a03600435166149eb565b348015610d6f57600080fd5b506102d6614a24565b348015610d8457600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526102d6958335953695604494919390910191908190840183828082843750949750614a299650505050505050565b6105c8600160a060020a0360043516614b6d565b348015610df657600080fd5b506105c8614b73565b348015610e0b57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102d6943694929360249392840191908190840183828082843750949750614b7c9650505050505050565b348015610e6457600080fd5b50610327614bc3565b600054600160a060020a03163314610e8457600080fd5b60018054600160a060020a031916600160a060020a0392909216919091179055565b60055481565b60045481565b60006002805460a060020a900460ff1690811115610ecc57fe5b14156110495760075460035442031015610f48576040805160e560020a62461bcd02815260206004820152602c60248201527f546865206d696e696d756d207374616b696e672074696d6520686173206e6f74604482015260a160020a6b103830b9b9b2b2103cb2ba1702606482015290519081900360840190fd5b600454600010610fb5576040805160e560020a62461bcd02815260206004820152602760248201527f546865726520617265206e6f2064697370757465732074686174206e65656420604482015260c960020a66353ab937b9399702606482015290519081900360840190fd5b6001430160058190556002546040805160e560020a6303dce1a7028152600481019390935251600160a060020a0390911691637b9c34e091602480830192600092919082900301818387803b15801561100d57600080fd5b505af1158015611021573d6000803e3d6000fd5b5050600280546001935090915060a060020a60ff02191660a060020a835b0217905550611244565b60016002805460a060020a900460ff169081111561106357fe5b141561115f576002546005546040805160e160020a630e39b00f028152600481019290925251600160a060020a0390921691631c73601e916024808201926020929091908290030181600087803b1580156110bd57600080fd5b505af11580156110d1573d6000803e3d6000fd5b505050506040513d60208110156110e757600080fd5b505160068190551515611144576040805160e560020a62461bcd02815260206004820152601f60248201527f52616e646f6d206e756d626572206973206e6f74207265616479207965742e00604482015290519081900360640190fd5b60028054819060a060020a60ff02191660a060020a8261103f565b600280805460a060020a900460ff169081111561117857fe5b14156112445760045415806111935750600854600354420310155b1515611233576040805160e560020a62461bcd02815260206004820152605860248201527f546865726520617265207374696c6c20646973707574657320776974686f757460448201527f206a75726f727320616e6420746865206d6178696d756d2064726177696e67206064820152604160020a773a34b6b2903430b9903737ba103830b9b9b2b2103cb2ba1702608482015290519081900360a40190fd5b6002805460a060020a60ff02191690555b426003819055507f31f72b44f546d9e7eaec13f65636997665e15f134a81c82924f568f5c0d07b93600260149054906101000a900460ff166040518082600281111561128c57fe5b60ff16815260200191505060405180910390a1565b600054600160a060020a031681565b600e5481565b600080600f838154811015156112c857fe5b60009182526020909120600e9091020190506003600282015460ff1660048111156112ef57fe5b10156112fe5760009150611327565b6004600282015460ff16600481111561131357fe5b10156113225760019150611327565b600291505b50919050565b6000600f8281548110151561133e57fe5b600091825260208220600e909102019150600282015460ff16600481111561136257fe5b1415611551576004810154600110806113d457508054600a805490916001606060020a031690811061139057fe5b90600052602060002090600b02016007018160020160009054906101000a900460ff1660048111156113be57fe5b600481106113c857fe5b01548160030154420310155b1515611461576040805160e560020a62461bcd028152602060048201526044602482018190527f5468652065766964656e636520706572696f642074696d6520686173206e6f74908201527f207061737365642079657420616e64206974206973206e6f7420616e20617070606482015260e160020a6332b0b61702608482015290519081900360a40190fd5b600481018054600019810190811061147557fe5b6000918252602090912001546008820154146114f0576040805160e560020a62461bcd02815260206004820152602960248201527f546865206469737075746520686173206e6f742066696e697368656420647261604482015260b960020a683bb4b733903cb2ba1702606482015290519081900360840190fd5b8054600a805490916001606060020a031690811061150a57fe5b600091825260209091206002600b90920201015460ff1661152c57600261152f565b60015b60028201805460ff1916600183600481111561154757fe5b02179055506119c5565b6001600282015460ff16600481111561156657fe5b14156116a1578054600a805490916001606060020a031690811061158657fe5b90600052602060002090600b02016007018160020160009054906101000a900460ff1660048111156115b457fe5b600481106115be57fe5b0154816003015442031015806115f6575060048101805460001981019081106115e357fe5b6000918252602090912001546009820154145b151561168e576040805160e560020a62461bcd02815260206004820152605060248201527f54686520636f6d6d697420706572696f642074696d6520686173206e6f74207060448201527f61737365642079657420616e64206e6f74206576657279206a75726f722068616064820152608160020a6f399031b7b6b6b4ba3a32b2103cb2ba1702608482015290519081900360a40190fd5b6002818101805460ff1916600183611547565b60028082015460ff1660048111156116b557fe5b141561184c578054600a805490916001606060020a03169081106116d557fe5b90600052602060002090600b02016007018160020160009054906101000a900460ff16600481111561170357fe5b6004811061170d57fe5b0154816003015442031015806117655750600481018054600019810190811061173257fe5b6000918252602090912001546004820154600a8301805490916000190190811061175857fe5b9060005260206000200154145b15156117f7576040805160e560020a62461bcd02815260206004820152604a60248201527f54686520766f746520706572696f642074696d6520686173206e6f742070617360448201527f7365642079657420616e64206e6f74206576657279206a75726f722068617320606482015260b160020a693b37ba32b2103cb2ba1702608482015290519081900360a40190fd5b600281018054600360ff199091161790558054604051606060020a909104600160a060020a03169083907fa5d41b970d849372be1da1481ffd78d162bfe57a7aa2fe4e5fb73481fa5ac24f90600090a36119c5565b6003600282015460ff16600481111561186157fe5b1415611944578054600a805490916001606060020a031690811061188157fe5b90600052602060002090600b02016007018160020160009054906101000a900460ff1660048111156118af57fe5b600481106118b957fe5b015460038201544203101561192e576040805160e560020a62461bcd02815260206004820152602a60248201527f5468652061707065616c20706572696f642074696d6520686173206e6f742070604482015260b160020a6930b9b9b2b2103cb2ba1702606482015290519081900360840190fd5b6002810180546004919060ff1916600183611547565b6004600282015460ff16600481111561195957fe5b14156119c5576040805160e560020a62461bcd02815260206004820152602a60248201527f546865206469737075746520697320616c726561647920696e20746865206c61604482015260b160020a6939ba103832b934b7b21702606482015290519081900360840190fd5b426003820155600281015460405183917f4e6f5cf43b95303e86aee81683df63992061723a829ee012db21dad388756b919160ff9091169080826004811115611a0a57fe5b60ff16815260200191505060405180910390a25050565b60085481565b600080600f83815481101515611a3957fe5b60009182526020909120600e90910201600581018054919250906000198101908110611a6157fe5b600091825260209091206002600390920201015460ff16611aa7576005810180546000198101908110611a9057fe5b906000526020600020906003020160000154611aaa565b60005b9392505050565b600a805482908110611abf57fe5b60009182526020909120600b90910201805460028201546003830154600484015460058501546006909501546001606060020a03909416955060ff90921693909286565b600080808080808080808b600480600f805484908110611b1f57fe5b600091825260209091206002600e90920201015460ff166004811115611b4157fe5b14611b4b57600080fd5b6009805460ff19169055600f80548f908110611b6357fe5b90600052602060002090600e02019a508b8b600b018e815481101515611b8557fe5b90600052602060002001540199508a600b018d815481101515611ba457fe5b90600052602060002001548a10151515611bbd57600080fd5b600c8b0180548e908110611bcd57fe5b600091825260208220015460058d018054919b509199508998506000198101908110611bf557fe5b600091825260209091206002600390920201015460ff16158015611c77575060058b0180548e908110611c2457fe5b906000526020600020906003020160010160008c60050160018e6005018054905003815481101515611c5257fe5b9060005260206000209060030201600001548152602001908152602001600020546000145b15611cc35760048b0180548e908110611c8c57fe5b6000918252602090912001548a1115611cbe5760048b0180548e908110611caf57fe5b60009182526020909120015499505b611d61565b60048b0180548e908110611cd357fe5b600091825260209091200154600b8c0180548f908110611cef57fe5b90600052602060002001541015611d0857600080611d12565b611d128e8e614bd2565b60048d018054929a50909850908e908110611d2957fe5b6000918252602090912001546002028a1115611d615760048b0180548e908110611d4f57fe5b60009182526020909120015460020299505b600b8b0180548e908110611d7157fe5b906000526020600020015495505b898610156125c25760048b0180548e908110611d9757fe5b906000526020600020018b6004018e815481101515611db257fe5b60009182526020909120015487811515611dc857fe5b06815481101515611dd557fe5b60009182526020909120600490910201600381015490955060ff168015611e55575060058b0180546000198101908110611e0b57fe5b90600052602060002090600302016000015485600201541480611e55575060058b0180546000198101908110611e3d57fe5b600091825260209091206002600390920201015460ff165b15611fc15760048b0180548e908110611e6a57fe5b6000918252602090912001548610611fbc5760015485546040805160e060020a63a9059cbb028152600160a060020a039283166004820152602481018c90529051919092169163a9059cbb9160448083019260209291908290030181600087803b158015611ed757600080fd5b505af1158015611eeb573d6000803e3d6000fd5b505050506040513d6020811015611f0157600080fd5b50508454604051600160a060020a039091169088156108fc029089906000818181858888f19350505050508d8560000160009054906101000a9004600160a060020a0316600160a060020a03166000805160206157a98339815191528a8a604051808381526020018281526020019250505060405180910390a360068b0180548e908110611f8b57fe5b60009182526020808320909101548754600160a060020a031683526010909152604090912060020180549190910390555b612382565b60048b0180548e908110611fd157fe5b6000918252602090912001548610156123825760015485546040805160e060020a6370a08231028152600160a060020a039283166004820152905191909216916370a082319160248083019260209291908290030181600087803b15801561203857600080fd5b505af115801561204c573d6000803e3d6000fd5b505050506040513d602081101561206257600080fd5b505160068c0180548f90811061207457fe5b9060005260206000200154116120a45760068b0180548e90811061209457fe5b9060005260206000200154612125565b60015485546040805160e060020a6370a08231028152600160a060020a039283166004820152905191909216916370a082319160248083019260209291908290030181600087803b1580156120f857600080fd5b505af115801561210c573d6000803e3d6000fd5b505050506040513d602081101561212257600080fd5b50515b60015486546040805160e060020a6323b872dd028152600160a060020a0392831660048201523060248201526044810185905290519397509116916323b872dd916064808201926020929091908290030181600087803b15801561218857600080fd5b505af115801561219c573d6000803e3d6000fd5b505050506040513d60208110156121b257600080fd5b8101908080519060200190929190505050508d8560000160009054906101000a9004600160a060020a0316600160a060020a03166000805160206157a9833981519152866000036000604051808381526020018281526020019250505060405180910390a360068b018054998501998e90811061222b57fe5b60009182526020808320909101548754600160a060020a039081168452601083526040808520600201805493909303909255885481168085528285206001908101549054845160e060020a6370a0823102815260048101939093529351909593909216936370a082319360248084019492938390030190829087803b1580156122b357600080fd5b505af11580156122c7573d6000803e3d6000fd5b505050506040513d60208110156122dd57600080fd5b505110806122f05750600385015460ff16155b1561238257600092505b8454600160a060020a0316600090815260106020526040902054831015612382578454600160a060020a0316600081815260106020526040902080546123769291908690811061234657fe5b9060005260206000209060029182820401919006600c029054906101000a90046001606060020a03166000614d75565b506001909201916122fa565b60018b6004018e81548110151561239557fe5b600091825260209091200154038614156125b757600a8b0180548e9081106123b957fe5b906000526020600020015460001480612463575060058b01805460001981019081106123e157fe5b600091825260209091206002600390920201015460ff16158015612463575060058b0180548e90811061241057fe5b906000526020600020906003020160010160008c60050160018e600501805490500381548110151561243e57fe5b9060005260206000209060030201600001548152602001908152602001600020546000145b1561257e576000809054906101000a9004600160a060020a0316600160a060020a03166108fc8c6007018f81548110151561249a57fe5b90600052602060002001549081150290604051600060405180830381858888f1935050505050600160009054906101000a9004600160a060020a0316600160a060020a031663a9059cbb6000809054906101000a9004600160a060020a03168b6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561254c57600080fd5b505af1158015612560573d6000803e3d6000fd5b505050506040513d602081101561257657600080fd5b506125b79050565b898660010110156125b757888b600c018e81548110151561259b57fe5b6000918252602090912001556125b18e8e614bd2565b90985096505b600190950194611d7f565b888b600c018e8154811015156125d457fe5b906000526020600020015414151561260557888b600c018e8154811015156125f857fe5b6000918252602090912001555b898b600b018e81548110151561261757fe5b60009182526020909120015550506009805460ff19166001179055505050505050505050505050565b61271081565b6000808087600280600f80548490811061265c57fe5b600091825260209091206002600e90920201015460ff16600481111561267e57fe5b1461268857600080fd5b600f80548b90811061269657fe5b600091825260208220600e90910201955088116126b257600080fd5b6001850154871115612751576040805160e560020a62461bcd02815260206004820152605160248201527f5468652063686f6963652068617320746f206265206c657373207468616e206f60448201527f7220657175616c20746f20746865206e756d626572206f662063686f696365736064820152607960020a70103337b9103a3432903234b9b83aba329702608482015290519081900360a40190fd5b600093505b87841015612a8c57600485018054339190600019810190811061277557fe5b906000526020600020018a8a87818110151561278d57fe5b905060200201358154811015156127a057fe5b6000918252602090912060049091020154600160a060020a0316146127fd576040805160e560020a62461bcd02815260206004820152601f6024820152600080516020615789833981519152604482015290519081900360640190fd5b8454600a805490916001606060020a031690811061281757fe5b600091825260209091206002600b90920201015460ff1615806128a5575060408051888152602081018890528151908190039091019020600486018054600019810190811061286257fe5b906000526020600020018a8a87818110151561287a57fe5b9050602002013581548110151561288d57fe5b90600052602060002090600402016001015460001916145b1515612921576040805160e560020a62461bcd02815260206004820152602481018290527f54686520636f6d6d6974206d757374206d61746368207468652063686f69636560448201527f20696e20737562636f7572747320776974682068696464656e20766f7465732e606482015290519081900360840190fd5b600485018054600019810190811061293557fe5b90600052602060002001898986818110151561294d57fe5b9050602002013581548110151561296057fe5b600091825260209091206003600490920201015460ff16156129c4576040805160e560020a62461bcd0281526020600482015260126024820152607160020a712b37ba329030b63932b0b23c9031b0b9ba1702604482015290519081900360640190fd5b60048501805488919060001981019081106129db57fe5b906000526020600020018a8a8781811015156129f357fe5b90506020020135815481101515612a0657fe5b600091825260209091206004918202016002019190915585018054600191906000198101908110612a3357fe5b906000526020600020018a8a878181101515612a4b57fe5b90506020020135815481101515612a5e57fe5b60009182526020909120600490910201600301805460ff191691151591909117905560019390930192612756565b6004850154600a860180548a9260001901908110612aa657fe5b6000918252602090912001805490910190556005850180546000198101908110612acc57fe5b600091825260208083208a845260016003909302019182019052604090912080548a0190558054909350871415612b1c57600283015460ff1615612b175760028301805460ff191690555b612b8e565b82546000908152600184016020526040808220548983529120541415612b5e57600283015460ff161515612b175760028301805460ff19166001179055612b8e565b82546000908152600184016020526040808220548983529120541115612b8e5786835560028301805460ff191690555b50505050505050505050565b60008054600160a060020a03163314612bb257600080fd5b6001606060020a0383161580612c19575081600a80856001606060020a0316815481101515612bdd57fe5b60009182526020909120600b909102015481546001606060020a03909116908110612c0457fe5b90600052602060002090600b02016003015411155b1515612c2457600080fd5b5060005b600a80546001606060020a038516908110612c3f57fe5b90600052602060002090600b020160010180549050811015612d575781600a80856001606060020a0316815481101515612c7557fe5b90600052602060002090600b020160010183815481101515612c9357fe5b9060005260206000200154815481101515612caa57fe5b90600052602060002090600b02016003015410151515612d4f576040805160e560020a62461bcd02815260206004820152604960248201527f4120737562636f7572742063616e6e6f742062652074686520706172656e742060448201527f6f66206120737562636f75727420776974682061206c6f776572206d696e696d606482015260b960020a683ab69039ba30b5b29702608482015290519081900360a40190fd5b600101612c28565b81600a846001606060020a0316815481101515612d7057fe5b90600052602060002090600b020160030181905550505050565b6060612d94615410565b6000600a846001606060020a0316815481101515612dae57fe5b90600052602060002090600b0201905080600101805480602002602001604051908101604052809291908181526020018280548015612e0c57602002820191906000526020600020905b815481526020019060010190808311612df8575b505060408051608081019182905294975060078601935060049250905082845b815481526020019060010190808311612e2c575050505050915050915091565b60008282612e5a8282614a29565b341015612ec2576040805160e560020a62461bcd02815260206004820152602560248201527f4e6f7420656e6f7567682045544820746f20636f7665722061707065616c2063604482015260d960020a6437b9ba399702606482015290519081900360840190fd5b84600380600f805484908110612ed457fe5b600091825260209091206002600e90920201015460ff166004811115612ef657fe5b14612f0057600080fd5b600f805488908110612f0e57fe5b60009182526020909120600e909102018054909550606060020a9004600160a060020a03163314612fa3576040805160e560020a62461bcd02815260206004820152602e60248201527f43616e206f6e6c792062652063616c6c656420627920746865206172626974726044820152609160020a6d30b136329031b7b73a3930b1ba1702606482015290519081900360840190fd5b8454600a805490916001606060020a0316908110612fbd57fe5b600091825260209091206006600b9092020101546004860180546000198101908110612fe557fe5b6000918252602090912001541061303c578454600a805490916001606060020a031690811061301057fe5b60009182526020909120600b909102015485546001606060020a0319166001606060020a039091161785555b60028501805460ff191690554260038601558454600a805490916001606060020a031690811061306857fe5b90600052602060002090600b0201600501543481151561308457fe5b600487018054929091049161309c826001830161542f565b815481106130a657fe5b90600052602060002001816130bb9190615453565b50600585018054600191906130d28282850161547f565b815481106130dc57fe5b60009182526020909120600390910201600201805460ff19169115159190911790558454600a8054600688019261271092916001606060020a0390911690811061312257fe5b600091825260209091206004600b9092020101548754600a805490916001606060020a031690811061315057fe5b90600052602060002090600b0201600301540281151561316c57fe5b825460018181018555600094855260208086209490930493909101929092556007880180548084018255908452818420349101556008880183905560098801839055600a88018054808401825590845281842001839055600b88018054808401825590845281842001839055600c88018054808401825590845290832001829055600480549091019055604051339189917f9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d9190a350505050505050565b600954600090819060ff1615613311576001546040805160e060020a6370a08231028152600160a060020a0388811660048301529151869392909216916370a08231916024808201926020929091908290030181600087803b15801561328f57600080fd5b505af11580156132a3573d6000803e3d6000fd5b505050506040513d60208110156132b957600080fd5b5051600160a060020a03871660009081526010602052604090206001015491900391508110806133035750600160a060020a03851660009081526010602052604090206002015481105b156133115760009150613316565b600191505b509392505050565b600f80548290811061332c57fe5b60009182526020909120600e90910201805460018201546002830154600384015460088501546009860154600d909601546001606060020a0386169750606060020a909504600160a060020a031695939460ff9384169492939192911688565b600054600160a060020a031633146133a357600080fd5b80600a836001606060020a03168154811015156133bc57fe5b90600052602060002090600b02016007019060046133db9291906154ab565b505050565b600054600160a060020a031633146133f757600080fd5b80600a836001606060020a031681548110151561341057fe5b90600052602060002090600b0201600501819055505050565b600054600160a060020a0316331461344057600080fd5b80600a836001606060020a031681548110151561345957fe5b90600052602060002090600b0201600401819055505050565b60008085600180600f80548490811061348757fe5b600091825260209091206002600e90920201015460ff1660048111156134a957fe5b146134b357600080fd5b600f8054899081106134c157fe5b60009182526020909120600e9091020193508415156134df57600080fd5b600092505b8583101561369b57600484018054339190600019810190811061350357fe5b90600052602060002001888886818110151561351b57fe5b9050602002013581548110151561352e57fe5b6000918252602090912060049091020154600160a060020a03161461358b576040805160e560020a62461bcd02815260206004820152601f6024820152600080516020615789833981519152604482015290519081900360640190fd5b6004840180546000919060001981019081106135a357fe5b9060005260206000200188888681811015156135bb57fe5b905060200201358154811015156135ce57fe5b600091825260209091206001600490920201015414613637576040805160e560020a62461bcd02815260206004820152601c60248201527f416c726561647920636f6d6d6974746564207468697320766f74652e00000000604482015290519081900360640190fd5b600484018054869190600019810190811061364e57fe5b90600052602060002001888886818110151561366657fe5b9050602002013581548110151561367957fe5b60009182526020909120600160049092020181019190915592909201916134e4565b5050506009018054909201909155505050565b60065481565b600254600160a060020a031681565b600054600160a060020a031633146136da57600080fd5b83600160a060020a03168383836040518083838082843782019150509250505060006040518083038185875af192505050151561371657600080fd5b50505050565b600054600160a060020a0316331461373357600080fd5b600755565b600160ff60020a0381565b61374e338383614d75565b151561375957600080fd5b5050565b60008082600480600f80548490811061377257fe5b600091825260209091206002600e90920201015460ff16600481111561379457fe5b1461379e57600080fd5b600f8054869081106137ac57fe5b60009182526020909120600e90910201600d81015490945060ff161561381a576040805160e560020a62461bcd0281526020600482015260186024820152604160020a77293ab634b7339030b63932b0b23c9032bc32b1baba32b21702604482015290519081900360640190fd5b600d8401805460ff19166001179055600584018054600019810190811061383d57fe5b600091825260209091206002600390920201015460ff1661388357600584018054600019810190811061386c57fe5b906000526020600020906003020160000154613886565b60005b84546040805160e160020a63188d362b02815260048101899052602481018490529051929550606060020a909104600160a060020a03169163311a6c569160448082019260009290919082900301818387803b1580156138e557600080fd5b505af11580156138f9573d6000803e3d6000fd5b505050505050505050565b6000806000806000600f8881548110151561391b57fe5b90600052602060002090600e02016004018781548110151561393957fe5b906000526020600020018681548110151561395057fe5b60009182526020909120600490910201805460018201546002830154600390930154600160a060020a039092169b909a5091985060ff169650945050505050565b600054600160a060020a031633146139a857600080fd5b60028054600160a060020a031916600160a060020a03831617905560016002805460a060020a900460ff16908111156139dd57fe5b1415613a54576001430160058190556002546040805160e560020a6303dce1a7028152600481019390935251600160a060020a0390911691637b9c34e091602480830192600092919082900301818387803b158015613a3b57600080fd5b505af1158015613a4f573d6000803e3d6000fd5b505050505b50565b600080808080806002805460a060020a900460ff1690811115613a7657fe5b14613a8057600080fd5b600e54600187600d54010311613a965785613aa1565b600d54600e54036001015b600d549095508086019450841015613ab857600080fd5b600d5492505b83831015613b3a576000838152600c6020526040902080546001820154919350613b0c91600160a060020a0382169160a060020a90046001606060020a0316906001608060020a0316614d75565b506000838152600c60205260408120908155600190810180546001608060020a031916905590920191613abe565b505050600d555050565b600073__SortitionSumTreeFactory_______________637521ccb1600b6001606060020a038516613b768787615357565b6040805160e060020a63ffffffff8716028152600481019490945260248401929092526044830152516064808301926020929190829003018186803b158015613bbe57600080fd5b505af4158015613bd2573d6000803e3d6000fd5b505050506040513d6020811015613be857600080fd5b50519392505050565b600054600160a060020a03163314613c0857600080fd5b80600a836001606060020a0316815481101515613c2157fe5b90600052602060002090600b0201600601819055505050565b6000806000600f84815481101515613c4e57fe5b60009182526020909120600e9091020190506003600282015460ff166004811115613c7557fe5b1415613cbf5760038101548154600a8054929550916001606060020a03909116908110613c9e57fe5b60009182526020909120600a600b9092020101546003820154019150613cc8565b60009250600091505b50915091565b60025460a060020a900460ff1681565b600481565b600c6020526000908152604090208054600190910154600160a060020a0382169160a060020a90046001606060020a0316906001608060020a031683565b60035481565b60075481565b600d5481565b60008060008084613d4381614b7c565b341015613db0576040805160e560020a62461bcd02815260206004820152602a60248201527f4e6f7420656e6f7567682045544820746f20636f766572206172626974726174604482015260b160020a6934b7b71031b7b9ba399702606482015290519081900360840190fd5b613db986615396565b600f8054929650909450613dd090600183016154e9565b9450600f85815481101515613de157fe5b60009182526020909120600e9091020180546001606060020a0319166001606060020a0386811691909117811633606060020a0217808355600183018a905560028301805460ff19169055426003840155600a8054939550929116908110613e4557fe5b90600052602060002090600b02016005015434811515613e6157fe5b6004840180549290910491613e79826001830161542f565b81548110613e8357fe5b9060005260206000200181613e989190615453565b5060058201805460019190613eaf8282850161547f565b81548110613eb957fe5b60009182526020909120600390910201600201805460ff19169115159190911790558154600a8054600685019261271092916001606060020a03909116908110613eff57fe5b600091825260209091206004600b9092020101548454600a805490916001606060020a0316908110613f2d57fe5b90600052602060002090600b02016003015402811515613f4957fe5b82546001818101855560009485526020808620949093049390910192909255600785018054808401825590845281842034910155600a85018054808401825590845281842001839055600b85018054808401825590845281842001839055600c85018054808401825590845290832001829055600480549091019055604051339187917f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed9959190a35050505092915050565b6000808080806002806002805460a060020a900460ff169081111561401b57fe5b1461402557600080fd5b87600080600f80548490811061403757fe5b600091825260209091206002600e90920201015460ff16600481111561405957fe5b1461406357600080fd5b600f80548b90811061407157fe5b90600052602060002090600e020197508888600801540196508760080154871015151561409d57600080fd5b60048801805460001981019081106140b157fe5b6000918252602090912001548711156140e75760048801805460001981019081106140d857fe5b60009182526020909120015496505b876008015495505b868610156142eb5787546006546040805191825260208083018e90528282018a9052815192839003606001832060e060020a6388c1d467028452600b60048501526001606060020a0390941660248401526044830193909352516141b59273__SortitionSumTreeFactory_______________926388c1d4679260648083019392829003018186803b15801561418457600080fd5b505af4158015614198573d6000803e3d6000fd5b505050506040513d60208110156141ae57600080fd5b50516153e4565b60048a0180549297506001606060020a03919091169550869160001981019081106141dc57fe5b90600052602060002001878154811015156141f357fe5b600091825260209091206004909102018054600160a060020a031916600160a060020a0392909216919091179055600688018054600019810190811061423557fe5b6000918252602080832090910154600160a060020a03881680845260108352604093849020600201805490920190915560048b01548351600019909101815291820189905282518d9391927f6119cf536152c11e0a9a6c22f3953ce4ecc93ee54fa72ffa326ffabded21509b92908290030190a36004880180546001919060001981019081106142c157fe5b600091825260209091200154038614156142e057600480546000190190555b6001909501946140ef565b505050505060089290920155505050565b60008054600160a060020a0316331461431457600080fd5b86600a8a6001606060020a031681548110151561432d57fe5b90600052602060002090600b020160030154111515156143d0576040805160e560020a62461bcd02815260206004820152604760248201527f4120737562636f7572742063616e6e6f742062652061206368696c64206f662060448201527f6120737562636f7572742077697468206120686967686572206d696e696d756d606482015260c960020a661039ba30b5b29702608482015290519081900360a40190fd5b60408051610100810182526001606060020a038b168152815160008152602080820184528201528915158183015260608101899052608080820189905260a0820188905260c082018790528251808201909352600192600a929160e083019190889060049083908390808284375050509190925250508154600180820180855560009485526020948590208451600b9094020180546001606060020a0319166001606060020a03909416939093178355838501518051919561449793850192910190615515565b50604082015160028201805460ff191691151591909117905560608201516003820155608082015160048083019190915560a0830151600583015560c0830151600683015560e08301516144f091600784019190615550565b50506040805160e160020a63483abc4f028152600b6004820152939092036001606060020a038116602485015260448401869052915191935073__SortitionSumTreeFactory_______________92639075789e9260648083019350600092829003018186803b15801561456357600080fd5b505af4158015614577573d6000803e3d6000fd5b50505050600a896001606060020a031681548110151561459357fe5b600091825260208083206001600b9093020182018054928301815583529091206001606060020a039092169101555050505050505050565b600160a060020a0381166000908152601060209081526040918290208054835181840281018401909452808452606093919283919083018282801561466157602002820191906000526020600020906000905b82829054906101000a90046001606060020a03166001606060020a0316815260200190600c0190602082600b0104928301926001038202915080841161461e5790505b5050505050915050919050565b50600192915050565b6010602052600090815260409020600181015460029091015482565b600054600160a060020a031633146146aa57600080fd5b600855565b606080606080606080600080600f898154811015156146ca57fe5b90600052602060002090600e02019150816004018054905060405190808252806020026020018201604052801561470b578160200160208202803883390190505b509750600090505b600482015481101561475b576004820180548290811061472f57fe5b600091825260209091200154885189908390811061474957fe5b60209081029091010152600101614713565b816006018054806020026020016040519081016040528092919081815260200182805480156147a957602002820191906000526020600020905b815481526020019060010190808311614795575b50505050509650816007018054806020026020016040519081016040528092919081815260200182805480156147fe57602002820191906000526020600020905b8154815260200190600101908083116147ea575b5050505050955081600a0180548060200260200160405190810160405280929190818152602001828054801561485357602002820191906000526020600020905b81548152602001906001019080831161483f575b5050505050945081600b018054806020026020016040519081016040528092919081815260200182805480156148a857602002820191906000526020600020905b815481526020019060010190808311614894575b5050505050935081600c018054806020026020016040519081016040528092919081815260200182805480156148fd57602002820191906000526020600020905b8154815260200190600101908083116148e9575b50505050509250505091939550919395565b60006060600080600080600f8881548110151561492857fe5b90600052602060002090600e02019250826005018781548110151561494957fe5b90600052602060002090600302019150816000015495508260010154600101604051908082528060200260200182016040528015614991578160200160208202803883390190505b509450600090505b600183015481116149d557600081815260018301602052604090205485518690839081106149c357fe5b60209081029091010152600101614999565b506002015493969295505060ff90921692509050565b600054600160a060020a03163314614a0257600080fd5b60008054600160a060020a031916600160a060020a0392909216919091179055565b600381565b6000806000600f85815481101515614a3d57fe5b60009182526020909120600e90910201600481018054919350906000198101908110614a6557fe5b6000918252602090912001548254600a8054929350916001606060020a03909116908110614a8f57fe5b90600052602060002090600b02016006015481101515614b2f5781546001606060020a03161515614ac957600160ff60020a039250614b2a565b8154600a8054600160028502019282916001606060020a03909116908110614aed57fe5b60009182526020909120600b909102015481546001606060020a03909116908110614b1457fe5b90600052602060002090600b0201600501540292505b614b65565b8154600a805460016002850201926001606060020a0316908110614b4f57fe5b90600052602060002090600b0201600501540292505b505092915050565b50600090565b60095460ff1681565b6000806000614b8a84615396565b9150915080600a836001606060020a0316815481101515614ba757fe5b90600052602060002090600b0201600501540292505050919050565b600154600160a060020a031681565b600080600080600080600f88815481101515614bea57fe5b60009182526020909120600e90910201600581018054919550906000198101908110614c1257fe5b600091825260209091206002600390920201015460ff1615614cb957600a8401805488908110614c3e57fe5b906000526020600020015492506000831115614cab578284600c0188815481101515614c6657fe5b9060005260206000200154811515614c7a57fe5b049550828460070188815481101515614c8f57fe5b9060005260206000200154811515614ca357fe5b049450614cb4565b60009550600094505b614d6a565b6005840180546000198101908110614ccd57fe5b90600052602060002090600302016000015491508360050187815481101515614cf257fe5b906000526020600020906003020160010160008381526020019081526020016000205490508084600c0188815481101515614d2957fe5b9060005260206000200154811515614d3d57fe5b049550808460070188815481101515614d5257fe5b9060005260206000200154811515614d6657fe5b0494505b505050509250929050565b600080600080600080600080600a805490508a6001606060020a0316101515614da15760009750615349565b60006002805460a060020a900460ff1690811115614dbb57fe5b14614eab576060604051908101604052808c600160a060020a031681526020018b6001606060020a031681526020018a6001608060020a0316815250600c6000600e60008154600101919050819055815260200190815260200160002060008201518160000160006101000a815481600160a060020a030219169083600160a060020a0316021790555060208201518160000160146101000a8154816001606060020a0302191690836001606060020a0316021790555060408201518160010160006101000a8154816001608060020a0302191690836001608060020a0316021790555090505060019750615349565b6001608060020a0389161580614ef35750886001608060020a0316600a8b6001606060020a0316815481101515614ede57fe5b90600052602060002090600b02016003015411155b1515614f025760009750615349565b600160a060020a038b1660009081526010602052604090209650614f268b8b615357565b6040805160e060020a637521ccb1028152600b60048201526001606060020a038d16602482015260448101839052905191975073__SortitionSumTreeFactory_______________91637521ccb191606480820192602092909190829003018186803b158015614f9557600080fd5b505af4158015614fa9573d6000803e3d6000fd5b505050506040513d6020811015614fbf57600080fd5b505194506001608060020a0389161580614fd95750600085115b80614fe5575086546004115b1515614ff45760009750615349565b60018701548590036001608060020a038a169081019450158061509657506001546040805160e060020a6370a08231028152600160a060020a038e811660048301529151879392909216916370a08231916024808201926020929091908290030181600087803b15801561506757600080fd5b505af115801561507b573d6000803e3d6000fd5b505050506040513d602081101561509157600080fd5b505110155b15156150a55760009750615349565b600187018490556001608060020a03891615156151c257600092505b86548310156151bd5786546001606060020a038b16908890859081106150e357fe5b600091825260209091206002820401546001909116600c026101000a90046001606060020a031614156151b25786548790600019810190811061512257fe5b9060005260206000209060029182820401919006600c029054906101000a90046001606060020a0316876000018481548110151561515c57fe5b9060005260206000209060029182820401919006600c026101000a8154816001606060020a0302191690836001606060020a03160217905550866000018054809190600190036151ac919061557d565b506151bd565b6001909201916150c1565b615204565b841515615204578654600180820189556000898152602090206002830401805491909216600c026101000a6001606060020a0381810219909216918d16021790555b50600090506001606060020a0389165b8115156152e7576040805160e160020a631712e1c5028152600b6004820152602481018390526001608060020a038b16604482015260648101889052905173__SortitionSumTreeFactory_______________91632e25c38a916084808301926000929190829003018186803b15801561528d57600080fd5b505af41580156152a1573d6000803e3d6000fd5b5050505080600014156152b757600191506152e2565b600a8054829081106152c557fe5b60009182526020909120600b90910201546001606060020a031690505b615214565b604080516001606060020a038c1681526001608060020a038b1660208201528082018690529051600160a060020a038d16917f8f753321c98641397daaca5e8abf8881fff1fd7a7bc229924a012e2cb61763d5919081900360600190a2600197505b505050505050509392505050565b600060405160005b601481101561537a578481600c011a8183015360010161535f565b5060145b6020811015613be85783811a8183015360010161537e565b600080604083511015156153d757505060208101516040820151600a546001606060020a038316106153c757600091505b8015156153d2575060035b6153df565b506000905060035b915091565b60008060405160005b60148110156154085784811a81600c840101536001016153ed565b505193915050565b6080604051908101604052806004906020820280388339509192915050565b8154818355818111156133db576000838152602090206133db9181019083016155b1565b8154818355818111156133db576004028160040283600052602060002091820191016133db91906155d7565b8154818355818111156133db576003028160030283600052602060002091820191016133db9190615615565b82600481019282156154d9579160200282015b828111156154d95782358255916020019190600101906154be565b506154e592915061563b565b5090565b8154818355818111156133db57600e0281600e0283600052602060002091820191016133db9190615655565b8280548282559060005260206000209081019282156154d9579160200282015b828111156154d9578251825591602001919060010190615535565b82600481019282156154d957916020028201828111156154d9578251825591602001919060010190615535565b8154818355818111156133db5760010160029004816001016002900483600052602060002091820191016133db919061563b565b6155d491905b808211156154e55760006155cb828261570a565b506001016155b7565b90565b6155d491905b808211156154e5578054600160a060020a0319168155600060018201819055600282015560038101805460ff191690556004016155dd565b6155d491905b808211156154e5576000815560028101805460ff1916905560030161561b565b6155d491905b808211156154e55760008155600101615641565b6155d491905b808211156154e55760008082556001820181905560028201805460ff191690556003820181905561568f600483018261572b565b61569d600583016000615749565b6156ab60068301600061576a565b6156b960078301600061576a565b60088201600090556009820160009055600a820160006156d9919061576a565b6156e7600b8301600061576a565b6156f5600c8301600061576a565b50600d8101805460ff19169055600e0161565b565b5080546000825560040290600052602060002090810190613a5491906155d7565b5080546000825590600052602060002090810190613a5491906155b1565b5080546000825560030290600052602060002090810190613a549190615615565b5080546000825590600052602060002090810190613a54919061563b56005468652063616c6c65722068617320746f206f776e2074686520766f74652e0024f45c2b08bbde8c837d70b67991ccb7660537cf749de21a940ae4858b681e19a165627a7a72305820fe89f6085cdbab358bd5851ed40d34730bac13f5da11db59af918cf38e2d1db00029",
  "sourceMap": "1009:51688:7:-;;;8568:41;;;-1:-1:-1;;8568:41:7;8605:4;8568:41;;;;;;9200:35;;11184:1059;5:2:-1;;;;30:1;27;20:12;5:2;11184:1059:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11602:9;11591:8;;:20;;;;;-1:-1:-1;;;;;11591:20:7;;;;;-1:-1:-1;;;;;11591:20:7;;;;;;11632:9;11621:8;;:20;;;;;-1:-1:-1;;;;;11621:20:7;;;;;-1:-1:-1;;;;;11621:20:7;;;;;;11665:12;11651:11;;:26;;;;;-1:-1:-1;;;;;11651:26:7;;;;;-1:-1:-1;;;;;11651:26:7;;;;;;11704:15;11687:14;:32;;;;11746:15;11729:14;:32;;;;11789:3;11771:15;:21;;;;11840:6;11852:313;;;;;;;;;11880:1;-1:-1:-1;;;;;11852:313:7;;;;;11916:1;11905:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;11905:13:7;-1:-1:-1;11852:313:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;;-1:-1;11840:326:7;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11840:326:7;-1:-1:-1;;;;;11840:326:7;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11840:326:7;;;;;;;;;-1:-1:-1;;11840:326:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;12176:60:7;;;;;;:17;:60;;;;12213:1;12176:60;;;;;;;;;;;;;;:28;;-1:-1:-1;12176:28:7;;-1:-1:-1;12176:60:7;;;;;12213:1;12176:60;;;;;:28;:60;;;5:2:-1;;;;30:1;27;20:12;5:2;12176:60:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12176:60:7;;;;11184:1059;;;;;;;;;;;;1009:51688;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1009:51688:7;;;-1:-1:-1;1009:51688:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1009:51688:7:-;;;;;;;;;-1:-1:-1;;;1009:51688:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13118:105:7;-1:-1:-1;;;;;13118:105:7;;;;;;;8224:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8224:19:7;;;;;;;;;;;;;;;;;;;;7989:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7989:33:7;;;;18391:939;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18391:939:7;;;;7654:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7654:23:7;;;;;;;;-1:-1:-1;;;;;7654:23:7;;;;;;;;;;;;;;9241:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9241:31:7;;;;42693:352;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;42693:352:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19448:2085;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19448:2085:7;;;;;8360:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8360:26:7;;;;43205:299;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;43205:299:7;;;;;8638:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8638:21:7;;;;;;;;;-1:-1:-1;;;;;8638:21:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30011:4892;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;30011:4892:7;;;;;;;;;7541:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7541:40:7;;;;25794:2013;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25794:2013:7;;;;;;;;;;;;;;;;;;;;16245:535;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16245:535:7;-1:-1:-1;;;;;16245:535:7;;;;;;;48994:275;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;48994:275:7;-1:-1:-1;;;;;48994:275:7;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;48994:275:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;48994:275:7;;;;;;;;;;;;;;;;;;37439:1408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37439:1408:7;;-1:-1:-1;37439:1408:7;;-1:-1:-1;;;;;;;37439:1408:7;39503:388;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;39503:388:7;-1:-1:-1;;;;;39503:388:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9390:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9390:25:7;;;;;;;;;-1:-1:-1;;;;;9390:25:7;;;;-1:-1:-1;;;;;9390:25:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18167:176;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18167:176:7;-1:-1:-1;;;;;18167:176:7;;;;;;17347:158;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17347:158:7;-1:-1:-1;;;;;17347:158:7;;;;;;;16986:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16986:137:7;-1:-1:-1;;;;;16986:137:7;;;;;;;24774:684;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;24774:684:7;;;;;;;;;;;;;;;;;;8249:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8249:14:7;;;;7778:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7778:22:7;;;;12509:217;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12509:217:7;;;;-1:-1:-1;;;;;12509:217:7;;;;;;;;;;;;;;;;13785:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13785:125:7;;;;;7431:60;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7431:60:7;;;;21687:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21687:131:7;-1:-1:-1;;;;;21687:131:7;;;-1:-1:-1;;;;;21687:131:7;;;;;35029:485;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;35029:485:7;;;;;49518:381;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;49518:381:7;;;;;;;;;;;;;-1:-1:-1;;;;;49518:381:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13376:247;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13376:247:7;-1:-1:-1;;;;;13376:247:7;;;;;21955:767;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21955:767:7;;;;;52477:218;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;52477:218:7;-1:-1:-1;;;;;52477:218:7;;;-1:-1:-1;;;;;52477:218:7;;;;;17750:184;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17750:184:7;-1:-1:-1;;;;;17750:184:7;;;;;;;42132:417;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;42132:417:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;7870:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7870:18:7;;;;7228:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7228:40:7;;;;9018:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9018:56:7;;;;;;;;;-1:-1:-1;;;;;9018:56:7;;;;;-1:-1:-1;;;;;9018:56:7;;;;;;;-1:-1:-1;;;;;9018:56:7;;;;;;;;;;;;;;7916:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7916:27:7;;;;8299:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8299:26:7;;;;9200:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9200:35:7;;;;35980:1253;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35980:1253:7;;-1:-1:-1;35980:1253:7;;-1:-1:-1;;;;;;;35980:1253:7;23173:1337;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;23173:1337:7;;;;;;;14917:1041;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14917:1041:7;-1:-1:-1;;;;;14917:1041:7;;;;;;;;;;;;;;;;;;;;52071:190;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;52071:190:7;-1:-1:-1;;;;;52071:190:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;52071:190:7;;;;;;;;;;;;;;;;;40247:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;40247:115:7;-1:-1:-1;;;;;40247:115:7;;;;;;;;;;;;9452:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9452:39:7;-1:-1:-1;;;;;9452:39:7;;;;;14072:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14072:125:7;;;;;51092:797;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;51092:797:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;51092:797:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;51092:797:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;51092:797:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;51092:797:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;51092:797:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;51092:797:7;;;;;;;;;;;;;;;;;;;;;;;;;;;50307:526;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;50307:526:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;50307:526:7;;;;;;;;;;;;;;;;;;;12870:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12870:104:7;-1:-1:-1;;;;;12870:104:7;;;;;7329:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7329:35:7;;;;41166:763;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;41166:763:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41166:763:7;;-1:-1:-1;41166:763:7;;-1:-1:-1;;;;;;;41166:763:7;39073:95;;-1:-1:-1;;;;;39073:95:7;;;;;8568:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8568:41:7;;;;40696:233;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;40696:233:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40696:233:7;;-1:-1:-1;40696:233:7;;-1:-1:-1;;;;;;;40696:233:7;7716:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7716:24:7;;;;13118:105;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;13196:8;:20;;-1:-1:-1;;;;;;13196:20:7;-1:-1:-1;;;;;13196:20:7;;;;;;;;;;13118:105::o;8224:19::-;;;;:::o;7989:33::-;;;;:::o;18391:939::-;18444:13;18435:5;;;-1:-1:-1;;;18435:5:7;;;;;:22;;;;;;;;18431:831;;;18506:14;;18487:15;;18481:3;:21;:39;;18473:96;;;;;-1:-1:-1;;;;;18473:96:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18473:96:7;;;;;;;;;;;;;;;18591:21;;18615:1;-1:-1:-1;18583:77:7;;;;;-1:-1:-1;;;;;18583:77:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18583:77:7;;;;;;;;;;;;;;;18699:1;18684:12;:16;18674:7;:26;;;18714:11;;:30;;;-1:-1:-1;;;;;18714:30:7;;;;;;;;;;-1:-1:-1;;;;;18714:11:7;;;;:21;;:30;;;;;:11;;:30;;;;;;;:11;;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;18714:30:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;18758:5:7;:24;;18766:16;;-1:-1:-1;18758:5:7;;-1:-1:-1;;;;;;;18758:24:7;-1:-1:-1;;;18766:16:7;18758:24;;;;;;18431:831;;;18812:16;18803:5;;;-1:-1:-1;;;18803:5:7;;;;;:25;;;;;;;;18799:463;;;18849:11;;18879:7;;18849:38;;;-1:-1:-1;;;;;18849:38:7;;;;;;;;;;-1:-1:-1;;;;;18849:11:7;;;;:29;;:38;;;;;;;;;;;;;;;:11;;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;18849:38:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18849:38:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18849:38:7;18844:2;:43;;;18909:7;;18901:51;;;;;-1:-1:-1;;;;;18901:51:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;18974:13;18966:21;;18974:13;;-1:-1:-1;;;;;;18966:21:7;-1:-1:-1;;;18974:13:7;18966:21;;18799:463;19017:13;19008:5;;;-1:-1:-1;;;19008:5:7;;;;;:22;;;;;;;;19004:258;;;19054:21;;:26;;:69;;;19109:14;;19090:15;;19084:3;:21;:39;;19054:69;19046:170;;;;;;;-1:-1:-1;;;;;19046:170:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19046:170:7;;;;;;;;;;;;;;;19230:5;:21;;-1:-1:-1;;;;;;19230:21:7;;;19004:258;19290:3;19272:15;:21;;;;19308:15;19317:5;;;;;;;;;;;19308:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;18391:939::o;7654:23::-;;;-1:-1:-1;;;;;7654:23:7;;:::o;9241:31::-;;;;:::o;42693:352::-;42753:20;42785:23;42811:8;42820:10;42811:20;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;42862:13:7;42845:14;;;;;;:30;;;;;;;;;42841:197;;;42886:21;42877:30;;42841:197;;;42943:16;42926:14;;;;;;:33;;;;;;;;;42922:116;;;42970:24;42961:33;;42922:116;;;43018:20;43009:29;;42922:116;42693:352;;;;:::o;19448:2085::-;19504:23;19530:8;19539:10;19530:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19564:14:7;;;;;;:33;;;;;;;;;19560:1874;;;19638:13;;;:20;19661:1;-1:-1:-1;19638:24:7;:125;;-1:-1:-1;19707:18:7;;19700:6;:26;;:6;;-1:-1:-1;;;;;19707:18:7;;19700:26;;;;;;;;;;;;;;;;:41;;19747:7;:14;;;;;;;;;;;;19742:20;;;;;;;;19700:63;;;;;;;;;19672:7;:24;;;19666:3;:30;:97;;19638:125;19613:252;;;;;;;-1:-1:-1;;;;;19613:252:7;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19613:252:7;;;;;;;;;;;;;;;19911:13;;;19925:20;;-1:-1:-1;;19925:24:7;;;19911:39;;;;;;;;;;;;;;;:46;19887:20;;;;:70;19879:124;;;;;-1:-1:-1;;;;;19879:124:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19879:124:7;;;;;;;;;;;;;;;20041:18;;20034:6;:26;;:6;;-1:-1:-1;;;;;20041:18:7;;20034:26;;;;;;;;;;;;;;:38;:26;;;;;:38;;;;:68;;20091:11;20034:68;;;20075:13;20034:68;20017:14;;;:85;;-1:-1:-1;;20017:85:7;;;;;;;;;;;;;;;;19560:1874;;;20141:13;20123:14;;;;;;:31;;;;;;;;;20119:1315;;;20236:18;;20229:6;:26;;:6;;-1:-1:-1;;;;;20236:18:7;;20229:26;;;;;;;;;;;;;;;;:41;;20276:7;:14;;;;;;;;;;;;20271:20;;;;;;;;20229:63;;;;;;;;;20201:7;:24;;;20195:3;:30;:97;;:173;;;-1:-1:-1;20322:13:7;;;20336:20;;-1:-1:-1;;20336:24:7;;;20322:39;;;;;;;;;;;;;;;:46;20296:22;;;;:72;20195:173;20170:312;;;;;;;-1:-1:-1;;;;;20170:312:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20170:312:7;;;;;;;;;;;;;;;20513:11;20496:14;;;:28;;-1:-1:-1;;20496:28:7;;20513:11;20496:28;;20119:1315;20563:11;20545:14;;;;;;:29;;;;;;;;;20541:893;;;20656:18;;20649:6;:26;;:6;;-1:-1:-1;;;;;20656:18:7;;20649:26;;;;;;;;;;;;;;;;:41;;20696:7;:14;;;;;;;;;;;;20691:20;;;;;;;;20649:63;;;;;;;;;20621:7;:24;;;20615:3;:30;:97;;:201;;;-1:-1:-1;20770:13:7;;;20784:20;;-1:-1:-1;;20784:24:7;;;20770:39;;;;;;;;;;;;;;;:46;20741:13;;;:20;20716:24;;;:50;;:24;;-1:-1:-1;;20741:24:7;;20716:50;;;;;;;;;;;;;;:100;20615:201;20590:334;;;;;;;-1:-1:-1;;;;;20590:334:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20590:334:7;;;;;;;;;;;;;;;20938:14;;;:30;;20955:13;-1:-1:-1;;20938:30:7;;;;;;21014:18;;20987:46;;-1:-1:-1;;;21014:18:7;;;-1:-1:-1;;;;;21014:18:7;;21002:10;;20987:46;;-1:-1:-1;;20987:46:7;20541:893;;;21072:13;21054:14;;;;;;:31;;;;;;;;;21050:384;;;21150:18;;21143:6;:26;;:6;;-1:-1:-1;;;;;21150:18:7;;21143:26;;;;;;;;;;;;;;;;:41;;21190:7;:14;;;;;;;;;;;;21185:20;;;;;;;;21143:63;;;;;;;;;21115:24;;;;21109:3;:30;:97;;21101:152;;;;;-1:-1:-1;;;;;21101:152:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21101:152:7;;;;;;;;;;;;;;;21267:14;;;:33;;21284:16;;21267:14;-1:-1:-1;;21267:33:7;;21284:16;21267:33;;21050:384;21339:16;21321:14;;;;;;:34;;;;;;;;;21317:117;;;21371:52;;;-1:-1:-1;;;;;21371:52:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21371:52:7;;;;;;;;;;;;;;21317:117;21471:3;21444:24;;;:30;21511:14;;;;21489:37;;21499:10;;21489:37;;21511:14;;;;;21489:37;21511:14;21489:37;;;;;;;;;;;;;;;;;;;;;;;;19448:2085;;:::o;8360:26::-;;;;:::o;43205:299::-;43265:11;43288:23;43314:8;43323:10;43314:20;;;;;;;;;;;;;;;;;;;;;;;43353;;;43374:27;;43314:20;;-1:-1:-1;43353:20:7;-1:-1:-1;;43374:31:7;;;43353:53;;;;;;;;;;;;;;:58;:53;;;;;:58;;;;:144;;43430:20;;;43451:27;;-1:-1:-1;;43451:31:7;;;43430:53;;;;;;;;;;;;;;;;:67;;;43353:144;;;43414:1;43353:144;43344:153;43205:299;-1:-1:-1;;;43205:299:7:o;8638:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8638:21:7;;;;-1:-1:-1;8638:21:7;;;;;;;;:::o;30011:4892::-;30183:23;;;;;;;;;30103:10;30115:16;;9922:8;:20;;9931:10;;9922:20;;;;;;;;;;;;;;:27;:20;;;;;:27;;;;:38;;;;;;;;;9914:47;;;;;;30143:22;:30;;-1:-1:-1;;30143:30:7;;;30209:8;:20;;30218:10;;30209:20;;;;;;;;;;;;;;;;30183:46;;30293:11;30250:7;:31;;30282:7;30250:40;;;;;;;;;;;;;;;;;;:54;30239:65;;30329:7;:31;;30361:7;30329:40;;;;;;;;;;;;;;;;;;30322:3;:47;;30314:56;;;;;;;;30409:28;;;:37;;30438:7;;30409:37;;;;;;;;;;;;;;;30584:20;;;30605:27;;30409:37;;-1:-1:-1;30409:37:7;;-1:-1:-1;30409:37:7;;-1:-1:-1;;;30605:31:7;;;30584:53;;;;;;;;;;;;;;:58;:53;;;;;:58;;;;30583:59;:185;;;;-1:-1:-1;30658:20:7;;;:29;;30679:7;;30658:29;;;;;;;;;;;;;;;;:36;;:105;30695:7;:20;;30746:1;30716:7;:20;;:27;;;;:31;30695:53;;;;;;;;;;;;;;;;;;;;:67;;;30658:105;;;;;;;;;;;;30767:1;30658:110;30583:185;30566:929;;;30955:13;;;:22;;30969:7;;30955:22;;;;;;;;;;;;;;;:29;30949:35;;30945:76;;;30992:13;;;:22;;31006:7;;30992:22;;;;;;;;;;;;;;;:29;;-1:-1:-1;30945:76:7;30566:929;;;31266:13;;;:22;;31280:7;;31266:22;;;;;;;;;;;;;;;:29;31222:31;;;:40;;31254:7;;31222:40;;;;;;;;;;;;;;:73;;:131;;31348:1;;31222:131;;;31298:46;31324:10;31336:7;31298:25;:46::i;:::-;31410:13;;;:22;;31195:158;;-1:-1:-1;31195:158:7;;-1:-1:-1;31410:13:7;31424:7;;31410:22;;;;;;;;;;;;;;;:29;31442:1;31410:33;31404:39;;31400:84;;;31451:13;;;:22;;31465:7;;31451:22;;;;;;;;;;;;;;;:29;31483:1;31451:33;;-1:-1:-1;31400:84:7;31518:31;;;:40;;31550:7;;31518:40;;;;;;;;;;;;;;31509:49;;31504:3159;31564:3;31560:1;:7;31504:3159;;;31608:13;;;:22;;31622:7;;31608:22;;;;;;;;;;;;;31635:7;:13;;31649:7;31635:22;;;;;;;;;;;;;;;;;;;:29;31631:1;:33;;;;;;;;31608:57;;;;;;;;;;;;;;;;;;;;;;;31700:10;;;;31608:57;;-1:-1:-1;31700:10:7;;:176;;;;-1:-1:-1;31746:20:7;;;31767:27;;-1:-1:-1;;31767:31:7;;;31746:53;;;;;;;;;;;;;;;;:67;;;31731:4;:11;;;:82;:144;;;-1:-1:-1;31817:20:7;;;31838:27;;-1:-1:-1;;31838:31:7;;;31817:53;;;;;;;;;;;;;;:58;:53;;;;;:58;;;;31731:144;31679:2027;;;31977:13;;;:22;;31991:7;;31977:22;;;;;;;;;;;;;;;:29;31972:34;;31968:559;;32116:8;;32134:12;;32116:44;;;-1:-1:-1;;;;;32116:44:7;;-1:-1:-1;;;;;32134:12:7;;;32116:44;;;;;;;;;;;;:8;;;;;:17;;:44;;;;;;;;;;;;;;:8;;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;32116:44:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32116:44:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;32240:12:7;;:28;;-1:-1:-1;;;;;32240:12:7;;;;:28;;;;;32258:9;;32240:12;:28;:12;:28;32258:9;32240:12;:28;;;;;;;;32366:10;32352:4;:12;;;;;;;;;;-1:-1:-1;;;;;32352:12:7;-1:-1:-1;;;;;32335:76:7;-1:-1:-1;;;;;;;;;;;32382:11:7;32400:9;32335:76;;;;;;;;;;;;;;;;;;;;;;;;32470:29;;;:38;;32500:7;;32470:38;;;;;;;;;;;;;;;;;;32440:12;;-1:-1:-1;;;;;32440:12:7;32433:20;;:6;:20;;;;;;;:33;;:75;;;;;;;;31968:559;31679:2027;;;32640:13;;;:22;;32654:7;;32640:22;;;;;;;;;;;;;;;:29;32636:33;;32632:1060;;;32836:8;;32855:12;;32836:32;;;-1:-1:-1;;;;;32836:32:7;;-1:-1:-1;;;;;32855:12:7;;;32836:32;;;;;;:8;;;;;:18;;:32;;;;;;;;;;;;;;:8;;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;32836:32:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32836:32:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;32836:32:7;32795:29;;;:38;;32825:7;;32795:38;;;;;;;;;;;;;;:73;:149;;32906:29;;;:38;;32936:7;;32906:38;;;;;;;;;;;;;;32795:149;;;32871:8;;32890:12;;32871:32;;;-1:-1:-1;;;;;32871:32:7;;-1:-1:-1;;;;;32890:12:7;;;32871:32;;;;;;:8;;;;;:18;;:32;;;;;;;;;;;;;;:8;;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;32871:32:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32871:32:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;32871:32:7;32795:149;32966:8;;32988:12;;32966:50;;;-1:-1:-1;;;;;32966:50:7;;-1:-1:-1;;;;;32988:12:7;;;32966:50;;;;33002:4;32966:50;;;;;;;;;;;;32780:164;;-1:-1:-1;32966:8:7;;;:21;;:50;;;;;;;;;;;;;;;:8;;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;32966:50:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32966:50:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;32966:50:7;;;;;;;;;;;;;;;;;33074:10;33060:4;:12;;;;;;;;;;-1:-1:-1;;;;;33060:12:7;-1:-1:-1;;;;;33043:60:7;-1:-1:-1;;;;;;;;;;;33091:7:7;33086:13;;33101:1;33043:60;;;;;;;;;;;;;;;;;;;;;;;;33216:29;;;:38;;33125:32;;;;33246:7;;33216:38;;;;;;;;;;;;;;;;;;33186:12;;-1:-1:-1;;;;;33186:12:7;;;33179:20;;:6;:20;;;;;;:33;;:75;;;;;;;;;33447:12;;;;33440:20;;;;;;33186:12;33440:33;;;;33405:8;;:32;;-1:-1:-1;;;;;33405:32:7;;;;;;;;;;;33440:33;;33405:8;;;;;:18;;:32;;;;;33216:38;;33405:32;;;;;;;:8;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;33405:32:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33405:32:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;33405:32:7;:68;;:83;;-1:-1:-1;33478:10:7;;;;;;33477:11;33405:83;33401:271;;;33528:1;33519:10;;33514:158;33542:12;;-1:-1:-1;;;;;33542:12:7;33535:20;;;;:6;:20;;;;;:39;33531:43;;33514:158;;;33619:12;;-1:-1:-1;;;;;33619:12:7;;33633:20;;;:6;:20;;;;;:35;;33609:63;;33619:12;33633:20;33666:1;;33633:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;33633:35:7;33670:1;33609:9;:63::i;:::-;-1:-1:-1;33576:3:7;;;;;33514:158;;;33760:1;33728:7;:13;;33742:7;33728:22;;;;;;;;;;;;;;;;;;;:29;:33;33723:38;;33719:934;;;33865:24;;;:33;;33890:7;;33865:33;;;;;;;;;;;;;;33902:1;33865:38;:215;;;-1:-1:-1;33908:20:7;;;33929:27;;-1:-1:-1;;33929:31:7;;;33908:53;;;;;;;;;;;;;;:58;:53;;;;;:58;;;;33907:59;:173;;;;-1:-1:-1;33970:20:7;;;:29;;33991:7;;33970:29;;;;;;;;;;;;;;;;:36;;:105;34007:7;:20;;34058:1;34028:7;:20;;:27;;;;:31;34007:53;;;;;;;;;;;;;;;;;;;;:67;;;33970:105;;;;;;;;;;;;34079:1;33970:110;33907:173;33861:778;;;34162:8;;;;;;;;;-1:-1:-1;;;;;34162:8:7;-1:-1:-1;;;;;34162:13:7;:50;34176:7;:26;;34203:7;34176:35;;;;;;;;;;;;;;;;;;34162:50;;;;;;;;;;;;;;;;;;;;;;;;34274:8;;;;;;;;;-1:-1:-1;;;;;34274:8:7;-1:-1:-1;;;;;34274:17:7;;34292:8;;;;;;;;;-1:-1:-1;;;;;34292:8:7;34302:21;34274:50;;;;;-1:-1:-1;;;34274:50:7;;;;;;;-1:-1:-1;;;;;34274:50:7;-1:-1:-1;;;;;34274:50:7;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34274:50:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;34274:50:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;33861:778:7;;-1:-1:-1;33861:778:7;;34361:3;34353:1;34357;34353:5;:11;34349:290;;;34504:21;34464:7;:28;;34493:7;34464:37;;;;;;;;;;;;;;;;;;;:61;34574:46;34600:10;34612:7;34574:25;:46::i;:::-;34547:73;;-1:-1:-1;34547:73:7;-1:-1:-1;34349:290:7;31569:3;;;;;31504:3159;;;34717:21;34676:7;:28;;34705:7;34676:37;;;;;;;;;;;;;;;;;;:62;;34672:129;;;34780:21;34740:7;:28;;34769:7;34740:37;;;;;;;;;;;;;;;;;;;:61;34672:129;34854:3;34811:7;:31;;34843:7;34811:40;;;;;;;;;;;;;;;;;;;:46;-1:-1:-1;;34867:22:7;:29;;-1:-1:-1;;34867:29:7;34892:4;34867:29;;;-1:-1:-1;;;;;;;;;;;;30011:4892:7:o;7541:40::-;7578:3;7541:40;:::o;25794:2013::-;25933:23;;;25898:10;25910:11;;9922:8;:20;;9931:10;;9922:20;;;;;;;;;;;;;;:27;:20;;;;;:27;;;;:38;;;;;;;;;9914:47;;;;;;25959:8;:20;;25968:10;;25959:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;25997:19:7;;25989:28;;;;;;26046:23;;;;26035:34;;;26027:128;;;;;-1:-1:-1;;;;;26027:128:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26027:128:7;;;;;;;;;;;;;;;26207:1;26198:10;;26193:720;26210:19;;;26193:720;;;26258:13;;;26272:20;;26322:10;;26258:13;-1:-1:-1;;26272:24:7;;;26258:39;;;;;;;;;;;;;26298:8;;26307:1;26298:11;;;;;;;;;;;;;;;26258:52;;;;;;;;;;;;;;;;;;;;;;;:60;-1:-1:-1;;;;;26258:60:7;:74;26250:118;;;;;-1:-1:-1;;;;;26250:118:7;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;26250:118:7;;;;;;;;;;;;;;;26415:18;;26408:6;:26;;:6;;-1:-1:-1;;;;;26415:18:7;;26408:26;;;;;;;;;;;;;;:38;:26;;;;;:38;;;;26407:39;;:131;;-1:-1:-1;26513:25:7;;;;;;;;;;;;;;;;;;;;;;;26450:13;;;26464:20;;-1:-1:-1;;26464:24:7;;;26450:39;;;;;;;;;;;;;26490:8;;26499:1;26490:11;;;;;;;;;;;;;;;26450:52;;;;;;;;;;;;;;;;;;;;:59;;;:88;;;;26407:131;26382:254;;;;;;;-1:-1:-1;;;;;26382:254:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26659:13;;;26673:20;;-1:-1:-1;;26673:24:7;;;26659:39;;;;;;;;;;;;;26699:8;;26708:1;26699:11;;;;;;;;;;;;;;;26659:52;;;;;;;;;;;;;;;;;;:58;:52;;;;;:58;;;;26658:59;26650:90;;;;;-1:-1:-1;;;;;26650:90:7;;;;;;;;;;;;-1:-1:-1;;;;;26650:90:7;;;;;;;;;;;;;;;26754:13;;;26768:20;;26816:7;;26754:13;-1:-1:-1;;26768:24:7;;;26754:39;;;;;;;;;;;;;26794:8;;26803:1;26794:11;;;;;;;;;;;;;;;26754:52;;;;;;;;;;;;;;;;;;;;;;;:59;;:69;;;;26837:13;;26851:20;;26898:4;;26837:13;-1:-1:-1;;26851:24:7;;;26837:39;;;;;;;;;;;;;26877:8;;26886:1;26877:11;;;;;;;;;;;;;;;26837:52;;;;;;;;;;;;;;;;;;;;;;;:58;;:65;;-1:-1:-1;;26837:65:7;;;;;;;;;;-1:-1:-1;26231:3:7;;;;;26193:720;;;26947:13;;;:20;26922:24;;;:50;;26976:8;;-1:-1:-1;;26947:24:7;;26922:50;;;;;;;;;;;;;;;:69;;;;;;;27070:20;;;27091:27;;-1:-1:-1;;27091:31:7;;;27070:53;;;;;;;;;;;;;;27133:27;;;:18;27070:53;;;;;27133:18;;;:27;;;;;;:46;;;;;;27204:25;;27070:53;;-1:-1:-1;27193:36:7;;27189:612;;;27282:16;;;;;;27278:46;;;27300:16;;;:24;;-1:-1:-1;;27300:24:7;;;27278:46;27189:612;;;27464:25;;27445:45;;;;:18;;;:45;;;;;;;27414:27;;;;;;:76;27410:381;;;27523:16;;;;;;27522:17;27518:46;;;27541:16;;;:23;;-1:-1:-1;;27541:23:7;27560:4;27541:23;;;27410:381;;;27638:25;;27619:45;;;;:18;;;:45;;;;;;;27589:27;;;;;;:75;27585:206;;;27699:35;;;27752:16;;;:24;;-1:-1:-1;;27752:24:7;;;27585:206;25794:2013;;;;;;;;;;:::o;16245:535::-;16447:6;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;-1:-1:-1;;;;;16355:16:7;;;;:76;;;16422:9;16375:6;16382;16389:11;-1:-1:-1;;;;;16382:19:7;;;;;;;;;;;;;;;;;;;;;;;;:26;16375:34;;-1:-1:-1;;;;;16382:26:7;;;;16375:34;;;;;;;;;;;;;;;;:43;;;:56;;16355:76;16347:85;;;;;;;;-1:-1:-1;16456:1:7;16442:281;16463:6;:19;;-1:-1:-1;;;;;16463:19:7;;;;;;;;;;;;;;;;;;;:28;;:35;;;;16459:1;:39;16442:281;;;16596:9;16544:6;16551;16558:11;-1:-1:-1;;;;;16551:19:7;;;;;;;;;;;;;;;;;;;;;:28;;16580:1;16551:31;;;;;;;;;;;;;;;;;;16544:39;;;;;;;;;;;;;;;;;;;;:48;;;:61;;16519:193;;;;;;;-1:-1:-1;;;;;16519:193:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16519:193:7;;;;;;;;;;;;;;;16500:3;;16442:281;;;16764:9;16733:6;16740:11;-1:-1:-1;;;;;16733:19:7;;;;;;;;;;;;;;;;;;;;;:28;;:40;;;;16245:535;;;:::o;48994:275::-;49066:15;49091:22;;:::i;:::-;49130;49155:6;49162:11;-1:-1:-1;;;;;49155:19:7;;;;;;;;;;;;;;;;;;;;;49130:44;;49195:8;:17;;49184:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;49222:40:7;;;;;;;;;;49184:28;;-1:-1:-1;49239:23:7;;;;-1:-1:-1;49222:40:7;;-1:-1:-1;49222:40:7;-1:-1:-1;49239:23:7;49222:40;;;;;;;;;;;;;;;;;;;;;;;;48994:275;;;;:::o;37439:1408::-;37622:23;37544:10;37556;1031:34:14;1042:10;1054;1031;:34::i;:::-;1018:9;:47;;1010:97;;;;;-1:-1:-1;;;;;1010:97:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1010:97:14;;;;;;;;;;;;;;;37585:10:7;37597:13;;9922:8;:20;;9931:10;;9922:20;;;;;;;;;;;;;;:27;:20;;;;;:27;;;;:38;;;;;;;;;9914:47;;;;;;37648:8;:20;;37657:10;;37648:20;;;;;;;;;;;;;;;;;;;37721:18;;37648:20;;-1:-1:-1;;;;37721:18:7;;-1:-1:-1;;;;;37721:18:7;37699:10;:41;37678:134;;;;;-1:-1:-1;;;;;37678:134:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;37678:134:7;;;;;;;;;;;;;;;37883:18;;37876:6;:26;;:6;;-1:-1:-1;;;;;37883:18:7;;37876:26;;;;;;;;;;;;;;:45;:26;;;;;:45;;37826:13;;;37840:20;;-1:-1:-1;;37840:24:7;;;37826:39;;;;;;;;;;;;;;;:46;:95;37822:195;;37991:18;;37984:6;:26;;:6;;-1:-1:-1;;;;;37991:18:7;;37984:26;;;;;;;;;;;;;;;;;;;:33;37963:54;;-1:-1:-1;;;;;;37963:54:7;-1:-1:-1;;;;;37984:33:7;;;37963:54;;;37822:195;38027:14;;;:32;;-1:-1:-1;;38027:32:7;;;38096:3;38069:24;;;:30;38244:18;;38237:6;:26;;:6;;-1:-1:-1;;;;;38244:18:7;;38237:26;;;;;;;;;;;;;;;;:38;;;38225:9;:50;;;;;;;38178:13;;;38192:22;;38225:50;;;;;38192:22;38178:13;38192:22;;;;:::i;:::-;38178:37;;;;;;;;;;;;;;;:97;;;;;:::i;:::-;-1:-1:-1;38285:20:7;;;38306:29;;38344:4;;38285:20;38306:29;38285:20;38306:29;;;;:::i;:::-;38285:51;;;;;;;;;;;;;;;;;;;;;:56;;:63;;-1:-1:-1;;38285:63:7;;;;;;;;;;38439:18;;38432:6;:26;;38358:29;;;;7578:3;;38432:6;-1:-1:-1;;;;;38439:18:7;;;;38432:26;;;;;;;;;;;;;;:32;:26;;;;;:32;;38401:18;;38394:6;:26;;:6;;-1:-1:-1;;;;;38401:18:7;;38394:26;;;;;;;;;;;;;;;;:35;;;:70;38393:88;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;38358:124:7;;;;;;;38393:88;;;;38358:124;;;;;;;;38492:26;;;27:10:-1;;23:18;;;45:23;;38492:42:7;;;;;;38524:9;38492:42;;;38544:20;;;:24;;;38578:22;;;:26;;;38614:24;;;27:10:-1;;23:18;;;45:23;;38614:32:7;;;;;;;;;;38656:31;;;27:10:-1;;23:18;;;45:23;;38656:39:7;;;;;;;;;;38705:28;;;27:10:-1;;23:18;;;45:23;;38705:36:7;;;;;;;;;;38751:21;:23;;;;;;;38790:50;;38828:10;;38805;;38790:50;;-1:-1:-1;38790:50:7;1117:1:14;;37439:1408:7;;;;;:::o;39503:388::-;39608:22;;39580:12;;;;39608:22;;39604:257;;;39701:8;;:25;;;-1:-1:-1;;;;;39701:25:7;;-1:-1:-1;;;;;39701:25:7;;;;;;;;;39729:7;;39701:8;;;;;:18;;:25;;;;;;;;;;;;;;;:8;;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;39701:25:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;39701:25:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;39701:25:7;-1:-1:-1;;;;;39767:13:7;;;;;;:6;39701:25;39767:13;;;;:26;;;39701:35;;;;-1:-1:-1;39754:39:7;;;:82;;-1:-1:-1;;;;;;39810:13:7;;;;;;:6;:13;;;;;:26;;;39797:39;;39754:82;39750:100;;;39845:5;39838:12;;;;39750:100;39880:4;39870:14;;39503:388;;;;;;;:::o;9390:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9390:25:7;;;-1:-1:-1;;;;9390:25:7;;;-1:-1:-1;;;;;9390:25:7;;;;;;;;;;;;;;;;:::o;18167:176::-;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;18321:15;18284:6;18291:11;-1:-1:-1;;;;;18284:19:7;;;;;;;;;;;;;;;;;;;;;:34;;:52;;;;;;;:::i;:::-;;18167:176;;:::o;17347:158::-;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;17486:12;17452:6;17459:11;-1:-1:-1;;;;;17452:19:7;;;;;;;;;;;;;;;;;;;;;:31;;:46;;;;17347:158;;:::o;16986:137::-;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;17110:6;17082;17089:11;-1:-1:-1;;;;;17082:19:7;;;;;;;;;;;;;;;;;;;;;:25;;:34;;;;16986:137;;:::o;24774:684::-;24908:23;;24871:10;24883:13;;9922:8;:20;;9931:10;;9922:20;;;;;;;;;;;;;;:27;:20;;;;;:27;;;;:38;;;;;;;;;9914:47;;;;;;24934:8;:20;;24943:10;;24934:20;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24972:21:7;;;24964:30;;;;;;25018:1;25009:10;;25004:397;25021:19;;;25004:397;;;25069:13;;;25083:20;;25133:10;;25069:13;-1:-1:-1;;25083:24:7;;;25069:39;;;;;;;;;;;;;25109:8;;25118:1;25109:11;;;;;;;;;;;;;;;25069:52;;;;;;;;;;;;;;;;;;;;;;;:60;-1:-1:-1;;;;;25069:60:7;:74;25061:118;;;;;-1:-1:-1;;;;;25061:118:7;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;25061:118:7;;;;;;;;;;;;;;;25201:13;;;25215:20;;25272:1;;25201:13;-1:-1:-1;;25215:24:7;;;25201:39;;;;;;;;;;;;;25241:8;;25250:1;25241:11;;;;;;;;;;;;;;;25201:52;;;;;;;;;;;;;;;;;;:59;:52;;;;;:59;;:73;25193:114;;;;;-1:-1:-1;;;;;25193:114:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;25321:13;;;25335:20;;25383:7;;25321:13;-1:-1:-1;;25335:24:7;;;25321:39;;;;;;;;;;;;;25361:8;;25370:1;25361:11;;;;;;;;;;;;;;;25321:52;;;;;;;;;;;;;;;;;;:59;:52;;;;;:59;;:69;;;;25042:3;;;;;25004:397;;;-1:-1:-1;;;25410:22:7;;:41;;;;;;;;-1:-1:-1;;;24774:684:7:o;8249:14::-;;;;:::o;7778:22::-;;;-1:-1:-1;;;;;7778:22:7;;:::o;12509:217::-;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;12633:12;-1:-1:-1;;;;;12633:17:7;12657:7;12666:5;;12633:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12625:48;;;;;;;;12509:217;;;;:::o;13785:125::-;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;13871:14;:32;13785:125::o;7431:60::-;-1:-1:-1;;;;;7431:60:7;:::o;21687:131::-;21768:42;21778:10;21790:11;21803:6;21768:9;:42::i;:::-;21760:51;;;;;;;;21687:131;;:::o;35029:485::-;35135:23;;35095:10;35107:16;;9922:8;:20;;9931:10;;9922:20;;;;;;;;;;;;;;:27;:20;;;;;:27;;;;:38;;;;;;;;;9914:47;;;;;;35161:8;:20;;35170:10;;35161:20;;;;;;;;;;;;;;;;;;;35200:13;;;;35161:20;;-1:-1:-1;35200:13:7;;35199:14;35191:51;;;;;-1:-1:-1;;;;;35191:51:7;;;;;;;;;;;;-1:-1:-1;;;;;35191:51:7;;;;;;;;;;;;;;;35252:13;;;:20;;-1:-1:-1;;35252:20:7;35268:4;35252:20;;;35303;;;35324:27;;-1:-1:-1;;35324:31:7;;;35303:53;;;;;;;;;;;;;;:58;:53;;;;;:58;;;;:144;;35380:20;;;35401:27;;-1:-1:-1;;35401:31:7;;;35380:53;;;;;;;;;;;;;;;;:67;;;35303:144;;;35364:1;35303:144;35457:18;;:50;;;-1:-1:-1;;;;;35457:50:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;35457:18:7;;;-1:-1:-1;;;;;35457:18:7;;:23;;:50;;;;;-1:-1:-1;;35457:50:7;;;;;;;;-1:-1:-1;35457:18:7;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;35457:50:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35457:50:7;;;;35029:485;;;;;:::o;49518:381::-;49611:15;49636:14;49660:11;49681:10;49708:17;49728:8;49737:10;49728:20;;;;;;;;;;;;;;;;;;;;:26;;49755:7;49728:35;;;;;;;;;;;;;;;;;49764:7;49728:44;;;;;;;;;;;;;;;;;;;;;;;49792:12;;;49823:11;;;49853;;;;49882:10;;;;;-1:-1:-1;;;;;49792:12:7;;;;49823:11;;-1:-1:-1;49853:11:7;;-1:-1:-1;49882:10:7;;;-1:-1:-1;49518:381:7;-1:-1:-1;;;;;49518:381:7:o;13376:247::-;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;13455:11;:26;;-1:-1:-1;;;;;;13455:26:7;-1:-1:-1;;;;;13455:26:7;;;;;-1:-1:-1;13495:5:7;;;-1:-1:-1;;;13495:5:7;;;;;:25;;;;;;;;13491:126;;;13561:1;13546:12;:16;13536:7;:26;;;13576:11;;:30;;;-1:-1:-1;;;;;13576:30:7;;;;;;;;;;-1:-1:-1;;;;;13576:11:7;;;;:21;;:30;;;;;:11;;:30;;;;;;;:11;;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;13576:30:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13576:30:7;;;;13491:126;13376:247;:::o;21955:767::-;22056:21;;;;;;9672:5;;;-1:-1:-1;;;9672:5:7;;;;;:15;;;;;;;;9664:24;;;;;;22122:19;;22118:1;22103:11;22081:19;;:33;22080:39;:61;:137;;22206:11;22080:137;;;22179:19;;22157;;:41;22202:1;22156:47;22080:137;22257:19;;22056:161;;-1:-1:-1;22257:38:7;;;;-1:-1:-1;22313:45:7;;;22305:54;;;;;;22383:19;;22374:28;;22369:293;22408:22;22404:1;:26;22369:293;;;22493:19;;;;:16;:19;;;;;22536:23;;;22589:21;;;22493:19;;-1:-1:-1;22526:85:7;;-1:-1:-1;;;;;22536:23:7;;;-1:-1:-1;;;22561:26:7;;-1:-1:-1;;;;;22561:26:7;;-1:-1:-1;;;;;22589:21:7;22526:9;:85::i;:::-;-1:-1:-1;22632:19:7;;;;:16;:19;;;;;22625:26;;;;;;;;;-1:-1:-1;;;;;;22625:26:7;;;22432:3;;;;22369:293;;;-1:-1:-1;;;22671:19:7;:44;-1:-1:-1;;21955:767:7:o;52477:218::-;52554:10;52583:25;;:17;-1:-1:-1;;;;;52609:20:7;;52631:56;52665:8;52617:11;52631:33;:56::i;:::-;52583:105;;;-1:-1:-1;;;52583:105:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:2:-1;;;;30:1;27;20:12;5:2;52583:105:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;52583:105:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;52583:105:7;;52477:218;-1:-1:-1;;;52477:218:7:o;17750:184::-;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;17908:19;17867:6;17874:11;-1:-1:-1;;;;;17867:19:7;;;;;;;;;;;;;;;;;;;;;:38;;:60;;;;17750:184;;:::o;42132:417::-;42191:10;42203:8;42223:23;42249:8;42258:10;42249:20;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;42301:13:7;42283:14;;;;;;:31;;;;;;;;;42279:264;;;42338:24;;;;42416:18;;42409:6;:26;;42338:24;;-1:-1:-1;42409:6:7;-1:-1:-1;;;;;42416:18:7;;;;42409:26;;;;;;;;;;;;;;:62;:26;;;;;:62;;42456:13;42382:24;;;:89;;-1:-1:-1;42279:264:7;;;42510:1;42502:9;;42531:1;42525:7;;42279:264;42132:417;;;;:::o;7870:18::-;;;-1:-1:-1;;;7870:18:7;;;;;:::o;7228:40::-;7267:1;7228:40;:::o;9018:56::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9018:56:7;;;-1:-1:-1;;;9018:56:7;;-1:-1:-1;;;;;9018:56:7;;-1:-1:-1;;;;;9018:56:7;;:::o;7916:27::-;;;;:::o;8299:26::-;;;;:::o;9200:35::-;;;;:::o;35980:1253::-;36123:14;36151:17;36170:14;36282:23;36103:10;842:27:14;858:10;842:15;:27::i;:::-;829:9;:40;;821:95;;;;;-1:-1:-1;;;;;821:95:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;821:95:14;;;;;;;;;;;;;;;36188:45:7;36222:10;36188:33;:45::i;:::-;36255:8;:17;;36150:83;;-1:-1:-1;36150:83:7;;-1:-1:-1;36255:17:7;;;;;;:::i;:::-;36243:29;;36308:8;36317:9;36308:19;;;;;;;;;;;;;;;;;;;;;;;36337:31;;-1:-1:-1;;;;;;36337:31:7;-1:-1:-1;;;;;36337:31:7;;;;;;;36378:43;;36410:10;-1:-1:-1;;;36378:43:7;;;;;-1:-1:-1;36431:23:7;;:42;;;36483:14;;;:32;;-1:-1:-1;;36483:32:7;;;36552:3;36525:24;;;:30;36693:6;:26;;36308:19;;-1:-1:-1;36693:6:7;36700:18;;;36693:26;;;;;;;;;;;;;;;;:38;;;36681:9;:50;;;;;;;36634:13;;;36648:22;;36681:50;;;;;36648:22;36634:13;36648:22;;;;:::i;:::-;36634:37;;;;;;;;;;;;;;;:97;;;;;:::i;:::-;-1:-1:-1;36741:20:7;;;36762:29;;36800:4;;36741:20;36762:29;36741:20;36762:29;;;;:::i;:::-;36741:51;;;;;;;;;;;;;;;;;;;;;:56;;:63;;-1:-1:-1;;36741:63:7;;;;;;;;;;36895:18;;36888:6;:26;;36814:29;;;;7578:3;;36888:6;-1:-1:-1;;;;;36895:18:7;;;;36888:26;;;;;;;;;;;;;;:32;:26;;;;;:32;;36857:18;;36850:6;:26;;:6;;-1:-1:-1;;;;;36857:18:7;;36850:26;;;;;;;;;;;;;;;;:35;;;:70;36849:88;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;36814:124:7;;;;;;;36849:88;;;;36814:124;;;;;;;;36948:26;;;27:10:-1;;23:18;;;45:23;;36948:42:7;;;;;;36980:9;36948:42;;;37000:24;;;27:10:-1;;23:18;;;45:23;;37000:32:7;;;;;;;;;;37042:31;;;27:10:-1;;23:18;;;45:23;;37042:39:7;;;;;;;;;;37091:28;;;27:10:-1;;23:18;;;45:23;;37091:36:7;;;;;;;;;;37137:21;:23;;;;;;;37176:50;;37214:10;;37192:9;;37176:50;;-1:-1:-1;37176:50:7;35980:1253;;;;;;;;:::o;23173:1337::-;23346:23;;;;;23275:13;;9672:5;;;-1:-1:-1;;;9672:5:7;;;;;:15;;;;;;;;9664:24;;;;;;23307:10;23319:15;;9922:8;:20;;9931:10;;9922:20;;;;;;;;;;;;;;:27;:20;;;;;:27;;;;:38;;;;;;;;;9914:47;;;;;;23372:8;:20;;23381:10;;23372:20;;;;;;;;;;;;;;;;23346:46;;23441:11;23418:7;:20;;;:34;23402:50;;23482:7;:20;;;23470:8;:32;;23462:41;;;;;;;;23566:13;;;23580:20;;-1:-1:-1;;23580:24:7;;;23566:39;;;;;;;;;;;;;;;:46;23555:57;;23551:120;;;23625:13;;;23639:20;;-1:-1:-1;;23639:24:7;;;23625:39;;;;;;;;;;;;;;;:46;;-1:-1:-1;23551:120:7;23695:7;:20;;;23686:29;;23681:782;23721:8;23717:1;:12;23681:782;;;23944:18;;23980:2;;23970:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23913:87:7;;:17;:87;;;;-1:-1:-1;;;;;23944:18:7;;;23913:87;;;;;;;;;;;;23879:122;;23913:22;;;;:87;;;;;23970:28;23913:87;;;;;:22;:87;;;5:2:-1;;;;30:1;27;20:12;5:2;23913:87:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23913:87:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23913:87:7;23879:33;:122::i;:::-;24046:13;;;24060:20;;23791:210;;-1:-1:-1;;;;;;23791:210:7;;;;;-1:-1:-1;23791:210:7;;-1:-1:-1;;24060:24:7;;;24046:39;;;;;;;;;;;;;24086:1;24046:42;;;;;;;;;;;;;;;;;;;;;;;:65;;-1:-1:-1;;;;;;24046:65:7;-1:-1:-1;;;;;24046:65:7;;;;;;;;;;24162:29;;;24192:36;;-1:-1:-1;;24192:40:7;;;24162:71;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24125:20:7;;;;;:6;:20;;;;;;;:33;;:108;;;;;;;;24283:13;;;:20;24252:59;;-1:-1:-1;;24283:24:7;;;24252:59;;;;;;;;;;24271:10;;24125:20;;24252:59;;;;;;;;;24377:13;;;24391:20;;24426:1;;24377:13;-1:-1:-1;;24391:24:7;;;24377:39;;;;;;;;;;;;;;;:46;:50;24372:55;;24368:84;;;24429:21;:23;;-1:-1:-1;;24429:23:7;;;24368:84;23731:3;;;;;23681:782;;;-1:-1:-1;;;;;24472:20:7;;;;;:31;-1:-1:-1;;;23173:1337:7:o;14917:1041::-;15368:17;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;15240:9;15212:6;15219:7;-1:-1:-1;;;;;15212:15:7;;;;;;;;;;;;;;;;;;;;;:24;;;:37;;15204:121;;;;;;;-1:-1:-1;;;;;15204:121:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15204:121:7;;;;;;;;;;;;;;;15420:355;;;;;;;;-1:-1:-1;;;;;15420:355:7;;;;15487:13;;-1:-1:-1;15487:13:7;;15420:355;15487:13;;;;;15420:355;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15779:1;;15408:6;;15420:355;;;;;;15745:15;;15420:355;;;;15745:15;;15420:355;15745:15;15420:355;;-1:-1:-1;;;15420:355:7;;;;-1:-1:-1;;27:10;;39:1;23:18;;;45:23;;;-1:-1;15408:368:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15408:368:7;-1:-1:-1;;;;;15408:368:7;;;;;;;;;;;;;;;23:18:-1;;15408:368:7;;;;;;;;;:::i;:::-;-1:-1:-1;15408:368:7;;;;;;;;;-1:-1:-1;;15408:368:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;15800:69:7;;;-1:-1:-1;;;;;15800:69:7;;:17;:69;;;;15408:372;;;;-1:-1:-1;;;;;15829:19:7;;15800:69;;;;;;;;;;;;15408:372;;-1:-1:-1;15800:28:7;;;;:69;;;;;-1:-1:-1;;;15800:69:7;;;;;:28;:69;;;5:2:-1;;;;30:1;27;20:12;5:2;15800:69:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15800:69:7;;;;15910:6;15917:7;-1:-1:-1;;;;;15910:15:7;;;;;;;;;;;;;;;;;;;:24;:15;;;;;:24;;27:10:-1;;23:18;;;45:23;;15910:41:7;;;;;-1:-1:-1;;;;;15910:41:7;;;;;;-1:-1:-1;;;;;;;;14917:1041:7:o;52071:190::-;-1:-1:-1;;;;;52197:16:7;;52175:19;52197:16;;;:6;:16;;;;;;;;;52223:31;;;;;;;;;;;;;;;;;52138:20;;52197:16;;;;52223:31;;;52197:16;52223:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;52223:31:7;-1:-1:-1;;;;;52223:31:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52071:190;;;;:::o;40247:115::-;-1:-1:-1;40355:4:7;;40247:115;-1:-1:-1;;40247:115:7:o;9452:39::-;;;;;;;;;;;;;;;;;;;;;:::o;14072:125::-;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;14158:14;:32;14072:125::o;51092:797::-;51160:19;51189:28;51227:25;51262:23;51295:30;51335:27;51379:23;51497:6;51405:8;51414:10;51405:20;;;;;;;;;;;;;;;;;;;;51379:46;;51461:7;:13;;:20;;;;51450:32;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;51450:32:7;;51435:47;;51506:1;51497:10;;51492:89;51513:13;;;:20;51509:24;;51492:89;;;51558:13;;;:16;;51572:1;;51558:16;;;;;;;;;;;;;;;:23;51540:15;;:12;;51553:1;;51540:15;;;;;;;;;;;;;;:41;51535:3;;51492:89;;;51615:7;:29;;51591:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51675:7;:26;;51654:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51730:7;:24;;51711:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51790:7;:31;;51764:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51854:7;:28;;51831:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51092:797;;;;;;;;;:::o;50307:526::-;50393:18;50421:13;50444:9;50470:23;50526:31;50713:6;50496:8;50505:10;50496:20;;;;;;;;;;;;;;;;;;;;50470:46;;50560:7;:20;;50581:7;50560:29;;;;;;;;;;;;;;;;;;;;50526:63;;50615:11;:25;;;50599:41;;50670:7;:23;;;50696:1;50670:27;50659:39;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;50659:39:7;;50650:48;;50722:1;50713:10;;50708:85;50730:23;;;;50725:28;;50708:85;;50772:21;;;;:18;;;:21;;;;;;50760:9;;:6;;50791:1;;50760:9;;;;;;;;;;;;;;:33;50755:3;;50708:85;;;-1:-1:-1;50810:16:7;;;50307:526;;;;-1:-1:-1;;50810:16:7;;;;;-1:-1:-1;50307:526:7;-1:-1:-1;50307:526:7:o;12870:104::-;10121:8;;-1:-1:-1;;;;;10121:8:7;10133:10;10121:22;10113:31;;;;;;12947:8;:20;;-1:-1:-1;;;;;;12947:20:7;-1:-1:-1;;;;;12947:20:7;;;;;;;;;;12870:104::o;7329:35::-;7363:1;7329:35;:::o;41166:763::-;41241:9;41262:23;41318;41288:8;41297:10;41288:20;;;;;;;;;;;;;;;;;;;;;;;41344:13;;;41358:20;;41288;;-1:-1:-1;41344:13:7;-1:-1:-1;;41358:24:7;;;41344:39;;;;;;;;;;;;;;;:46;41433:18;;41426:6;:26;;41344:46;;-1:-1:-1;41426:6:7;-1:-1:-1;;;;;41433:18:7;;;;41426:26;;;;;;;;;;;;;;;;:45;;;41404:18;:67;;41400:522;;;41519:18;;-1:-1:-1;;;;;41519:18:7;:23;41515:271;;;-1:-1:-1;;;;;41593:25:7;;41515:271;;;41714:18;;41700:6;41707:26;;41784:1;41779;41758:22;;41757:28;;41700:6;;-1:-1:-1;;;;;41714:18:7;;;;41707:26;;;;;;;;;;;;;;;;;;;:33;41700:41;;-1:-1:-1;;;;;41707:33:7;;;;41700:41;;;;;;;;;;;;;;;;:53;;;:86;41693:93;;41515:271;41400:522;;;41858:18;;41851:6;:26;;41920:1;41915;41894:22;;41893:28;;-1:-1:-1;;;;;41858:18:7;;41851:26;;;;;;;;;;;;;;;;:38;;;:71;41844:78;;41400:522;41166:763;;;;;;:::o;39073:95::-;-1:-1:-1;39134:12:7;;39073:95::o;8568:41::-;;;;;;:::o;40696:233::-;40759:9;40781:17;40800:14;40818:45;40852:10;40818:33;:45::i;:::-;40780:83;;;;40913:9;40880:6;40887:10;-1:-1:-1;;;;;40880:18:7;;;;;;;;;;;;;;;;;;;;;:30;;;:42;40873:49;;40696:233;;;;;:::o;7716:24::-;;;-1:-1:-1;;;;;7716:24:7;;:::o;28043:1200::-;28130:16;28148:14;28174:23;28438:16;28894:18;28996;28200:8;28209:10;28200:20;;;;;;;;;;;;;;;;;;;;;;;28289;;;28310:27;;28200:20;;-1:-1:-1;28289:20:7;-1:-1:-1;;28310:31:7;;;28289:53;;;;;;;;;;;;;;:58;:53;;;;;:58;;;;28285:952;;;28457:24;;;:33;;28482:7;;28457:33;;;;;;;;;;;;;;28438:52;;28522:1;28508:11;:15;28504:283;;;28597:11;28557:7;:28;;28586:7;28557:37;;;;;;;;;;;;;;;;;;:51;;;;;;;;28543:65;;28676:11;28638:7;:26;;28665:7;28638:35;;;;;;;;;;;;;;;;;;:49;;;;;;;;28626:61;;28504:283;;;28740:1;28726:15;;28771:1;28759:13;;28504:283;28285:952;;;28915:20;;;28936:27;;-1:-1:-1;;28936:31:7;;;28915:53;;;;;;;;;;;;;;;;:67;;;28894:88;;29017:7;:20;;29038:7;29017:29;;;;;;;;;;;;;;;;;;;;:36;;:51;29054:13;29017:51;;;;;;;;;;;;28996:72;;29136:13;29096:7;:28;;29125:7;29096:37;;;;;;;;;;;;;;;;;;:53;;;;;;;;29082:67;;29213:13;29175:7;:26;;29202:7;29175:35;;;;;;;;;;;;;;;;;;:51;;;;;;;;29163:63;;28285:952;28043:1200;;;;;;;;;:::o;44154:2232::-;44244:14;44756:19;44804;44892:17;45134:18;45561:6;45972:13;46003:22;44290:6;:13;;;;44276:11;-1:-1:-1;;;;;44276:27:7;;44274:30;44270:60;;;44325:5;44318:12;;;;44270:60;44387:13;44378:5;;;-1:-1:-1;;;44378:5:7;;;;;:22;;;;;;;;44374:198;;44458:78;;;;;;;;;44485:8;-1:-1:-1;;;;;44458:78:7;;;;;44507:11;-1:-1:-1;;;;;44458:78:7;;;;;44527:6;-1:-1:-1;;;;;44458:78:7;;;;44416:16;:39;44435:19;;44433:21;;;;;;;;;;44416:39;;;;;;;;;;;:120;;;;;;;;;;;;;-1:-1:-1;;;;;44416:120:7;;;;;-1:-1:-1;;;;;44416:120:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;44416:120:7;;;;;-1:-1:-1;;;;;44416:120:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;44416:120:7;;;;;-1:-1:-1;;;;;44416:120:7;;;;;;;;;44557:4;44550:11;;;;44374:198;-1:-1:-1;;;;;44588:11:7;;;;:53;;;44635:6;-1:-1:-1;;;;;44603:38:7;:6;44610:11;-1:-1:-1;;;;;44603:19:7;;;;;;;;;;;;;;;;;;;;;:28;;;:38;;44588:53;44586:56;44582:86;;;44663:5;44656:12;;;;44582:86;-1:-1:-1;;;;;44778:16:7;;;;;;:6;:16;;;;;;-1:-1:-1;44826:56:7;44785:8;44870:11;44826:33;:56::i;:::-;44912:60;;;-1:-1:-1;;;;;44912:60:7;;:17;:60;;;;-1:-1:-1;;;;;44938:20:7;;44912:60;;;;;;;;;;;;44804:78;;-1:-1:-1;44912:25:7;;;;:60;;;;;;;;;;;;;;;:25;:60;;;5:2:-1;;;;30:1;27;20:12;5:2;44912:60:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44912:60:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;44912:60:7;;-1:-1:-1;;;;;;44988:11:7;;;;:31;;;45018:1;45003:12;:16;44988:31;:77;;;-1:-1:-1;45023:24:7;;7267:1;-1:-1:-1;44988:77:7;44986:80;44982:110;;;45087:5;45080:12;;;;44982:110;45155:18;;;;:33;;;-1:-1:-1;;;;;45155:42:7;;;;;;-1:-1:-1;45260:11:7;;:60;;-1:-1:-1;45275:8:7;;:28;;;-1:-1:-1;;;;;45275:28:7;;-1:-1:-1;;;;;45275:28:7;;;;;;;;;45307:13;;45275:8;;;;;:18;;:28;;;;;;;;;;;;;;;:8;;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;45275:28:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;45275:28:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;45275:28:7;:45;;45260:60;45258:63;45254:93;;;45342:5;45335:12;;;;45254:93;45481:18;;;:34;;;-1:-1:-1;;;;;45529:11:7;;;45525:400;;;45570:1;45561:10;;45556:295;45577:24;;45573:28;;45556:295;;;45628:20;;-1:-1:-1;;;;;45628:35:7;;;:5;;45646:1;;45628:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;45628:20:7;:35;45624:227;;;45728:24;;45710:5;;-1:-1:-1;;45728:28:7;;;45710:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;45710:47:7;45687:5;:17;;45705:1;45687:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;:70;;;;;-1:-1:-1;;;;;45687:70:7;;;;;-1:-1:-1;;;;;45687:70:7;;;;;;45779:5;:17;;:26;;;;;;;;;;;;:::i;:::-;;45827:5;;45624:227;45603:3;;;;;45556:295;;;45525:400;;;45871:17;;45867:58;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;45890:35:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;45890:35:7;;;;;;;;;;;;;;45867:58;-1:-1:-1;45988:5:7;;-1:-1:-1;;;;;;46003:36:7;;46049:241;46057:8;46056:9;46049:241;;;46081:70;;;-1:-1:-1;;;;;46081:70:7;;:17;:70;;;;;;;;;;-1:-1:-1;;;;;46081:70:7;;;;;;;;;;;;;;:21;;;;:70;;;;;-1:-1:-1;;46081:70:7;;;;;;;:21;:70;;;5:2:-1;;;;30:1;27;20:12;5:2;46081:70:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46081:70:7;;;;46169:17;46190:1;46169:22;46165:114;;;46204:4;46193:15;;46165:114;;;46247:6;:25;;46254:17;;46247:25;;;;;;;;;;;;;;;;;;;:32;-1:-1:-1;;;;;46247:32:7;;-1:-1:-1;46165:114:7;46049:241;;;46304:54;;;-1:-1:-1;;;;;46304:54:7;;;;-1:-1:-1;;;;;46304:54:7;;;;;;;;;;;;;;-1:-1:-1;;;;;46304:54:7;;;;;;;;;;;;;46375:4;46368:11;;44154:2232;;;;;;;;;;;;;:::o;47533:579::-;47637:19;47759:4;47753:11;47792:4;47777:138;47805:4;47802:1;47799:11;47777:138;;;47891:8;47887:1;47881:4;47877:12;47872:28;47868:1;47863:3;47859:11;47851:50;47825:4;47818:12;47777:138;;;47781:17;47943:4;47928:130;47956:4;47953:1;47950:11;47928:130;;;48031:11;48028:1;48023:20;48019:1;48014:3;48010:11;48002:42;47976:4;47969:12;47928:130;;46739:578;46823:17;46842:14;46893:2;46872:10;:17;:23;;46868:443;;;-1:-1:-1;;47025:4:7;47009:21;;47003:28;47083:4;47067:21;;47061:28;47134:6;:13;-1:-1:-1;;;;;47120:27:7;;;47116:47;;47162:1;47149:14;;47116:47;47181:14;;47177:42;;;-1:-1:-1;7363:1:7;47177:42;46868:443;;;-1:-1:-1;47263:1:7;;-1:-1:-1;7363:1:7;46868:443;46739:578;;;:::o;48300:474::-;48388:15;48405:17;48525:4;48519:11;48558:4;48543:142;48571:4;48568:1;48565:11;48543:142;;;48657:12;48654:1;48649:21;48645:1;48638:4;48633:3;48629:14;48625:22;48617:54;48591:4;48584:12;48543:142;;;-1:-1:-1;48709:10:7;;48443:325;-1:-1:-1;;48443:325:7:o;1009:51688::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;1009:51688:7;;;-1:-1:-1;;1009:51688:7:o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1009:51688:7;;;-1:-1:-1;1009:51688:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;1009:51688:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1009:51688:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1009:51688:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1009:51688:7;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;1009:51688:7;;;;;-1:-1:-1;;1009:51688:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i",
  "source": "/**\n *  https://contributing.kleros.io/smart-contract-workflow\n *  @reviewers: [@clesaege]\n *  @auditors: []\n *  @bounties: [{ duration: 14 days, link: https://github.com/kleros/kleros/issues/117, maxPayout: 50 ETH }]\n *  @deployments: []\n */\n/* solium-disable error-reason */\n/* solium-disable security/no-block-members */\npragma solidity ^0.4.24;\n\nimport { TokenController } from \"minimetoken/contracts/TokenController.sol\";\nimport { Arbitrator, Arbitrable } from \"kleros-interaction/contracts/standard/arbitration/Arbitrator.sol\";\nimport { MiniMeTokenERC20 as Pinakion } from \"kleros-interaction/contracts/standard/arbitration/ArbitrableTokens/MiniMeTokenERC20.sol\";\nimport { RNG } from \"kleros-interaction/contracts/standard/rng/RNG.sol\";\n\nimport { SortitionSumTreeFactory } from \"../data-structures/SortitionSumTreeFactory.sol\";\n\n/**\n *  @title KlerosLiquid\n *  @author Enrique Piqueras - <epiquerass@gmail.com>\n *  @dev The main Kleros contract with dispute resolution logic for the Athena release.\n */\ncontract KlerosLiquid is TokenController, Arbitrator {\n    /* Enums */\n\n    // General\n    enum Phase {\n      staking, // Stake sum trees can be updated. Pass after `minStakingTime` passes and there is at least one dispute without jurors.\n      generating, // Waiting for a random number. Pass as soon as it is ready.\n      drawing // Jurors can be drawn. Pass after all disputes have jurors or `maxDrawingTime` passes.\n    }\n\n    // Dispute\n    enum Period {\n      evidence, // Evidence can be submitted. This is also when drawing has to take place.\n      commit, // Jurors commit a hashed vote. This is skipped for courts without hidden votes.\n      vote, // Jurors reveal/cast their vote depending on whether the court has hidden votes or not.\n      appeal, // The dispute can be appealed.\n      execution // Tokens are redistributed and the ruling is executed.\n    }\n\n    /* Structs */\n\n    // General\n    struct Court {\n        uint96 parent; // The parent court.\n        uint[] children; // List of child courts.\n        bool hiddenVotes; // Whether to use commit and reveal or not.\n        uint minStake; // Minimum tokens needed to stake in the court.\n        uint alpha; // Basis point of tokens that are lost when incoherent.\n        uint feeForJuror; // Arbitration fee paid per juror.\n        // The appeal after the one that reaches this number of jurors will go to the parent court if any, otherwise, no more appeals are possible.\n        uint jurorsForCourtJump;\n        uint[4] timesPerPeriod; // The time allotted to each dispute period in the form `timesPerPeriod[period]`.\n    }\n    struct DelayedSetStake {\n        address account; // The address of the juror.\n        uint96 subcourtID; // The ID of the subcourt.\n        uint128 stake; // The new stake.\n    }\n\n    // Dispute\n    struct Vote {\n        address account; // The address of the juror.\n        bytes32 commit; // The commit of the juror. For courts with hidden votes.\n        uint choice; // The choice of the juror.\n        bool voted; // True if the vote has been cast or revealed, false otherwise.\n    }\n    struct VoteCounter {\n        // The choice with the most votes. Note that in the case of a tie, it is the choice that reached the tied number of votes first.\n        uint winningChoice;\n        mapping(uint => uint) counts; // The sum of votes for each choice in the form `counts[choice]`.\n        bool tied; // True if there is a tie, false otherwise.\n    }\n    struct Dispute { // Note that appeal `0` is equivalent to the first round of the dispute.\n        uint96 subcourtID; // The ID of the subcourt the dispute is in.\n        Arbitrable arbitrated; // The arbitrated arbitrable contract.\n        // The number of choices jurors have when voting. This does not include choice `0` which is reserved for \"refuse to arbitrate\"/\"no ruling\".\n        uint numberOfChoices;\n        Period period; // The current period of the dispute.\n        uint lastPeriodChange; // The last time the period was changed.\n        // The votes in the form `votes[appeal][voteID]`. On each round, a new list is pushed and packed with as many empty votes as there are draws. We use `dispute.votes.length` to get the number of appeals plus 1 for the first round.\n        Vote[][] votes;\n        VoteCounter[] voteCounters; // The vote counters in the form `voteCounters[appeal]`.\n        uint[] tokensAtStakePerJuror; // The amount of tokens at stake for each juror in the form `tokensAtStakePerJuror[appeal]`.\n        uint[] totalFeesForJurors; // The total juror fees paid in the form `totalFeesForJurors[appeal]`.\n        uint drawsInRound; // A counter of draws made in the current round.\n        uint commitsInRound; // A counter of commits made in the current round.\n        uint[] votesInEachRound; // A counter of votes made in each round in the form `votesInEachRound[appeal]`.\n        // A counter of vote reward repartitions made in each round in the form `repartitionsInEachRound[appeal]`.\n        uint[] repartitionsInEachRound;\n        uint[] penaltiesInEachRound; // The amount of tokens collected from penalties in each round in the form `penaltiesInEachRound[appeal]`.\n        bool ruled; // True if the ruling has been executed, false otherwise.\n    }\n\n    // Juror\n    struct Juror {\n        // The IDs of subcourts where the juror has stake path ends. A stake path is a path from the general court to a court the juror directly staked in using `_setStake`.\n        uint96[] subcourtIDs;\n        uint stakedTokens; // The juror's total amount of tokens staked in subcourts.\n        uint lockedTokens; // The juror's total amount of tokens locked in disputes.\n    }\n\n    /* Events */\n\n    /** @dev Emitted when we pass to a new phase.\n     *  @param _phase The new phase.\n     */\n    event NewPhase(Phase _phase);\n\n    /** @dev Emitted when a dispute passes to a new period.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _period The new period.\n     */\n    event NewPeriod(uint indexed _disputeID, Period _period);\n\n    /** @dev Emitted when a juror's stake is set.\n     *  @param _address The address of the juror.\n     *  @param _subcourtID The ID of the subcourt at the end of the stake path.\n     *  @param _stake The new stake.\n     *  @param _newTotalStake The new total stake.\n     */\n    event StakeSet(address indexed _address, uint _subcourtID, uint128 _stake, uint _newTotalStake);\n\n    /** @dev Emitted when a juror is drawn.\n     *  @param _address The drawn address.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _appeal The appeal the draw is for. 0 is for the first round.\n     *  @param _voteID The vote ID.\n     */\n    event Draw(address indexed _address, uint indexed _disputeID, uint _appeal, uint _voteID);\n\n    /** @dev Emitted when a juror wins or loses tokens and ETH from a dispute.\n     *  @param _address The juror affected.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _tokenAmount The amount of tokens won or lost.\n     *  @param _ETHAmount The amount of ETH won or lost.\n     */\n    event TokenAndETHShift(address indexed _address, uint indexed _disputeID, int _tokenAmount, int _ETHAmount);\n\n    /* Storage */\n\n    // General Constants\n    uint public constant MAX_STAKE_PATHS = 4; // The maximum number of stake paths a juror can have.\n    uint public constant MIN_JURORS = 3; // The global default minimum number of jurors in a dispute.\n    uint public constant NON_PAYABLE_AMOUNT = (2 ** 256 - 2) / 2; // An amount higher than the supply of ETH.\n    uint public constant ALPHA_DIVISOR = 1e4; // The number to divide `Court.alpha` by.\n    // General Contracts\n    address public governor; // The governor of the contract.\n    Pinakion public pinakion; // The Pinakion token contract.\n    RNG public RNGenerator; // The random number generator contract.\n    // General Dynamic\n    Phase public phase; // The current phase.\n    uint public lastPhaseChange; // The last time the phase was changed.\n    uint public disputesWithoutJurors; // The number of disputes that have not finished drawing jurors.\n    // The block number to get the next random number from. Used so there is at least a 1 block difference from the staking phase.\n    uint public RNBlock;\n    uint public RN; // The current random number.\n    uint public minStakingTime; // The minimum staking time.\n    uint public maxDrawingTime; // The maximum drawing time.\n    // True if insolvent (`balance < stakedTokens || balance < lockedTokens`) token transfers should be blocked. Used to avoid blocking penalties.\n    bool public lockInsolventTransfers = true;\n    // General Storage\n    Court[] public courts; // The subcourts.\n    using SortitionSumTreeFactory for SortitionSumTreeFactory.SortitionSumTrees; // Use library functions for sortition sum trees.\n    SortitionSumTreeFactory.SortitionSumTrees internal sortitionSumTrees; // The sortition sum trees.\n    // The delayed calls to `_setStake`. Used to schedule `_setStake`s when not in the staking phase.\n    mapping(uint => DelayedSetStake) public delayedSetStakes;\n    // The index of the next `delayedSetStakes` item to execute. Starts at 1 because `lastDelayedSetStake` starts at 0.\n    uint public nextDelayedSetStake = 1;\n    uint public lastDelayedSetStake; // The index of the last `delayedSetStakes` item. 0 is skipped because it is the initial value.\n\n    // Dispute\n    Dispute[] public disputes; // The disputes.\n\n    // Juror\n    mapping(address => Juror) public jurors; // The jurors.\n\n    /* Modifiers */\n\n    /** @dev Requires a specific phase.\n     *  @param _phase The required phase.\n     */\n    modifier onlyDuringPhase(Phase _phase) {require(phase == _phase); _;}\n\n    /** @dev Requires a specific period in a dispute.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _period The required period.\n     */\n    modifier onlyDuringPeriod(uint _disputeID, Period _period) {require(disputes[_disputeID].period == _period); _;}\n\n    /** @dev Requires that the sender is the governor. Note that the governor is expected to not be malicious. */\n    modifier onlyByGovernor() {require(governor == msg.sender); _;}\n\n    /* Constructor */\n\n    /** @dev Constructs the KlerosLiquid contract.\n     *  @param _governor The governor's address.\n     *  @param _pinakion The address of the token contract.\n     *  @param _RNGenerator The address of the RNG contract.\n     *  @param _minStakingTime The minimum time that the staking phase should last.\n     *  @param _maxDrawingTime The maximum time that the drawing phase should last.\n     *  @param _hiddenVotes The `hiddenVotes` property value of the general court.\n     *  @param _minStake The `minStake` property value of the general court.\n     *  @param _alpha The `alpha` property value of the general court.\n     *  @param _feeForJuror The `feeForJuror` property value of the general court.\n     *  @param _jurorsForCourtJump The `jurorsForCourtJump` property value of the general court.\n     *  @param _timesPerPeriod The `timesPerPeriod` property value of the general court.\n     *  @param _sortitionSumTreeK The number of children per node of the general court's sortition sum tree.\n     */\n    constructor(\n        address _governor,\n        Pinakion _pinakion,\n        RNG _RNGenerator,\n        uint _minStakingTime,\n        uint _maxDrawingTime,\n        bool _hiddenVotes,\n        uint _minStake,\n        uint _alpha,\n        uint _feeForJuror,\n        uint _jurorsForCourtJump,\n        uint[4] _timesPerPeriod,\n        uint _sortitionSumTreeK\n    ) public {\n        // Initialize contract.\n        governor = _governor;\n        pinakion = _pinakion;\n        RNGenerator = _RNGenerator;\n        minStakingTime = _minStakingTime;\n        maxDrawingTime = _maxDrawingTime;\n        lastPhaseChange = now;\n\n        // Create the general court.\n        courts.push(Court({\n            parent: 0,\n            children: new uint[](0),\n            hiddenVotes: _hiddenVotes,\n            minStake: _minStake,\n            alpha: _alpha,\n            feeForJuror: _feeForJuror,\n            jurorsForCourtJump: _jurorsForCourtJump,\n            timesPerPeriod: _timesPerPeriod\n        }));\n        sortitionSumTrees.createTree(bytes32(0), _sortitionSumTreeK);\n    }\n\n    /* External */\n\n    /** @dev Lets the governor call anything on behalf of the contract.\n     *  @param _destination The destination of the call.\n     *  @param _amount The value sent with the call.\n     *  @param _data The data sent with the call.\n     */\n    function executeGovernorProposal(address _destination, uint _amount, bytes _data) external onlyByGovernor {\n        require(_destination.call.value(_amount)(_data)); // solium-disable-line security/no-call-value\n    }\n\n    /** @dev Changes the `governor` storage variable.\n     *  @param _governor The new value for the `governor` storage variable.\n     */\n    function changeGovernor(address _governor) external onlyByGovernor {\n        governor = _governor;\n    }\n\n    /** @dev Changes the `pinakion` storage variable.\n     *  @param _pinakion The new value for the `pinakion` storage variable.\n     */\n    function changePinakion(Pinakion _pinakion) external onlyByGovernor {\n        pinakion = _pinakion;\n    }\n\n    /** @dev Changes the `RNGenerator` storage variable.\n     *  @param _RNGenerator The new value for the `RNGenerator` storage variable.\n     */\n    function changeRNGenerator(RNG _RNGenerator) external onlyByGovernor {\n        RNGenerator = _RNGenerator;\n        if (phase == Phase.generating) {\n            RNBlock = block.number + 1;\n            RNGenerator.requestRN(RNBlock);\n        }\n    }\n\n    /** @dev Changes the `minStakingTime` storage variable.\n     *  @param _minStakingTime The new value for the `minStakingTime` storage variable.\n     */\n    function changeMinStakingTime(uint _minStakingTime) external onlyByGovernor {\n        minStakingTime = _minStakingTime;\n    }\n\n    /** @dev Changes the `maxDrawingTime` storage variable.\n     *  @param _maxDrawingTime The new value for the `maxDrawingTime` storage variable.\n     */\n    function changeMaxDrawingTime(uint _maxDrawingTime) external onlyByGovernor {\n        maxDrawingTime = _maxDrawingTime;\n    }\n\n    /** @dev Creates a subcourt under a specified parent court.\n     *  @param _parent The `parent` property value of the subcourt.\n     *  @param _hiddenVotes The `hiddenVotes` property value of the subcourt.\n     *  @param _minStake The `minStake` property value of the subcourt.\n     *  @param _alpha The `alpha` property value of the subcourt.\n     *  @param _feeForJuror The `feeForJuror` property value of the subcourt.\n     *  @param _jurorsForCourtJump The `jurorsForCourtJump` property value of the subcourt.\n     *  @param _timesPerPeriod The `timesPerPeriod` property value of the subcourt.\n     *  @param _sortitionSumTreeK The number of children per node of the subcourt's sortition sum tree.\n     */\n    function createSubcourt(\n        uint96 _parent,\n        bool _hiddenVotes,\n        uint _minStake,\n        uint _alpha,\n        uint _feeForJuror,\n        uint _jurorsForCourtJump,\n        uint[4] _timesPerPeriod,\n        uint _sortitionSumTreeK\n    ) external onlyByGovernor {\n        require(courts[_parent].minStake <= _minStake, \"A subcourt cannot be a child of a subcourt with a higher minimum stake.\");\n\n        // Create the subcourt.\n        uint96 subcourtID = uint96(\n            courts.push(Court({\n                parent: _parent,\n                children: new uint[](0),\n                hiddenVotes: _hiddenVotes,\n                minStake: _minStake,\n                alpha: _alpha,\n                feeForJuror: _feeForJuror,\n                jurorsForCourtJump: _jurorsForCourtJump,\n                timesPerPeriod: _timesPerPeriod\n            })) - 1\n        );\n        sortitionSumTrees.createTree(bytes32(subcourtID), _sortitionSumTreeK);\n\n        // Update the parent.\n        courts[_parent].children.push(subcourtID);\n    }\n\n    /** @dev Changes the `minStake` property value of a specified subcourt. Don't set to a value lower than its parent's `minStake` property value.\n     *  @param _subcourtID The ID of the subcourt.\n     *  @param _minStake The new value for the `minStake` property value.\n     */\n    function changeSubcourtMinStake(uint96 _subcourtID, uint _minStake) external onlyByGovernor {\n        require(_subcourtID == 0 || courts[courts[_subcourtID].parent].minStake <= _minStake);\n        for (uint i = 0; i < courts[_subcourtID].children.length; i++) {\n            require(\n                courts[courts[_subcourtID].children[i]].minStake >= _minStake,\n                \"A subcourt cannot be the parent of a subcourt with a lower minimum stake.\"\n            );\n        }\n\n        courts[_subcourtID].minStake = _minStake;\n    }\n\n    /** @dev Changes the `alpha` property value of a specified subcourt.\n     *  @param _subcourtID The ID of the subcourt.\n     *  @param _alpha The new value for the `alpha` property value.\n     */\n    function changeSubcourtAlpha(uint96 _subcourtID, uint _alpha) external onlyByGovernor {\n        courts[_subcourtID].alpha = _alpha;\n    }\n\n    /** @dev Changes the `feeForJuror` property value of a specified subcourt.\n     *  @param _subcourtID The ID of the subcourt.\n     *  @param _feeForJuror The new value for the `feeForJuror` property value.\n     */\n    function changeSubcourtJurorFee(uint96 _subcourtID, uint _feeForJuror) external onlyByGovernor {\n        courts[_subcourtID].feeForJuror = _feeForJuror;\n    }\n\n    /** @dev Changes the `jurorsForCourtJump` property value of a specified subcourt.\n     *  @param _subcourtID The ID of the subcourt.\n     *  @param _jurorsForCourtJump The new value for the `jurorsForCourtJump` property value.\n     */\n    function changeSubcourtJurorsForJump(uint96 _subcourtID, uint _jurorsForCourtJump) external onlyByGovernor {\n        courts[_subcourtID].jurorsForCourtJump = _jurorsForCourtJump;\n    }\n\n    /** @dev Changes the `timesPerPeriod` property value of a specified subcourt.\n     *  @param _subcourtID The ID of the subcourt.\n     *  @param _timesPerPeriod The new value for the `timesPerPeriod` property value.\n     */\n    function changeSubcourtTimesPerPeriod(uint96 _subcourtID, uint[4] _timesPerPeriod) external onlyByGovernor {\n        courts[_subcourtID].timesPerPeriod = _timesPerPeriod;\n    }\n\n    /** @dev Passes the phase. TRUSTED */\n    function passPhase() external {\n        if (phase == Phase.staking) {\n            require(now - lastPhaseChange >= minStakingTime, \"The minimum staking time has not passed yet.\");\n            require(disputesWithoutJurors > 0, \"There are no disputes that need jurors.\");\n            RNBlock = block.number + 1;\n            RNGenerator.requestRN(RNBlock);\n            phase = Phase.generating;\n        } else if (phase == Phase.generating) {\n            RN = RNGenerator.getUncorrelatedRN(RNBlock);\n            require(RN != 0, \"Random number is not ready yet.\");\n            phase = Phase.drawing;\n        } else if (phase == Phase.drawing) {\n            require(disputesWithoutJurors == 0 || now - lastPhaseChange >= maxDrawingTime, \"There are still disputes without jurors and the maximum drawing time has not passed yet.\");\n            phase = Phase.staking;\n        }\n\n        lastPhaseChange = now;\n        emit NewPhase(phase);\n    }\n\n    /** @dev Passes the period of a specified dispute.\n     *  @param _disputeID The ID of the dispute.\n     */\n    function passPeriod(uint _disputeID) external {\n        Dispute storage dispute = disputes[_disputeID];\n        if (dispute.period == Period.evidence) {\n            require(\n                dispute.votes.length > 1 || now - dispute.lastPeriodChange >= courts[dispute.subcourtID].timesPerPeriod[uint(dispute.period)],\n                \"The evidence period time has not passed yet and it is not an appeal.\"\n            );\n            require(dispute.drawsInRound == dispute.votes[dispute.votes.length - 1].length, \"The dispute has not finished drawing yet.\");\n            dispute.period = courts[dispute.subcourtID].hiddenVotes ? Period.commit : Period.vote;\n        } else if (dispute.period == Period.commit) {\n            require(\n                now - dispute.lastPeriodChange >= courts[dispute.subcourtID].timesPerPeriod[uint(dispute.period)] || dispute.commitsInRound == dispute.votes[dispute.votes.length - 1].length,\n                \"The commit period time has not passed yet and not every juror has committed yet.\"\n            );\n            dispute.period = Period.vote;\n        } else if (dispute.period == Period.vote) {\n            require(\n                now - dispute.lastPeriodChange >= courts[dispute.subcourtID].timesPerPeriod[uint(dispute.period)] || dispute.votesInEachRound[dispute.votes.length - 1] == dispute.votes[dispute.votes.length - 1].length,\n                \"The vote period time has not passed yet and not every juror has voted yet.\"\n            );\n            dispute.period = Period.appeal;\n            emit AppealPossible(_disputeID, dispute.arbitrated);\n        } else if (dispute.period == Period.appeal) {\n            require(now - dispute.lastPeriodChange >= courts[dispute.subcourtID].timesPerPeriod[uint(dispute.period)], \"The appeal period time has not passed yet.\");\n            dispute.period = Period.execution;\n        } else if (dispute.period == Period.execution) {\n            revert(\"The dispute is already in the last period.\");\n        }\n\n        dispute.lastPeriodChange = now;\n        emit NewPeriod(_disputeID, dispute.period);\n    }\n\n    /** @dev Sets the caller's stake in a subcourt.\n     *  @param _subcourtID The ID of the subcourt.\n     *  @param _stake The new stake.\n     */\n    function setStake(uint96 _subcourtID, uint128 _stake) external {\n        require(_setStake(msg.sender, _subcourtID, _stake));\n    }\n\n    /** @dev Executes the next delayed set stakes.\n     *  @param _iterations The number of delayed set stakes to execute.\n     */\n    function executeDelayedSetStakes(uint _iterations) external onlyDuringPhase(Phase.staking) {\n        uint actualIterations = (nextDelayedSetStake + _iterations) - 1 > lastDelayedSetStake ?\n            (lastDelayedSetStake - nextDelayedSetStake) + 1 : _iterations;\n        uint newNextDelayedSetStake = nextDelayedSetStake + actualIterations;\n        require(newNextDelayedSetStake >= nextDelayedSetStake);\n        for (uint i = nextDelayedSetStake; i < newNextDelayedSetStake; i++) {\n            DelayedSetStake storage delayedSetStake = delayedSetStakes[i];\n            _setStake(delayedSetStake.account, delayedSetStake.subcourtID, delayedSetStake.stake);\n            delete delayedSetStakes[i];\n        }\n        nextDelayedSetStake = newNextDelayedSetStake;\n    }\n\n    /** @dev Draws jurors for a dispute. Can be called in parts.\n     *  `O(n * k * log_k(j))` where\n     *  `n` is the number of iterations to run,\n     *  `k` is the number of children per node of the dispute's court's sortition sum tree,\n     *  and `j` is the maximum number of jurors that ever staked in it simultaneously.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _iterations The number of iterations to run.\n     */\n    function drawJurors(\n        uint _disputeID,\n        uint _iterations\n    ) external onlyDuringPhase(Phase.drawing) onlyDuringPeriod(_disputeID, Period.evidence) {\n        Dispute storage dispute = disputes[_disputeID];\n        uint endIndex = dispute.drawsInRound + _iterations;\n        require(endIndex >= dispute.drawsInRound);\n\n        // Avoid going out of range.\n        if (endIndex > dispute.votes[dispute.votes.length - 1].length) endIndex = dispute.votes[dispute.votes.length - 1].length;\n        for (uint i = dispute.drawsInRound; i < endIndex; i++) {\n            // Draw from sortition tree.\n            (\n                address drawnAddress,\n                uint subcourtID\n            ) = stakePathIDToAccountAndSubcourtID(sortitionSumTrees.draw(bytes32(dispute.subcourtID), uint(keccak256(RN, _disputeID, i))));\n\n            // Save the vote.\n            dispute.votes[dispute.votes.length - 1][i].account = drawnAddress;\n            jurors[drawnAddress].lockedTokens += dispute.tokensAtStakePerJuror[dispute.tokensAtStakePerJuror.length - 1];\n            emit Draw(drawnAddress, _disputeID, dispute.votes.length - 1, i);\n\n            // If dispute is fully drawn.\n            if (i == dispute.votes[dispute.votes.length - 1].length - 1) disputesWithoutJurors--;\n        }\n        dispute.drawsInRound = endIndex;\n    }\n\n    /** @dev Sets the caller's commit for the specified votes.\n     *  `O(n)` where\n     *  `n` is the number of votes.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _voteIDs The IDs of the votes.\n     *  @param _commit The commit.\n     */\n    function castCommit(uint _disputeID, uint[] _voteIDs, bytes32 _commit) external onlyDuringPeriod(_disputeID, Period.commit) {\n        Dispute storage dispute = disputes[_disputeID];\n        require(_commit != bytes32(0));\n        for (uint i = 0; i < _voteIDs.length; i++) {\n            require(dispute.votes[dispute.votes.length - 1][_voteIDs[i]].account == msg.sender, \"The caller has to own the vote.\");\n            require(dispute.votes[dispute.votes.length - 1][_voteIDs[i]].commit == bytes32(0), \"Already committed this vote.\");\n            dispute.votes[dispute.votes.length - 1][_voteIDs[i]].commit = _commit;\n        }\n        dispute.commitsInRound += _voteIDs.length;\n    }\n\n    /** @dev Sets the caller's choices for the specified votes.\n     *  `O(n)` where\n     *  `n` is the number of votes.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _voteIDs The IDs of the votes.\n     *  @param _choice The choice.\n     *  @param _salt The salt for the commit if the votes were hidden.\n     */\n    function castVote(uint _disputeID, uint[] _voteIDs, uint _choice, uint _salt) external onlyDuringPeriod(_disputeID, Period.vote) {\n        Dispute storage dispute = disputes[_disputeID];\n        require(_voteIDs.length > 0);\n        require(_choice <= dispute.numberOfChoices, \"The choice has to be less than or equal to the number of choices for the dispute.\");\n\n        // Save the votes.\n        for (uint i = 0; i < _voteIDs.length; i++) {\n            require(dispute.votes[dispute.votes.length - 1][_voteIDs[i]].account == msg.sender, \"The caller has to own the vote.\");\n            require(\n                !courts[dispute.subcourtID].hiddenVotes || dispute.votes[dispute.votes.length - 1][_voteIDs[i]].commit == keccak256(_choice, _salt),\n                \"The commit must match the choice in subcourts with hidden votes.\"\n            );\n            require(!dispute.votes[dispute.votes.length - 1][_voteIDs[i]].voted, \"Vote already cast.\");\n            dispute.votes[dispute.votes.length - 1][_voteIDs[i]].choice = _choice;\n            dispute.votes[dispute.votes.length - 1][_voteIDs[i]].voted = true;\n        }\n        dispute.votesInEachRound[dispute.votes.length - 1] += _voteIDs.length;\n\n        // Update winning choice.\n        VoteCounter storage voteCounter = dispute.voteCounters[dispute.voteCounters.length - 1];\n        voteCounter.counts[_choice] += _voteIDs.length;\n        if (_choice == voteCounter.winningChoice) { // Voted for the winning choice.\n            if (voteCounter.tied) voteCounter.tied = false; // Potentially broke tie.\n        } else { // Voted for another choice.\n            if (voteCounter.counts[_choice] == voteCounter.counts[voteCounter.winningChoice]) { // Tie.\n                if (!voteCounter.tied) voteCounter.tied = true;\n            } else if (voteCounter.counts[_choice] > voteCounter.counts[voteCounter.winningChoice]) { // New winner.\n                voteCounter.winningChoice = _choice;\n                voteCounter.tied = false;\n            }\n        }\n    }\n\n    /** @dev Computes the token and ETH rewards for a specified appeal in a specified dispute.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _appeal The appeal.\n     *  @return The token and ETH rewards.\n     */\n    function computeTokenAndETHRewards(uint _disputeID, uint _appeal) private view returns(uint tokenReward, uint ETHReward) {\n        Dispute storage dispute = disputes[_disputeID];\n\n        // Distribute penalties and arbitration fees.\n        if (dispute.voteCounters[dispute.voteCounters.length - 1].tied) {\n            // Distribute penalties and fees evenly between active jurors.\n            uint activeCount = dispute.votesInEachRound[_appeal];\n            if (activeCount > 0) {\n                tokenReward = dispute.penaltiesInEachRound[_appeal] / activeCount;\n                ETHReward = dispute.totalFeesForJurors[_appeal] / activeCount;\n            } else {\n                tokenReward = 0;\n                ETHReward = 0;\n            }\n        } else {\n            // Distribute penalties and fees evenly between coherent jurors.\n            uint winningChoice = dispute.voteCounters[dispute.voteCounters.length - 1].winningChoice;\n            uint coherentCount = dispute.voteCounters[_appeal].counts[winningChoice];\n            tokenReward = dispute.penaltiesInEachRound[_appeal] / coherentCount;\n            ETHReward = dispute.totalFeesForJurors[_appeal] / coherentCount;\n        }\n    }\n\n    /** @dev Repartitions tokens and ETH for a specified appeal in a specified dispute. Can be called in parts.\n     *  `O(i + u * n * (n + p * log_k(j)))` where\n     *  `i` is the number of iterations to run,\n     *  `u` is the number of jurors that need to be unstaked,\n     *  `n` is the maximum number of subcourts one of these jurors has staked in,\n     *  `p` is the depth of the subcourt tree,\n     *  `k` is the minimum number of children per node of one of these subcourts' sortition sum tree,\n     *  and `j` is the maximum number of jurors that ever staked in one of these subcourts simultaneously.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _appeal The appeal.\n     *  @param _iterations The number of iterations to run.\n     */\n    function execute(uint _disputeID, uint _appeal, uint _iterations) external onlyDuringPeriod(_disputeID, Period.execution) {\n        lockInsolventTransfers = false;\n        Dispute storage dispute = disputes[_disputeID];\n        uint end = dispute.repartitionsInEachRound[_appeal] + _iterations;\n        require(end >= dispute.repartitionsInEachRound[_appeal]);\n        uint penaltiesInRoundCache = dispute.penaltiesInEachRound[_appeal]; // For saving gas.\n        (uint tokenReward, uint ETHReward) = (0, 0);\n\n        // Avoid going out of range.\n        if (\n            !dispute.voteCounters[dispute.voteCounters.length - 1].tied &&\n            dispute.voteCounters[_appeal].counts[dispute.voteCounters[dispute.voteCounters.length - 1].winningChoice] == 0\n        ) {\n            // We loop over the votes once as there are no rewards because it is not a tie and no one in this round is coherent with the final outcome.\n            if (end > dispute.votes[_appeal].length) end = dispute.votes[_appeal].length;\n        } else {\n            // We loop over the votes twice, first to collect penalties, and second to distribute them as rewards along with arbitration fees.\n            (tokenReward, ETHReward) = dispute.repartitionsInEachRound[_appeal] >= dispute.votes[_appeal].length ? computeTokenAndETHRewards(_disputeID, _appeal) : (0, 0); // Compute rewards if rewarding.\n            if (end > dispute.votes[_appeal].length * 2) end = dispute.votes[_appeal].length * 2;\n        }\n        for (uint i = dispute.repartitionsInEachRound[_appeal]; i < end; i++) {\n            Vote storage vote = dispute.votes[_appeal][i % dispute.votes[_appeal].length];\n            if (\n                vote.voted &&\n                (vote.choice == dispute.voteCounters[dispute.voteCounters.length - 1].winningChoice || dispute.voteCounters[dispute.voteCounters.length - 1].tied)\n            ) { // Juror was active, and voted coherently or it was a tie.\n                if (i >= dispute.votes[_appeal].length) { // Only execute in the second half of the iterations.\n\n                    // Reward.\n                    pinakion.transfer(vote.account, tokenReward);\n                    // Intentional use to avoid blocking.\n                    vote.account.send(ETHReward); // solium-disable-line security/no-send\n                    emit TokenAndETHShift(vote.account, _disputeID, int(tokenReward), int(ETHReward));\n                    jurors[vote.account].lockedTokens -= dispute.tokensAtStakePerJuror[_appeal];\n                }\n            } else { // Juror was inactive, or voted incoherently and it was not a tie.\n                if (i < dispute.votes[_appeal].length) { // Only execute in the first half of the iterations.\n\n                    // Penalize.\n                    uint penalty = dispute.tokensAtStakePerJuror[_appeal] > pinakion.balanceOf(vote.account) ? pinakion.balanceOf(vote.account) : dispute.tokensAtStakePerJuror[_appeal];\n                    pinakion.transferFrom(vote.account, this, penalty);\n                    emit TokenAndETHShift(vote.account, _disputeID, -int(penalty), 0);\n                    penaltiesInRoundCache += penalty;\n                    jurors[vote.account].lockedTokens -= dispute.tokensAtStakePerJuror[_appeal];\n\n                    // Unstake juror if his penalty made balance less than his total stake or if he lost due to inactivity.\n                    if (pinakion.balanceOf(vote.account) < jurors[vote.account].stakedTokens || !vote.voted)\n                        for (uint j = 0; j < jurors[vote.account].subcourtIDs.length; j++)\n                            _setStake(vote.account, jurors[vote.account].subcourtIDs[j], 0);\n\n                }\n            }\n            if (i == dispute.votes[_appeal].length - 1) {\n                // Send fees and tokens to the governor if no one was coherent.\n                if (dispute.votesInEachRound[_appeal] == 0 || !dispute.voteCounters[dispute.voteCounters.length - 1].tied && dispute.voteCounters[_appeal].counts[dispute.voteCounters[dispute.voteCounters.length - 1].winningChoice] == 0) {\n                    // Intentional use to avoid blocking.\n                    governor.send(dispute.totalFeesForJurors[_appeal]); // solium-disable-line security/no-send\n                    pinakion.transfer(governor, penaltiesInRoundCache);\n                } else if (i + 1 < end) {\n                    // Compute rewards because we are going into rewarding.\n                    dispute.penaltiesInEachRound[_appeal] = penaltiesInRoundCache;\n                    (tokenReward, ETHReward) = computeTokenAndETHRewards(_disputeID, _appeal);\n                }\n            }\n        }\n        if (dispute.penaltiesInEachRound[_appeal] != penaltiesInRoundCache) dispute.penaltiesInEachRound[_appeal] = penaltiesInRoundCache;\n        dispute.repartitionsInEachRound[_appeal] = end;\n        lockInsolventTransfers = true;\n    }\n\n    /** @dev Executes a specified dispute's ruling. UNTRUSTED.\n     *  @param _disputeID The ID of the dispute.\n     */\n    function executeRuling(uint _disputeID) external onlyDuringPeriod(_disputeID, Period.execution) {\n        Dispute storage dispute = disputes[_disputeID];\n        require(!dispute.ruled, \"Ruling already executed.\");\n        dispute.ruled = true;\n        uint winningChoice = dispute.voteCounters[dispute.voteCounters.length - 1].tied ? 0\n            : dispute.voteCounters[dispute.voteCounters.length - 1].winningChoice;\n        dispute.arbitrated.rule(_disputeID, winningChoice);\n    }\n\n    /* Public */\n\n    /** @dev Creates a dispute. Must be called by the arbitrable contract.\n     *  @param _numberOfChoices Number of choices to choose from in the dispute to be created.\n     *  @param _extraData Additional info about the dispute to be created. We use it to pass the ID of the subcourt to create the dispute in (first 32 bytes) and the minimum number of jurors required (next 32 bytes).\n     *  @return The ID of the created dispute.\n     */\n    function createDispute(\n        uint _numberOfChoices,\n        bytes _extraData\n    ) public payable requireArbitrationFee(_extraData) returns(uint disputeID)  {\n        (uint96 subcourtID, uint minJurors) = extraDataToSubcourtIDAndMinJurors(_extraData);\n        disputeID = disputes.length++;\n        Dispute storage dispute = disputes[disputeID];\n        dispute.subcourtID = subcourtID;\n        dispute.arbitrated = Arbitrable(msg.sender);\n        dispute.numberOfChoices = _numberOfChoices;\n        dispute.period = Period.evidence;\n        dispute.lastPeriodChange = now;\n        // As many votes that can be afforded by the provided funds.\n        dispute.votes[dispute.votes.length++].length = msg.value / courts[dispute.subcourtID].feeForJuror;\n        dispute.voteCounters[dispute.voteCounters.length++].tied = true;\n        dispute.tokensAtStakePerJuror.push((courts[dispute.subcourtID].minStake * courts[dispute.subcourtID].alpha) / ALPHA_DIVISOR);\n        dispute.totalFeesForJurors.push(msg.value);\n        dispute.votesInEachRound.push(0);\n        dispute.repartitionsInEachRound.push(0);\n        dispute.penaltiesInEachRound.push(0);\n        disputesWithoutJurors++;\n\n        emit DisputeCreation(disputeID, Arbitrable(msg.sender));\n    }\n\n    /** @dev Appeals the ruling of a specified dispute.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _extraData Additional info about the appeal. Not used by this contract.\n     */\n    function appeal(\n        uint _disputeID,\n        bytes _extraData\n    ) public payable requireAppealFee(_disputeID, _extraData) onlyDuringPeriod(_disputeID, Period.appeal) {\n        Dispute storage dispute = disputes[_disputeID];\n        require(\n            msg.sender == address(dispute.arbitrated),\n            \"Can only be called by the arbitrable contract.\"\n        );\n        if (dispute.votes[dispute.votes.length - 1].length >= courts[dispute.subcourtID].jurorsForCourtJump) // Jump to parent subcourt.\n            dispute.subcourtID = courts[dispute.subcourtID].parent;\n        dispute.period = Period.evidence;\n        dispute.lastPeriodChange = now;\n        // As many votes that can be afforded by the provided funds.\n        dispute.votes[dispute.votes.length++].length = msg.value / courts[dispute.subcourtID].feeForJuror;\n        dispute.voteCounters[dispute.voteCounters.length++].tied = true;\n        dispute.tokensAtStakePerJuror.push((courts[dispute.subcourtID].minStake * courts[dispute.subcourtID].alpha) / ALPHA_DIVISOR);\n        dispute.totalFeesForJurors.push(msg.value);\n        dispute.drawsInRound = 0;\n        dispute.commitsInRound = 0;\n        dispute.votesInEachRound.push(0);\n        dispute.repartitionsInEachRound.push(0);\n        dispute.penaltiesInEachRound.push(0);\n        disputesWithoutJurors++;\n\n        emit AppealDecision(_disputeID, Arbitrable(msg.sender));\n    }\n\n    /** @dev Called when `_owner` sends ether to the MiniMe Token contract.\n     *  @param _owner The address that sent the ether to create tokens.\n     *  @return Whether the operation should be allowed or not.\n     */\n    function proxyPayment(address _owner) public payable returns(bool allowed) { allowed = false; }\n\n    /** @dev Notifies the controller about a token transfer allowing the controller to react if desired.\n     *  @param _from The origin of the transfer.\n     *  @param _to The destination of the transfer.\n     *  @param _amount The amount of the transfer.\n     *  @return Whether the operation should be allowed or not.\n     */\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool allowed) {\n        if (lockInsolventTransfers) { // Never block penalties or rewards.\n            uint newBalance = pinakion.balanceOf(_from) - _amount;\n            if (newBalance < jurors[_from].stakedTokens || newBalance < jurors[_from].lockedTokens) return false;\n        }\n        allowed = true;\n    }\n\n    /** @dev Notifies the controller about an approval allowing the controller to react if desired.\n     *  @param _owner The address that calls `approve()`.\n     *  @param _spender The spender in the `approve()` call.\n     *  @param _amount The amount in the `approve()` call.\n     *  @return Whether the operation should be allowed or not.\n     */\n    function onApprove(address _owner, address _spender, uint _amount) public returns(bool allowed) { allowed = true; }\n\n    /* Public Views */\n\n    /** @dev Gets the cost of arbitration in a specified subcourt.\n     *  @param _extraData Additional info about the dispute. We use it to pass the ID of the subcourt to create the dispute in (first 32 bytes) and the minimum number of jurors required (next 32 bytes).\n     *  @return The cost.\n     */\n    function arbitrationCost(bytes _extraData) public view returns(uint cost) {\n        (uint96 subcourtID, uint minJurors) = extraDataToSubcourtIDAndMinJurors(_extraData);\n        cost = courts[subcourtID].feeForJuror * minJurors;\n    }\n\n    /** @dev Gets the cost of appealing a specified dispute.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _extraData Additional info about the appeal. Not used by this contract.\n     *  @return The cost.\n     */\n    function appealCost(uint _disputeID, bytes _extraData) public view returns(uint cost) {\n        Dispute storage dispute = disputes[_disputeID];\n        uint lastNumberOfJurors = dispute.votes[dispute.votes.length - 1].length;\n        if (lastNumberOfJurors >= courts[dispute.subcourtID].jurorsForCourtJump) { // Jump to parent subcourt.\n            if (dispute.subcourtID == 0) // Already in the general court.\n                cost = NON_PAYABLE_AMOUNT;\n            else // Get the cost of the parent subcourt.\n                cost = courts[courts[dispute.subcourtID].parent].feeForJuror * ((lastNumberOfJurors * 2) + 1);\n        } else // Stay in current subcourt.\n            cost = courts[dispute.subcourtID].feeForJuror * ((lastNumberOfJurors * 2) + 1);\n    }\n\n    /** @dev Gets the start and end of a specified dispute's current appeal period.\n     *  @param _disputeID The ID of the dispute.\n     *  @return The start and end of the appeal period.\n     */\n    function appealPeriod(uint _disputeID) public view returns(uint start, uint end) {\n        Dispute storage dispute = disputes[_disputeID];\n        if (dispute.period == Period.appeal) {\n            start = dispute.lastPeriodChange;\n            end = dispute.lastPeriodChange + courts[dispute.subcourtID].timesPerPeriod[uint(Period.appeal)];\n        } else {\n            start = 0;\n            end = 0;\n        }\n    }\n\n    /** @dev Gets the status of a specified dispute.\n     *  @param _disputeID The ID of the dispute.\n     *  @return The status.\n     */\n    function disputeStatus(uint _disputeID) public view returns(DisputeStatus status) {\n        Dispute storage dispute = disputes[_disputeID];\n        if (dispute.period < Period.appeal) status = DisputeStatus.Waiting;\n        else if (dispute.period < Period.execution) status = DisputeStatus.Appealable;\n        else status = DisputeStatus.Solved;\n    }\n\n    /** @dev Gets the current ruling of a specified dispute.\n     *  @param _disputeID The ID of the dispute.\n     *  @return The current ruling.\n     */\n    function currentRuling(uint _disputeID) public view returns(uint ruling) {\n        Dispute storage dispute = disputes[_disputeID];\n        ruling = dispute.voteCounters[dispute.voteCounters.length - 1].tied ? 0\n            : dispute.voteCounters[dispute.voteCounters.length - 1].winningChoice;\n    }\n\n    /* Internal */\n\n    /** @dev Sets the specified juror's stake in a subcourt.\n     *  `O(n + p * log_k(j))` where\n     *  `n` is the number of subcourts the juror has staked in,\n     *  `p` is the depth of the subcourt tree,\n     *  `k` is the minimum number of children per node of one of these subcourts' sortition sum tree,\n     *  and `j` is the maximum number of jurors that ever staked in one of these subcourts simultaneously.\n     *  @param _account The address of the juror.\n     *  @param _subcourtID The ID of the subcourt.\n     *  @param _stake The new stake.\n     *  @return True if the call succeeded, false otherwise.\n     */\n    function _setStake(address _account, uint96 _subcourtID, uint128 _stake) internal returns(bool succeeded) {\n        if (!(_subcourtID < courts.length))\n            return false;\n\n        // Delayed action logic.\n        if (phase != Phase.staking) {\n            delayedSetStakes[++lastDelayedSetStake] = DelayedSetStake({ account: _account, subcourtID: _subcourtID, stake: _stake });\n            return true;\n        }\n\n        if (!(_stake == 0 || courts[_subcourtID].minStake <= _stake))\n            return false; // The juror's stake cannot be lower than the minimum stake for the subcourt.\n        Juror storage juror = jurors[_account];\n        bytes32 stakePathID = accountAndSubcourtIDToStakePathID(_account, _subcourtID);\n        uint currentStake = sortitionSumTrees.stakeOf(bytes32(_subcourtID), stakePathID);\n        if (!(_stake == 0 || currentStake > 0 || juror.subcourtIDs.length < MAX_STAKE_PATHS))\n            return false; // Maximum stake paths reached.\n        uint newTotalStake = juror.stakedTokens - currentStake + _stake; // Can't overflow because _stake is a uint128.\n        if (!(_stake == 0 || pinakion.balanceOf(_account) >= newTotalStake))\n            return false; // The juror's total amount of staked tokens cannot be higher than the juror's balance.\n\n        // Update juror's records.\n        juror.stakedTokens = newTotalStake;\n        if (_stake == 0) {\n            for (uint i = 0; i < juror.subcourtIDs.length; i++)\n                if (juror.subcourtIDs[i] == _subcourtID) {\n                    juror.subcourtIDs[i] = juror.subcourtIDs[juror.subcourtIDs.length - 1];\n                    juror.subcourtIDs.length--;\n                    break;\n                }\n        } else if (currentStake == 0) juror.subcourtIDs.push(_subcourtID);\n\n        // Update subcourt parents.\n        bool finished = false;\n        uint currentSubcourtID = _subcourtID;\n        while (!finished) {\n            sortitionSumTrees.set(bytes32(currentSubcourtID), _stake, stakePathID);\n            if (currentSubcourtID == 0) finished = true;\n            else currentSubcourtID = courts[currentSubcourtID].parent;\n        }\n        emit StakeSet(_account, _subcourtID, _stake, newTotalStake);\n        return true;\n    }\n\n    /** @dev Gets a subcourt ID and the minimum number of jurors required from a specified extra data bytes array.\n     *  @param _extraData The extra data bytes array. The first 32 bytes are the subcourt ID and the next 32 bytes are the minimum number of jurors.\n     *  @return The subcourt ID and the minimum number of jurors required.\n     */\n    function extraDataToSubcourtIDAndMinJurors(bytes _extraData) internal view returns (uint96 subcourtID, uint minJurors) {\n        if (_extraData.length >= 64) {\n            assembly { // solium-disable-line security/no-inline-assembly\n                subcourtID := mload(add(_extraData, 0x20))\n                minJurors := mload(add(_extraData, 0x40))\n            }\n            if (subcourtID >= courts.length) subcourtID = 0;\n            if (minJurors == 0) minJurors = MIN_JURORS;\n        } else {\n            subcourtID = 0;\n            minJurors = MIN_JURORS;\n        }\n    }\n\n    /** @dev Packs an account and a subcourt ID into a stake path ID.\n     *  @param _account The account to pack.\n     *  @param _subcourtID The subcourt ID to pack.\n     *  @return The stake path ID.\n     */\n    function accountAndSubcourtIDToStakePathID(address _account, uint96 _subcourtID) internal pure returns (bytes32 stakePathID) {\n        assembly { // solium-disable-line security/no-inline-assembly\n            let ptr := mload(0x40)\n            for { let i := 0x00 } lt(i, 0x14) { i := add(i, 0x01) } {\n                mstore8(add(ptr, i), byte(add(0x0c, i), _account))\n            }\n            for { let i := 0x14 } lt(i, 0x20) { i := add(i, 0x01) } {\n                mstore8(add(ptr, i), byte(i, _subcourtID))\n            }\n            stakePathID := mload(ptr)\n        }\n    }\n\n    /** @dev Unpacks a stake path ID into an account and a subcourt ID.\n     *  @param _stakePathID The stake path ID to unpack.\n     *  @return The account and subcourt ID.\n     */\n    function stakePathIDToAccountAndSubcourtID(bytes32 _stakePathID) internal pure returns (address account, uint96 subcourtID) {\n        assembly { // solium-disable-line security/no-inline-assembly\n            let ptr := mload(0x40)\n            for { let i := 0x00 } lt(i, 0x14) { i := add(i, 0x01) } {\n                mstore8(add(add(ptr, 0x0c), i), byte(i, _stakePathID))\n            }\n            account := mload(ptr)\n            subcourtID := _stakePathID\n        }\n    }\n    \n    /* Interface Views */\n\n    /** @dev Gets a specified subcourt's non primitive properties.\n     *  @param _subcourtID The ID of the subcourt.\n     *  @return The subcourt's non primitive properties.\n     */\n    function getSubcourt(uint96 _subcourtID) external view returns(\n        uint[] children,\n        uint[4] timesPerPeriod\n    ) {\n        Court storage subcourt = courts[_subcourtID];\n        children = subcourt.children;\n        timesPerPeriod = subcourt.timesPerPeriod;\n    }\n\n    /** @dev Gets a specified vote for a specified appeal in a specified dispute.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _appeal The appeal.\n     *  @param _voteID The ID of the vote.\n     *  @return The vote.\n     */\n    function getVote(uint _disputeID, uint _appeal, uint _voteID) external view returns(\n        address account,\n        bytes32 commit,\n        uint choice,\n        bool voted\n    ) {\n        Vote storage vote = disputes[_disputeID].votes[_appeal][_voteID];\n        account = vote.account;\n        commit = vote.commit;\n        choice = vote.choice;\n        voted = vote.voted;\n    }\n\n    /** @dev Gets the vote counter for a specified appeal in a specified dispute.\n     *  Note: This function is only to be used by the interface and it won't work if the number of choices is too high.\n     *  @param _disputeID The ID of the dispute.\n     *  @param _appeal The appeal.\n     *  @return The vote counter.\n     *  `O(n)` where\n     *  `n` is the number of choices of the dispute.\n     */\n    function getVoteCounter(uint _disputeID, uint _appeal) external view returns(\n        uint winningChoice,\n        uint[] counts,\n        bool tied\n    ) {\n        Dispute storage dispute = disputes[_disputeID];\n        VoteCounter storage voteCounter = dispute.voteCounters[_appeal];\n        winningChoice = voteCounter.winningChoice;\n        counts = new uint[](dispute.numberOfChoices + 1);\n        for (uint i = 0; i <= dispute.numberOfChoices; i++) counts[i] = voteCounter.counts[i];\n        tied = voteCounter.tied;\n    }\n\n    /** @dev Gets a specified dispute's non primitive properties.\n     *  @param _disputeID The ID of the dispute.\n     *  @return The dispute's non primitive properties.\n     *  `O(a)` where\n     *  `a` is the number of appeals of the dispute.\n     */\n    function getDispute(uint _disputeID) external view returns(\n        uint[] votesLengths,\n        uint[] tokensAtStakePerJuror,\n        uint[] totalFeesForJurors,\n        uint[] votesInEachRound,\n        uint[] repartitionsInEachRound,\n        uint[] penaltiesInEachRound\n    ) {\n        Dispute storage dispute = disputes[_disputeID];\n        votesLengths = new uint[](dispute.votes.length);\n        for (uint i = 0; i < dispute.votes.length; i++) votesLengths[i] = dispute.votes[i].length;\n        tokensAtStakePerJuror = dispute.tokensAtStakePerJuror;\n        totalFeesForJurors = dispute.totalFeesForJurors;\n        votesInEachRound = dispute.votesInEachRound;\n        repartitionsInEachRound = dispute.repartitionsInEachRound;\n        penaltiesInEachRound = dispute.penaltiesInEachRound;\n    }\n\n    /** @dev Gets a specified juror's non primitive properties.\n     *  @param _account The address of the juror.\n     *  @return The juror's non primitive properties.\n     */\n    function getJuror(address _account) external view returns(\n        uint96[] subcourtIDs\n    ) {\n        Juror storage juror = jurors[_account];\n        subcourtIDs = juror.subcourtIDs;\n    }\n\n    /** @dev Gets the stake of a specified juror in a specified subcourt.\n     *  @param _account The address of the juror.\n     *  @param _subcourtID The ID of the subcourt.\n     *  @return The stake.\n     */\n    function stakeOf(address _account, uint96 _subcourtID) external view returns(uint stake) {\n        return sortitionSumTrees.stakeOf(bytes32(_subcourtID), accountAndSubcourtIDToStakePathID(_account, _subcourtID));\n    }\n}\n",
  "sourcePath": "/home/rigel/Documents/kleros/kleros/contracts/kleros/KlerosLiquid.sol",
  "ast": {
    "absolutePath": "/home/rigel/Documents/kleros/kleros/contracts/kleros/KlerosLiquid.sol",
    "exportedSymbols": {
      "KlerosLiquid": [7910]
    },
    "id": 7911,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4429,
        "literals": ["solidity", "^", "0.4", ".24"],
        "nodeType": "PragmaDirective",
        "src": "324:24:7"
      },
      {
        "absolutePath": "minimetoken/contracts/TokenController.sol",
        "file": "minimetoken/contracts/TokenController.sol",
        "id": 4431,
        "nodeType": "ImportDirective",
        "scope": 7911,
        "sourceUnit": 11890,
        "src": "350:76:7",
        "symbolAliases": [
          {
            "foreign": 4430,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "kleros-interaction/contracts/standard/arbitration/Arbitrator.sol",
        "file": "kleros-interaction/contracts/standard/arbitration/Arbitrator.sol",
        "id": 4434,
        "nodeType": "ImportDirective",
        "scope": 7911,
        "sourceUnit": 8561,
        "src": "427:106:7",
        "symbolAliases": [
          {
            "foreign": 4432,
            "local": null
          },
          {
            "foreign": 4433,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "kleros-interaction/contracts/standard/arbitration/ArbitrableTokens/MiniMeTokenERC20.sol",
        "file": "kleros-interaction/contracts/standard/arbitration/ArbitrableTokens/MiniMeTokenERC20.sol",
        "id": 4436,
        "nodeType": "ImportDirective",
        "scope": 7911,
        "sourceUnit": 8306,
        "src": "534:135:7",
        "symbolAliases": [
          {
            "foreign": 4435,
            "local": "Pinakion"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "kleros-interaction/contracts/standard/rng/RNG.sol",
        "file": "kleros-interaction/contracts/standard/rng/RNG.sol",
        "id": 4438,
        "nodeType": "ImportDirective",
        "scope": 7911,
        "sourceUnit": 10750,
        "src": "670:72:7",
        "symbolAliases": [
          {
            "foreign": 4437,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/rigel/Documents/kleros/kleros/contracts/data-structures/SortitionSumTreeFactory.sol",
        "file": "../data-structures/SortitionSumTreeFactory.sol",
        "id": 4440,
        "nodeType": "ImportDirective",
        "scope": 7911,
        "sourceUnit": 1539,
        "src": "744:89:7",
        "symbolAliases": [
          {
            "foreign": 4439,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4441,
              "name": "TokenController",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11889,
              "src": "1034:15:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenController_$11889",
                "typeString": "contract TokenController"
              }
            },
            "id": 4442,
            "nodeType": "InheritanceSpecifier",
            "src": "1034:15:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4443,
              "name": "Arbitrator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8560,
              "src": "1051:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Arbitrator_$8560",
                "typeString": "contract Arbitrator"
              }
            },
            "id": 4444,
            "nodeType": "InheritanceSpecifier",
            "src": "1051:10:7"
          }
        ],
        "contractDependencies": [8560, 11889],
        "contractKind": "contract",
        "documentation": " @title KlerosLiquid\n @author Enrique Piqueras - <epiquerass@gmail.com>\n @dev The main Kleros contract with dispute resolution logic for the Athena release.",
        "fullyImplemented": true,
        "id": 7910,
        "linearizedBaseContracts": [7910, 8560, 11889],
        "name": "KlerosLiquid",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "KlerosLiquid.Phase",
            "id": 4448,
            "members": [
              {
                "id": 4445,
                "name": "staking",
                "nodeType": "EnumValue",
                "src": "1119:7:7"
              },
              {
                "id": 4446,
                "name": "generating",
                "nodeType": "EnumValue",
                "src": "1254:10:7"
              },
              {
                "id": 4447,
                "name": "drawing",
                "nodeType": "EnumValue",
                "src": "1333:7:7"
              }
            ],
            "name": "Phase",
            "nodeType": "EnumDefinition",
            "src": "1100:334:7"
          },
          {
            "canonicalName": "KlerosLiquid.Period",
            "id": 4454,
            "members": [
              {
                "id": 4449,
                "name": "evidence",
                "nodeType": "EnumValue",
                "src": "1475:8:7"
              },
              {
                "id": 4450,
                "name": "commit",
                "nodeType": "EnumValue",
                "src": "1566:6:7"
              },
              {
                "id": 4451,
                "name": "vote",
                "nodeType": "EnumValue",
                "src": "1661:4:7"
              },
              {
                "id": 4452,
                "name": "appeal",
                "nodeType": "EnumValue",
                "src": "1762:6:7"
              },
              {
                "id": 4453,
                "name": "execution",
                "nodeType": "EnumValue",
                "src": "1808:9:7"
              }
            ],
            "name": "Period",
            "nodeType": "EnumDefinition",
            "src": "1455:424:7"
          },
          {
            "canonicalName": "KlerosLiquid.Court",
            "id": 4474,
            "members": [
              {
                "constant": false,
                "id": 4456,
                "name": "parent",
                "nodeType": "VariableDeclaration",
                "scope": 4474,
                "src": "1942:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 4455,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1942:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4459,
                "name": "children",
                "nodeType": "VariableDeclaration",
                "scope": 4474,
                "src": "1986:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 4457,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4458,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "1986:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4461,
                "name": "hiddenVotes",
                "nodeType": "VariableDeclaration",
                "scope": 4474,
                "src": "2036:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4460,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2036:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4463,
                "name": "minStake",
                "nodeType": "VariableDeclaration",
                "scope": 4474,
                "src": "2106:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4462,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2106:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4465,
                "name": "alpha",
                "nodeType": "VariableDeclaration",
                "scope": 4474,
                "src": "2177:10:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4464,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2177:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4467,
                "name": "feeForJuror",
                "nodeType": "VariableDeclaration",
                "scope": 4474,
                "src": "2253:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4466,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2253:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4469,
                "name": "jurorsForCourtJump",
                "nodeType": "VariableDeclaration",
                "scope": 4474,
                "src": "2462:23:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4468,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2462:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4473,
                "name": "timesPerPeriod",
                "nodeType": "VariableDeclaration",
                "scope": 4474,
                "src": "2495:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                  "typeString": "uint256[4]"
                },
                "typeName": {
                  "baseType": {
                    "id": 4470,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4472,
                  "length": {
                    "argumentTypes": null,
                    "hexValue": "34",
                    "id": 4471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2500:1:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": null,
                      "typeString": null
                    },
                    "value": "4"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2495:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                    "typeString": "uint256[4]"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Court",
            "nodeType": "StructDefinition",
            "scope": 7910,
            "src": "1919:687:7",
            "visibility": "public"
          },
          {
            "canonicalName": "KlerosLiquid.DelayedSetStake",
            "id": 4481,
            "members": [
              {
                "constant": false,
                "id": 4476,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 4481,
                "src": "2644:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4475,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2644:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4478,
                "name": "subcourtID",
                "nodeType": "VariableDeclaration",
                "scope": 4481,
                "src": "2698:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 4477,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "2698:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4480,
                "name": "stake",
                "nodeType": "VariableDeclaration",
                "scope": 4481,
                "src": "2752:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 4479,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2752:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "DelayedSetStake",
            "nodeType": "StructDefinition",
            "scope": 7910,
            "src": "2611:179:7",
            "visibility": "public"
          },
          {
            "canonicalName": "KlerosLiquid.Vote",
            "id": 4490,
            "members": [
              {
                "constant": false,
                "id": 4483,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 4490,
                "src": "2833:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4482,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2833:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4485,
                "name": "commit",
                "nodeType": "VariableDeclaration",
                "scope": 4490,
                "src": "2887:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 4484,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2887:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4487,
                "name": "choice",
                "nodeType": "VariableDeclaration",
                "scope": 4490,
                "src": "2969:11:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4486,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2969:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4489,
                "name": "voted",
                "nodeType": "VariableDeclaration",
                "scope": 4490,
                "src": "3018:10:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4488,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3018:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Vote",
            "nodeType": "StructDefinition",
            "scope": 7910,
            "src": "2811:288:7",
            "visibility": "public"
          },
          {
            "canonicalName": "KlerosLiquid.VoteCounter",
            "id": 4499,
            "members": [
              {
                "constant": false,
                "id": 4492,
                "name": "winningChoice",
                "nodeType": "VariableDeclaration",
                "scope": 4499,
                "src": "3270:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4491,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3270:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4496,
                "name": "counts",
                "nodeType": "VariableDeclaration",
                "scope": 4499,
                "src": "3298:28:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "typeName": {
                  "id": 4495,
                  "keyType": {
                    "id": 4493,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "3298:21:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "valueType": {
                    "id": 4494,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3314:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4498,
                "name": "tied",
                "nodeType": "VariableDeclaration",
                "scope": 4499,
                "src": "3402:9:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4497,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3402:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "VoteCounter",
            "nodeType": "StructDefinition",
            "scope": 7910,
            "src": "3104:358:7",
            "visibility": "public"
          },
          {
            "canonicalName": "KlerosLiquid.Dispute",
            "id": 4538,
            "members": [
              {
                "constant": false,
                "id": 4501,
                "name": "subcourtID",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "3565:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 4500,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "3565:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4503,
                "name": "arbitrated",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "3637:21:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Arbitrable_$8221",
                  "typeString": "contract Arbitrable"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 4502,
                  "name": "Arbitrable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 8221,
                  "src": "3637:10:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrable_$8221",
                    "typeString": "contract Arbitrable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4505,
                "name": "numberOfChoices",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "3855:20:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4504,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3855:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4507,
                "name": "period",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "3885:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Period_$4454",
                  "typeString": "enum KlerosLiquid.Period"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 4506,
                  "name": "Period",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 4454,
                  "src": "3885:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Period_$4454",
                    "typeString": "enum KlerosLiquid.Period"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4509,
                "name": "lastPeriodChange",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "3946:21:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4508,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3946:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4513,
                "name": "votes",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "4255:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_struct$_Vote_$4490_storage_$dyn_storage_$dyn_storage_ptr",
                  "typeString": "struct KlerosLiquid.Vote[][]"
                },
                "typeName": {
                  "baseType": {
                    "baseType": {
                      "contractScope": null,
                      "id": 4510,
                      "name": "Vote",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 4490,
                      "src": "4255:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vote_$4490_storage_ptr",
                        "typeString": "struct KlerosLiquid.Vote"
                      }
                    },
                    "id": 4511,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4255:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vote_$4490_storage_$dyn_storage_ptr",
                      "typeString": "struct KlerosLiquid.Vote[]"
                    }
                  },
                  "id": 4512,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "4255:8:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_Vote_$4490_storage_$dyn_storage_$dyn_storage_ptr",
                    "typeString": "struct KlerosLiquid.Vote[][]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4516,
                "name": "voteCounters",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "4279:26:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_VoteCounter_$4499_storage_$dyn_storage_ptr",
                  "typeString": "struct KlerosLiquid.VoteCounter[]"
                },
                "typeName": {
                  "baseType": {
                    "contractScope": null,
                    "id": 4514,
                    "name": "VoteCounter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4499,
                    "src": "4279:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VoteCounter_$4499_storage_ptr",
                      "typeString": "struct KlerosLiquid.VoteCounter"
                    }
                  },
                  "id": 4515,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "4279:13:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_VoteCounter_$4499_storage_$dyn_storage_ptr",
                    "typeString": "struct KlerosLiquid.VoteCounter[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4519,
                "name": "tokensAtStakePerJuror",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "4372:28:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 4517,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4372:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4518,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "4372:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4522,
                "name": "totalFeesForJurors",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "4503:25:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 4520,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4503:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4521,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "4503:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4524,
                "name": "drawsInRound",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "4609:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4523,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4609:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4526,
                "name": "commitsInRound",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "4685:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4525,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4685:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4529,
                "name": "votesInEachRound",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "4765:23:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 4527,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4765:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4528,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "4765:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4532,
                "name": "repartitionsInEachRound",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "4994:30:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 4530,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4994:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4531,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "4994:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4535,
                "name": "penaltiesInEachRound",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "5034:27:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 4533,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5034:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4534,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "5034:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4537,
                "name": "ruled",
                "nodeType": "VariableDeclaration",
                "scope": 4538,
                "src": "5178:10:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4536,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "5178:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Dispute",
            "nodeType": "StructDefinition",
            "scope": 7910,
            "src": "3467:1786:7",
            "visibility": "public"
          },
          {
            "canonicalName": "KlerosLiquid.Juror",
            "id": 4546,
            "members": [
              {
                "constant": false,
                "id": 4541,
                "name": "subcourtIDs",
                "nodeType": "VariableDeclaration",
                "scope": 4546,
                "src": "5469:20:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                  "typeString": "uint96[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 4539,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5469:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 4540,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "5469:8:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                    "typeString": "uint96[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4543,
                "name": "stakedTokens",
                "nodeType": "VariableDeclaration",
                "scope": 4546,
                "src": "5499:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4542,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "5499:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4545,
                "name": "lockedTokens",
                "nodeType": "VariableDeclaration",
                "scope": 4546,
                "src": "5585:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4544,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "5585:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Juror",
            "nodeType": "StructDefinition",
            "scope": 7910,
            "src": "5272:395:7",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when we pass to a new phase.\n @param _phase The new phase.",
            "id": 4550,
            "name": "NewPhase",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4548,
                  "indexed": false,
                  "name": "_phase",
                  "nodeType": "VariableDeclaration",
                  "scope": 4550,
                  "src": "5801:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Phase_$4448",
                    "typeString": "enum KlerosLiquid.Phase"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4547,
                    "name": "Phase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4448,
                    "src": "5801:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$4448",
                      "typeString": "enum KlerosLiquid.Phase"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5800:14:7"
            },
            "src": "5786:29:7"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when a dispute passes to a new period.\n @param _disputeID The ID of the dispute.\n @param _period The new period.",
            "id": 4556,
            "name": "NewPeriod",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4552,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4556,
                  "src": "5993:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4551,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5993:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4554,
                  "indexed": false,
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "scope": 4556,
                  "src": "6018:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Period_$4454",
                    "typeString": "enum KlerosLiquid.Period"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4553,
                    "name": "Period",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4454,
                    "src": "6018:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Period_$4454",
                      "typeString": "enum KlerosLiquid.Period"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5992:41:7"
            },
            "src": "5977:57:7"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when a juror's stake is set.\n @param _address The address of the juror.\n @param _subcourtID The ID of the subcourt at the end of the stake path.\n @param _stake The new stake.\n @param _newTotalStake The new total stake.",
            "id": 4566,
            "name": "StakeSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4558,
                  "indexed": true,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 4566,
                  "src": "6331:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6331:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4560,
                  "indexed": false,
                  "name": "_subcourtID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4566,
                  "src": "6357:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4559,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6357:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4562,
                  "indexed": false,
                  "name": "_stake",
                  "nodeType": "VariableDeclaration",
                  "scope": 4566,
                  "src": "6375:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4561,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "6375:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4564,
                  "indexed": false,
                  "name": "_newTotalStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 4566,
                  "src": "6391:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4563,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6391:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6330:81:7"
            },
            "src": "6316:96:7"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when a juror is drawn.\n @param _address The drawn address.\n @param _disputeID The ID of the dispute.\n @param _appeal The appeal the draw is for. 0 is for the first round.\n @param _voteID The vote ID.",
            "id": 4576,
            "name": "Draw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4568,
                  "indexed": true,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 4576,
                  "src": "6686:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6686:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4570,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4576,
                  "src": "6712:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4569,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6712:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4572,
                  "indexed": false,
                  "name": "_appeal",
                  "nodeType": "VariableDeclaration",
                  "scope": 4576,
                  "src": "6737:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4571,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6737:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4574,
                  "indexed": false,
                  "name": "_voteID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4576,
                  "src": "6751:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4573,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6751:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6685:79:7"
            },
            "src": "6675:90:7"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when a juror wins or loses tokens and ETH from a dispute.\n @param _address The juror affected.\n @param _disputeID The ID of the dispute.\n @param _tokenAmount The amount of tokens won or lost.\n @param _ETHAmount The amount of ETH won or lost.",
            "id": 4586,
            "name": "TokenAndETHShift",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4578,
                  "indexed": true,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 4586,
                  "src": "7093:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7093:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4580,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4586,
                  "src": "7119:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4579,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7119:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4582,
                  "indexed": false,
                  "name": "_tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4586,
                  "src": "7144:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 4581,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "7144:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4584,
                  "indexed": false,
                  "name": "_ETHAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4586,
                  "src": "7162:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 4583,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "7162:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7092:85:7"
            },
            "src": "7070:108:7"
          },
          {
            "constant": true,
            "id": 4589,
            "name": "MAX_STAKE_PATHS",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "7228:40:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4587,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7228:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "34",
              "id": 4588,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7267:1:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4592,
            "name": "MIN_JURORS",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "7329:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4590,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7329:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 4591,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7363:1:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4602,
            "name": "NON_PAYABLE_AMOUNT",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "7431:60:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4593,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7431:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                "typeString": "int_const 5789...(69 digits omitted)...9967"
              },
              "id": 4601,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1",
                      "typeString": "int_const 1157...(70 digits omitted)...9934"
                    },
                    "id": 4598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                        "typeString": "int_const 1157...(70 digits omitted)...9936"
                      },
                      "id": 4596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 4594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7474:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "323536",
                        "id": 4595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7479:3:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_256_by_1",
                          "typeString": "int_const 256"
                        },
                        "value": "256"
                      },
                      "src": "7474:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                        "typeString": "int_const 1157...(70 digits omitted)...9936"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 4597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7485:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "7474:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1",
                      "typeString": "int_const 1157...(70 digits omitted)...9934"
                    }
                  }
                ],
                "id": 4599,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "7473:14:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639934_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9934"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "32",
                "id": 4600,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7490:1:7",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "src": "7473:18:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                "typeString": "int_const 5789...(69 digits omitted)...9967"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4605,
            "name": "ALPHA_DIVISOR",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "7541:40:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4603,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7541:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "316534",
              "id": 4604,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7578:3:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "1e4"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4607,
            "name": "governor",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "7654:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4606,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "7654:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4609,
            "name": "pinakion",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "7716:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
              "typeString": "contract MiniMeTokenERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 4608,
              "name": "Pinakion",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8305,
              "src": "7716:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
                "typeString": "contract MiniMeTokenERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4611,
            "name": "RNGenerator",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "7778:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RNG_$10749",
              "typeString": "contract RNG"
            },
            "typeName": {
              "contractScope": null,
              "id": 4610,
              "name": "RNG",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10749,
              "src": "7778:3:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RNG_$10749",
                "typeString": "contract RNG"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4613,
            "name": "phase",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "7870:18:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Phase_$4448",
              "typeString": "enum KlerosLiquid.Phase"
            },
            "typeName": {
              "contractScope": null,
              "id": 4612,
              "name": "Phase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4448,
              "src": "7870:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Phase_$4448",
                "typeString": "enum KlerosLiquid.Phase"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4615,
            "name": "lastPhaseChange",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "7916:27:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4614,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7916:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4617,
            "name": "disputesWithoutJurors",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "7989:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4616,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7989:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4619,
            "name": "RNBlock",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "8224:19:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4618,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "8224:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4621,
            "name": "RN",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "8249:14:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4620,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "8249:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4623,
            "name": "minStakingTime",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "8299:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4622,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "8299:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4625,
            "name": "maxDrawingTime",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "8360:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4624,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "8360:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4628,
            "name": "lockInsolventTransfers",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "8568:41:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4626,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "8568:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 4627,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8605:4:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4631,
            "name": "courts",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "8638:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
              "typeString": "struct KlerosLiquid.Court[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 4629,
                "name": "Court",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4474,
                "src": "8638:5:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Court_$4474_storage_ptr",
                  "typeString": "struct KlerosLiquid.Court"
                }
              },
              "id": 4630,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "8638:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage_ptr",
                "typeString": "struct KlerosLiquid.Court[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 4634,
            "libraryName": {
              "contractScope": null,
              "id": 4632,
              "name": "SortitionSumTreeFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1538,
              "src": "8689:23:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SortitionSumTreeFactory_$1538",
                "typeString": "library SortitionSumTreeFactory"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "8683:76:7",
            "typeName": {
              "contractScope": null,
              "id": 4633,
              "name": "SortitionSumTreeFactory.SortitionSumTrees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 877,
              "src": "8717:41:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_SortitionSumTrees_$877_storage_ptr",
                "typeString": "struct SortitionSumTreeFactory.SortitionSumTrees"
              }
            }
          },
          {
            "constant": false,
            "id": 4636,
            "name": "sortitionSumTrees",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "8814:68:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_SortitionSumTrees_$877_storage",
              "typeString": "struct SortitionSumTreeFactory.SortitionSumTrees"
            },
            "typeName": {
              "contractScope": null,
              "id": 4635,
              "name": "SortitionSumTreeFactory.SortitionSumTrees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 877,
              "src": "8814:41:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_SortitionSumTrees_$877_storage_ptr",
                "typeString": "struct SortitionSumTreeFactory.SortitionSumTrees"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4640,
            "name": "delayedSetStakes",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "9018:56:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DelayedSetStake_$4481_storage_$",
              "typeString": "mapping(uint256 => struct KlerosLiquid.DelayedSetStake)"
            },
            "typeName": {
              "id": 4639,
              "keyType": {
                "id": 4637,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "9026:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "9018:32:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DelayedSetStake_$4481_storage_$",
                "typeString": "mapping(uint256 => struct KlerosLiquid.DelayedSetStake)"
              },
              "valueType": {
                "contractScope": null,
                "id": 4638,
                "name": "DelayedSetStake",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4481,
                "src": "9034:15:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DelayedSetStake_$4481_storage_ptr",
                  "typeString": "struct KlerosLiquid.DelayedSetStake"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4643,
            "name": "nextDelayedSetStake",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "9200:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4641,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "9200:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 4642,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "9234:1:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4645,
            "name": "lastDelayedSetStake",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "9241:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4644,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "9241:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4648,
            "name": "disputes",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "9390:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Dispute_$4538_storage_$dyn_storage",
              "typeString": "struct KlerosLiquid.Dispute[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 4646,
                "name": "Dispute",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4538,
                "src": "9390:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                  "typeString": "struct KlerosLiquid.Dispute"
                }
              },
              "id": 4647,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "9390:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Dispute_$4538_storage_$dyn_storage_ptr",
                "typeString": "struct KlerosLiquid.Dispute[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4652,
            "name": "jurors",
            "nodeType": "VariableDeclaration",
            "scope": 7910,
            "src": "9452:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Juror_$4546_storage_$",
              "typeString": "mapping(address => struct KlerosLiquid.Juror)"
            },
            "typeName": {
              "id": 4651,
              "keyType": {
                "id": 4649,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "9460:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "9452:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Juror_$4546_storage_$",
                "typeString": "mapping(address => struct KlerosLiquid.Juror)"
              },
              "valueType": {
                "contractScope": null,
                "id": 4650,
                "name": "Juror",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4546,
                "src": "9471:5:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Juror_$4546_storage_ptr",
                  "typeString": "struct KlerosLiquid.Juror"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4663,
              "nodeType": "Block",
              "src": "9663:30:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Phase_$4448",
                          "typeString": "enum KlerosLiquid.Phase"
                        },
                        "id": 4659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4657,
                          "name": "phase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4613,
                          "src": "9672:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$4448",
                            "typeString": "enum KlerosLiquid.Phase"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4658,
                          "name": "_phase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4654,
                          "src": "9681:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$4448",
                            "typeString": "enum KlerosLiquid.Phase"
                          }
                        },
                        "src": "9672:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11907, 11908],
                      "referencedDeclaration": 11907,
                      "src": "9664:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9664:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4661,
                  "nodeType": "ExpressionStatement",
                  "src": "9664:24:7"
                },
                {
                  "id": 4662,
                  "nodeType": "PlaceholderStatement",
                  "src": "9690:1:7"
                }
              ]
            },
            "documentation": "@dev Requires a specific phase.\n @param _phase The required phase.",
            "id": 4664,
            "name": "onlyDuringPhase",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4654,
                  "name": "_phase",
                  "nodeType": "VariableDeclaration",
                  "scope": 4664,
                  "src": "9649:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Phase_$4448",
                    "typeString": "enum KlerosLiquid.Phase"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4653,
                    "name": "Phase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4448,
                    "src": "9649:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$4448",
                      "typeString": "enum KlerosLiquid.Phase"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9648:14:7"
            },
            "src": "9624:69:7",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4680,
              "nodeType": "Block",
              "src": "9913:53:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Period_$4454",
                          "typeString": "enum KlerosLiquid.Period"
                        },
                        "id": 4676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4671,
                              "name": "disputes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4648,
                              "src": "9922:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Dispute_$4538_storage_$dyn_storage",
                                "typeString": "struct KlerosLiquid.Dispute storage ref[] storage ref"
                              }
                            },
                            "id": 4673,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 4672,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4666,
                              "src": "9931:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9922:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$4538_storage",
                              "typeString": "struct KlerosLiquid.Dispute storage ref"
                            }
                          },
                          "id": 4674,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "period",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4507,
                          "src": "9922:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Period_$4454",
                            "typeString": "enum KlerosLiquid.Period"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4675,
                          "name": "_period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4668,
                          "src": "9953:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Period_$4454",
                            "typeString": "enum KlerosLiquid.Period"
                          }
                        },
                        "src": "9922:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4670,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11907, 11908],
                      "referencedDeclaration": 11907,
                      "src": "9914:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9914:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4678,
                  "nodeType": "ExpressionStatement",
                  "src": "9914:47:7"
                },
                {
                  "id": 4679,
                  "nodeType": "PlaceholderStatement",
                  "src": "9963:1:7"
                }
              ]
            },
            "documentation": "@dev Requires a specific period in a dispute.\n @param _disputeID The ID of the dispute.\n @param _period The required period.",
            "id": 4681,
            "name": "onlyDuringPeriod",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4666,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "9880:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4665,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9880:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4668,
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "9897:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Period_$4454",
                    "typeString": "enum KlerosLiquid.Period"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4667,
                    "name": "Period",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4454,
                    "src": "9897:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Period_$4454",
                      "typeString": "enum KlerosLiquid.Period"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9879:33:7"
            },
            "src": "9854:112:7",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4691,
              "nodeType": "Block",
              "src": "10112:37:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4684,
                          "name": "governor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4607,
                          "src": "10121:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4685,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11904,
                            "src": "10133:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10133:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10121:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4683,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11907, 11908],
                      "referencedDeclaration": 11907,
                      "src": "10113:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10113:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4689,
                  "nodeType": "ExpressionStatement",
                  "src": "10113:31:7"
                },
                {
                  "id": 4690,
                  "nodeType": "PlaceholderStatement",
                  "src": "10146:1:7"
                }
              ]
            },
            "documentation": "@dev Requires that the sender is the governor. Note that the governor is expected to not be malicious. ",
            "id": 4692,
            "name": "onlyByGovernor",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10109:2:7"
            },
            "src": "10086:63:7",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4773,
              "nodeType": "Block",
              "src": "11549:694:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4721,
                      "name": "governor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4607,
                      "src": "11591:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4722,
                      "name": "_governor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4694,
                      "src": "11602:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11591:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4724,
                  "nodeType": "ExpressionStatement",
                  "src": "11591:20:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4725,
                      "name": "pinakion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4609,
                      "src": "11621:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
                        "typeString": "contract MiniMeTokenERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4726,
                      "name": "_pinakion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4696,
                      "src": "11632:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
                        "typeString": "contract MiniMeTokenERC20"
                      }
                    },
                    "src": "11621:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
                      "typeString": "contract MiniMeTokenERC20"
                    }
                  },
                  "id": 4728,
                  "nodeType": "ExpressionStatement",
                  "src": "11621:20:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4729,
                      "name": "RNGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4611,
                      "src": "11651:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RNG_$10749",
                        "typeString": "contract RNG"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4730,
                      "name": "_RNGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4698,
                      "src": "11665:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RNG_$10749",
                        "typeString": "contract RNG"
                      }
                    },
                    "src": "11651:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RNG_$10749",
                      "typeString": "contract RNG"
                    }
                  },
                  "id": 4732,
                  "nodeType": "ExpressionStatement",
                  "src": "11651:26:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4733,
                      "name": "minStakingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4623,
                      "src": "11687:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4734,
                      "name": "_minStakingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4700,
                      "src": "11704:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11687:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4736,
                  "nodeType": "ExpressionStatement",
                  "src": "11687:32:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4737,
                      "name": "maxDrawingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4625,
                      "src": "11729:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4738,
                      "name": "_maxDrawingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4702,
                      "src": "11746:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11729:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4740,
                  "nodeType": "ExpressionStatement",
                  "src": "11729:32:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4741,
                      "name": "lastPhaseChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4615,
                      "src": "11771:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4742,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11906,
                      "src": "11789:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11771:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4744,
                  "nodeType": "ExpressionStatement",
                  "src": "11771:21:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 4749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11880:1:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 4753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11916:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "11905:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 4750,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11909:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4751,
                                "length": null,
                                "nodeType": "ArrayTypeName",
                                "src": "11909:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 4754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11905:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4755,
                            "name": "_hiddenVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4704,
                            "src": "11945:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4756,
                            "name": "_minStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4706,
                            "src": "11981:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4757,
                            "name": "_alpha",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4708,
                            "src": "12011:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4758,
                            "name": "_feeForJuror",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4710,
                            "src": "12044:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4759,
                            "name": "_jurorsForCourtJump",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4712,
                            "src": "12090:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4760,
                            "name": "_timesPerPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4716,
                            "src": "12139:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4748,
                          "name": "Court",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4474,
                          "src": "11852:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Court_$4474_storage_ptr_$",
                            "typeString": "type(struct KlerosLiquid.Court storage pointer)"
                          }
                        },
                        "id": 4761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "parent",
                          "children",
                          "hiddenVotes",
                          "minStake",
                          "alpha",
                          "feeForJuror",
                          "jurorsForCourtJump",
                          "timesPerPeriod"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "11852:313:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Court_$4474_memory",
                          "typeString": "struct KlerosLiquid.Court memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Court_$4474_memory",
                          "typeString": "struct KlerosLiquid.Court memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4745,
                        "name": "courts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4631,
                        "src": "11840:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                          "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                        }
                      },
                      "id": 4747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11840:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Court_$4474_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct KlerosLiquid.Court storage ref) returns (uint256)"
                      }
                    },
                    "id": 4762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11840:326:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4763,
                  "nodeType": "ExpressionStatement",
                  "src": "11840:326:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 4768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12213:1:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12205:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 4769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12205:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4770,
                        "name": "_sortitionSumTreeK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4718,
                        "src": "12217:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4764,
                        "name": "sortitionSumTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4636,
                        "src": "12176:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SortitionSumTrees_$877_storage",
                          "typeString": "struct SortitionSumTreeFactory.SortitionSumTrees storage ref"
                        }
                      },
                      "id": 4766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createTree",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 939,
                      "src": "12176:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_SortitionSumTrees_$877_storage_ptr_$_t_bytes32_$_t_uint256_$returns$__$bound_to$_t_struct$_SortitionSumTrees_$877_storage_ptr_$",
                        "typeString": "function (struct SortitionSumTreeFactory.SortitionSumTrees storage pointer,bytes32,uint256)"
                      }
                    },
                    "id": 4771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12176:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4772,
                  "nodeType": "ExpressionStatement",
                  "src": "12176:60:7"
                }
              ]
            },
            "documentation": "@dev Constructs the KlerosLiquid contract.\n @param _governor The governor's address.\n @param _pinakion The address of the token contract.\n @param _RNGenerator The address of the RNG contract.\n @param _minStakingTime The minimum time that the staking phase should last.\n @param _maxDrawingTime The maximum time that the drawing phase should last.\n @param _hiddenVotes The `hiddenVotes` property value of the general court.\n @param _minStake The `minStake` property value of the general court.\n @param _alpha The `alpha` property value of the general court.\n @param _feeForJuror The `feeForJuror` property value of the general court.\n @param _jurorsForCourtJump The `jurorsForCourtJump` property value of the general court.\n @param _timesPerPeriod The `timesPerPeriod` property value of the general court.\n @param _sortitionSumTreeK The number of children per node of the general court's sortition sum tree.",
            "id": 4774,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4694,
                  "name": "_governor",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11205:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11205:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4696,
                  "name": "_pinakion",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11232:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
                    "typeString": "contract MiniMeTokenERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4695,
                    "name": "Pinakion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8305,
                    "src": "11232:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
                      "typeString": "contract MiniMeTokenERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4698,
                  "name": "_RNGenerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11260:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RNG_$10749",
                    "typeString": "contract RNG"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4697,
                    "name": "RNG",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10749,
                    "src": "11260:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RNG_$10749",
                      "typeString": "contract RNG"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4700,
                  "name": "_minStakingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11286:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4699,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11286:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4702,
                  "name": "_maxDrawingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11316:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4701,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11316:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4704,
                  "name": "_hiddenVotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11346:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4703,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11346:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4706,
                  "name": "_minStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11373:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4705,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11373:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4708,
                  "name": "_alpha",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11397:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4707,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11397:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4710,
                  "name": "_feeForJuror",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11418:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4709,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11418:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4712,
                  "name": "_jurorsForCourtJump",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11445:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4711,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11445:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4716,
                  "name": "_timesPerPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11479:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                    "typeString": "uint256[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4713,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "11479:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4715,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 4714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11484:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "11479:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                      "typeString": "uint256[4]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4718,
                  "name": "_sortitionSumTreeK",
                  "nodeType": "VariableDeclaration",
                  "scope": 4774,
                  "src": "11512:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4717,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11512:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11195:346:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 4720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11549:0:7"
            },
            "scope": 7910,
            "src": "11184:1059:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4795,
              "nodeType": "Block",
              "src": "12615:111:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4791,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4780,
                            "src": "12666:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4789,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4778,
                              "src": "12657:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4786,
                                "name": "_destination",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4776,
                                "src": "12633:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 4787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "12633:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
                                "typeString": "function () payable returns (bool)"
                              }
                            },
                            "id": 4788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "12633:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_barecall_payable$__$returns$_t_bool_$value_$",
                              "typeString": "function (uint256) returns (function () payable returns (bool))"
                            }
                          },
                          "id": 4790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12633:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$value",
                            "typeString": "function () payable returns (bool)"
                          }
                        },
                        "id": 4792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12633:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11907, 11908],
                      "referencedDeclaration": 11907,
                      "src": "12625:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12625:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4794,
                  "nodeType": "ExpressionStatement",
                  "src": "12625:48:7"
                }
              ]
            },
            "documentation": "@dev Lets the governor call anything on behalf of the contract.\n @param _destination The destination of the call.\n @param _amount The value sent with the call.\n @param _data The data sent with the call.",
            "id": 4796,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4783,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4782,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "12600:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12600:14:7"
              }
            ],
            "name": "executeGovernorProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4776,
                  "name": "_destination",
                  "nodeType": "VariableDeclaration",
                  "scope": 4796,
                  "src": "12542:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12542:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4778,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4796,
                  "src": "12564:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4777,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12564:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4780,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 4796,
                  "src": "12578:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4779,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12578:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12541:49:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 4784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12615:0:7"
            },
            "scope": 7910,
            "src": "12509:217:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4807,
              "nodeType": "Block",
              "src": "12937:37:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4803,
                      "name": "governor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4607,
                      "src": "12947:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4804,
                      "name": "_governor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4798,
                      "src": "12958:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12947:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4806,
                  "nodeType": "ExpressionStatement",
                  "src": "12947:20:7"
                }
              ]
            },
            "documentation": "@dev Changes the `governor` storage variable.\n @param _governor The new value for the `governor` storage variable.",
            "id": 4808,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4801,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4800,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "12922:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12922:14:7"
              }
            ],
            "name": "changeGovernor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4798,
                  "name": "_governor",
                  "nodeType": "VariableDeclaration",
                  "scope": 4808,
                  "src": "12894:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12894:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12893:19:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 4802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12937:0:7"
            },
            "scope": 7910,
            "src": "12870:104:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4819,
              "nodeType": "Block",
              "src": "13186:37:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4815,
                      "name": "pinakion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4609,
                      "src": "13196:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
                        "typeString": "contract MiniMeTokenERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4816,
                      "name": "_pinakion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4810,
                      "src": "13207:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
                        "typeString": "contract MiniMeTokenERC20"
                      }
                    },
                    "src": "13196:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
                      "typeString": "contract MiniMeTokenERC20"
                    }
                  },
                  "id": 4818,
                  "nodeType": "ExpressionStatement",
                  "src": "13196:20:7"
                }
              ]
            },
            "documentation": "@dev Changes the `pinakion` storage variable.\n @param _pinakion The new value for the `pinakion` storage variable.",
            "id": 4820,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4813,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4812,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "13171:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13171:14:7"
              }
            ],
            "name": "changePinakion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4810,
                  "name": "_pinakion",
                  "nodeType": "VariableDeclaration",
                  "scope": 4820,
                  "src": "13142:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
                    "typeString": "contract MiniMeTokenERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4809,
                    "name": "Pinakion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8305,
                    "src": "13142:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MiniMeTokenERC20_$8305",
                      "typeString": "contract MiniMeTokenERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13141:20:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 4814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13186:0:7"
            },
            "scope": 7910,
            "src": "13118:105:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4850,
              "nodeType": "Block",
              "src": "13445:178:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4827,
                      "name": "RNGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4611,
                      "src": "13455:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RNG_$10749",
                        "typeString": "contract RNG"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4828,
                      "name": "_RNGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4822,
                      "src": "13469:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RNG_$10749",
                        "typeString": "contract RNG"
                      }
                    },
                    "src": "13455:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RNG_$10749",
                      "typeString": "contract RNG"
                    }
                  },
                  "id": 4830,
                  "nodeType": "ExpressionStatement",
                  "src": "13455:26:7"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_Phase_$4448",
                      "typeString": "enum KlerosLiquid.Phase"
                    },
                    "id": 4834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4831,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4613,
                      "src": "13495:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$4448",
                        "typeString": "enum KlerosLiquid.Phase"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4832,
                        "name": "Phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4448,
                        "src": "13504:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Phase_$4448_$",
                          "typeString": "type(enum KlerosLiquid.Phase)"
                        }
                      },
                      "id": 4833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "generating",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13504:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$4448",
                        "typeString": "enum KlerosLiquid.Phase"
                      }
                    },
                    "src": "13495:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4849,
                  "nodeType": "IfStatement",
                  "src": "13491:126:7",
                  "trueBody": {
                    "id": 4848,
                    "nodeType": "Block",
                    "src": "13522:95:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4835,
                            "name": "RNBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4619,
                            "src": "13536:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4836,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11894,
                                "src": "13546:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 4837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13546:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 4838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13561:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "13546:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13536:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4841,
                        "nodeType": "ExpressionStatement",
                        "src": "13536:26:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4845,
                              "name": "RNBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4619,
                              "src": "13598:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4842,
                              "name": "RNGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4611,
                              "src": "13576:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RNG_$10749",
                                "typeString": "contract RNG"
                              }
                            },
                            "id": 4844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "requestRN",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10713,
                            "src": "13576:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 4846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13576:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4847,
                        "nodeType": "ExpressionStatement",
                        "src": "13576:30:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Changes the `RNGenerator` storage variable.\n @param _RNGenerator The new value for the `RNGenerator` storage variable.",
            "id": 4851,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4825,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4824,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "13430:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13430:14:7"
              }
            ],
            "name": "changeRNGenerator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4822,
                  "name": "_RNGenerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4851,
                  "src": "13403:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RNG_$10749",
                    "typeString": "contract RNG"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4821,
                    "name": "RNG",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10749,
                    "src": "13403:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RNG_$10749",
                      "typeString": "contract RNG"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13402:18:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 4826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13445:0:7"
            },
            "scope": 7910,
            "src": "13376:247:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4862,
              "nodeType": "Block",
              "src": "13861:49:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4858,
                      "name": "minStakingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4623,
                      "src": "13871:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4859,
                      "name": "_minStakingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4853,
                      "src": "13888:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13871:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4861,
                  "nodeType": "ExpressionStatement",
                  "src": "13871:32:7"
                }
              ]
            },
            "documentation": "@dev Changes the `minStakingTime` storage variable.\n @param _minStakingTime The new value for the `minStakingTime` storage variable.",
            "id": 4863,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4856,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4855,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "13846:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13846:14:7"
              }
            ],
            "name": "changeMinStakingTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4853,
                  "name": "_minStakingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 4863,
                  "src": "13815:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4852,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13815:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13814:22:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 4857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13861:0:7"
            },
            "scope": 7910,
            "src": "13785:125:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4874,
              "nodeType": "Block",
              "src": "14148:49:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4870,
                      "name": "maxDrawingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4625,
                      "src": "14158:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4871,
                      "name": "_maxDrawingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4865,
                      "src": "14175:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14158:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4873,
                  "nodeType": "ExpressionStatement",
                  "src": "14158:32:7"
                }
              ]
            },
            "documentation": "@dev Changes the `maxDrawingTime` storage variable.\n @param _maxDrawingTime The new value for the `maxDrawingTime` storage variable.",
            "id": 4875,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4868,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4867,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "14133:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "14133:14:7"
              }
            ],
            "name": "changeMaxDrawingTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4865,
                  "name": "_maxDrawingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 4875,
                  "src": "14102:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4864,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14102:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14101:22:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 4869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14148:0:7"
            },
            "scope": 7910,
            "src": "14072:125:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4949,
              "nodeType": "Block",
              "src": "15194:764:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4899,
                              "name": "courts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4631,
                              "src": "15212:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                                "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                              }
                            },
                            "id": 4901,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 4900,
                              "name": "_parent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4877,
                              "src": "15219:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15212:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Court_$4474_storage",
                              "typeString": "struct KlerosLiquid.Court storage ref"
                            }
                          },
                          "id": 4902,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minStake",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4463,
                          "src": "15212:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4903,
                          "name": "_minStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4881,
                          "src": "15240:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15212:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4120737562636f7572742063616e6e6f742062652061206368696c64206f66206120737562636f7572742077697468206120686967686572206d696e696d756d207374616b652e",
                        "id": 4905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15251:73:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be2f3434d97322bc79b5ea9c0c5a0ba3454c756a7661650e72778b155418b12c",
                          "typeString": "literal_string \"A subcourt cannot be a child of a subcourt with a higher minimum stake.\""
                        },
                        "value": "A subcourt cannot be a child of a subcourt with a higher minimum stake."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be2f3434d97322bc79b5ea9c0c5a0ba3454c756a7661650e72778b155418b12c",
                          "typeString": "literal_string \"A subcourt cannot be a child of a subcourt with a higher minimum stake.\""
                        }
                      ],
                      "id": 4898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11907, 11908],
                      "referencedDeclaration": 11908,
                      "src": "15204:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15204:121:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4907,
                  "nodeType": "ExpressionStatement",
                  "src": "15204:121:7"
                },
                {
                  "assignments": [4909],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4909,
                      "name": "subcourtID",
                      "nodeType": "VariableDeclaration",
                      "scope": 4950,
                      "src": "15368:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 4908,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "15368:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4931,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4914,
                                  "name": "_parent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4877,
                                  "src": "15452:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 4918,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15498:1:7",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 4917,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "15487:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                                      "typeString": "function (uint256) pure returns (uint256[] memory)"
                                    },
                                    "typeName": {
                                      "baseType": {
                                        "id": 4915,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "15491:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 4916,
                                      "length": null,
                                      "nodeType": "ArrayTypeName",
                                      "src": "15491:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                        "typeString": "uint256[]"
                                      }
                                    }
                                  },
                                  "id": 4919,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15487:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 4920,
                                  "name": "_hiddenVotes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4879,
                                  "src": "15531:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 4921,
                                  "name": "_minStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4881,
                                  "src": "15571:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 4922,
                                  "name": "_alpha",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4883,
                                  "src": "15605:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 4923,
                                  "name": "_feeForJuror",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4885,
                                  "src": "15642:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 4924,
                                  "name": "_jurorsForCourtJump",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4887,
                                  "src": "15692:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 4925,
                                  "name": "_timesPerPeriod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4891,
                                  "src": "15745:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                                    "typeString": "uint256[4] calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4913,
                                "name": "Court",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4474,
                                "src": "15420:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Court_$4474_storage_ptr_$",
                                  "typeString": "type(struct KlerosLiquid.Court storage pointer)"
                                }
                              },
                              "id": 4926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "parent",
                                "children",
                                "hiddenVotes",
                                "minStake",
                                "alpha",
                                "feeForJuror",
                                "jurorsForCourtJump",
                                "timesPerPeriod"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "15420:355:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Court_$4474_memory",
                                "typeString": "struct KlerosLiquid.Court memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Court_$4474_memory",
                                "typeString": "struct KlerosLiquid.Court memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4911,
                              "name": "courts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4631,
                              "src": "15408:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                                "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                              }
                            },
                            "id": 4912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "15408:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Court_$4474_storage_$returns$_t_uint256_$",
                              "typeString": "function (struct KlerosLiquid.Court storage ref) returns (uint256)"
                            }
                          },
                          "id": 4927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15408:368:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 4928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15779:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15408:372:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15388:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint96_$",
                        "typeString": "type(uint96)"
                      },
                      "typeName": "uint96"
                    },
                    "id": 4930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15388:402:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15368:422:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4936,
                            "name": "subcourtID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4909,
                            "src": "15837:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          ],
                          "id": 4935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15829:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 4937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15829:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4938,
                        "name": "_sortitionSumTreeK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "15850:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4932,
                        "name": "sortitionSumTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4636,
                        "src": "15800:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SortitionSumTrees_$877_storage",
                          "typeString": "struct SortitionSumTreeFactory.SortitionSumTrees storage ref"
                        }
                      },
                      "id": 4934,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createTree",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 939,
                      "src": "15800:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_SortitionSumTrees_$877_storage_ptr_$_t_bytes32_$_t_uint256_$returns$__$bound_to$_t_struct$_SortitionSumTrees_$877_storage_ptr_$",
                        "typeString": "function (struct SortitionSumTreeFactory.SortitionSumTrees storage pointer,bytes32,uint256)"
                      }
                    },
                    "id": 4939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15800:69:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4940,
                  "nodeType": "ExpressionStatement",
                  "src": "15800:69:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4946,
                        "name": "subcourtID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4909,
                        "src": "15940:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4941,
                            "name": "courts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4631,
                            "src": "15910:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                              "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                            }
                          },
                          "id": 4943,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 4942,
                            "name": "_parent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4877,
                            "src": "15917:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15910:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Court_$4474_storage",
                            "typeString": "struct KlerosLiquid.Court storage ref"
                          }
                        },
                        "id": 4944,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "children",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4459,
                        "src": "15910:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 4945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "15910:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 4947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15910:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4948,
                  "nodeType": "ExpressionStatement",
                  "src": "15910:41:7"
                }
              ]
            },
            "documentation": "@dev Creates a subcourt under a specified parent court.\n @param _parent The `parent` property value of the subcourt.\n @param _hiddenVotes The `hiddenVotes` property value of the subcourt.\n @param _minStake The `minStake` property value of the subcourt.\n @param _alpha The `alpha` property value of the subcourt.\n @param _feeForJuror The `feeForJuror` property value of the subcourt.\n @param _jurorsForCourtJump The `jurorsForCourtJump` property value of the subcourt.\n @param _timesPerPeriod The `timesPerPeriod` property value of the subcourt.\n @param _sortitionSumTreeK The number of children per node of the subcourt's sortition sum tree.",
            "id": 4950,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4896,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4895,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "15179:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "15179:14:7"
              }
            ],
            "name": "createSubcourt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4877,
                  "name": "_parent",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "14950:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 4876,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "14950:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4879,
                  "name": "_hiddenVotes",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "14974:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4878,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14974:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4881,
                  "name": "_minStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "15001:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4880,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15001:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4883,
                  "name": "_alpha",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "15025:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4882,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15025:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4885,
                  "name": "_feeForJuror",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "15046:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4884,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15046:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4887,
                  "name": "_jurorsForCourtJump",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "15073:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4886,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15073:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4891,
                  "name": "_timesPerPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "15107:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                    "typeString": "uint256[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4888,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "15107:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4890,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 4889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15112:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "15107:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                      "typeString": "uint256[4]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4893,
                  "name": "_sortitionSumTreeK",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "15140:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4892,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15140:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14940:229:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 4897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15194:0:7"
            },
            "scope": 7910,
            "src": "14917:1041:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5013,
              "nodeType": "Block",
              "src": "16337:443:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "id": 4962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 4960,
                            "name": "_subcourtID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4952,
                            "src": "16355:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 4961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16370:1:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16355:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 4963,
                                "name": "courts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4631,
                                "src": "16375:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                                  "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                                }
                              },
                              "id": 4968,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 4964,
                                    "name": "courts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4631,
                                    "src": "16382:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                                      "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                                    }
                                  },
                                  "id": 4966,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 4965,
                                    "name": "_subcourtID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4952,
                                    "src": "16389:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16382:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Court_$4474_storage",
                                    "typeString": "struct KlerosLiquid.Court storage ref"
                                  }
                                },
                                "id": 4967,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "parent",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4456,
                                "src": "16382:26:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16375:34:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Court_$4474_storage",
                                "typeString": "struct KlerosLiquid.Court storage ref"
                              }
                            },
                            "id": 4969,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "minStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4463,
                            "src": "16375:43:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4970,
                            "name": "_minStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4954,
                            "src": "16422:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16375:56:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "16355:76:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [11907, 11908],
                      "referencedDeclaration": 11907,
                      "src": "16347:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16347:85:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4974,
                  "nodeType": "ExpressionStatement",
                  "src": "16347:85:7"
                },
                {
                  "body": {
                    "id": 5004,
                    "nodeType": "Block",
                    "src": "16505:218:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 4990,
                                    "name": "courts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4631,
                                    "src": "16544:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                                      "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                                    }
                                  },
                                  "id": 4997,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 4991,
                                          "name": "courts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4631,
                                          "src": "16551:6:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                                            "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                                          }
                                        },
                                        "id": 4993,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 4992,
                                          "name": "_subcourtID",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4952,
                                          "src": "16558:11:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "16551:19:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Court_$4474_storage",
                                          "typeString": "struct KlerosLiquid.Court storage ref"
                                        }
                                      },
                                      "id": 4994,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "children",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4459,
                                      "src": "16551:28:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 4996,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 4995,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4976,
                                      "src": "16580:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16551:31:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16544:39:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Court_$4474_storage",
                                    "typeString": "struct KlerosLiquid.Court storage ref"
                                  }
                                },
                                "id": 4998,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "minStake",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4463,
                                "src": "16544:48:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 4999,
                                "name": "_minStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4954,
                                "src": "16596:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16544:61:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4120737562636f7572742063616e6e6f742062652074686520706172656e74206f66206120737562636f75727420776974682061206c6f776572206d696e696d756d207374616b652e",
                              "id": 5001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16623:75:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_99a5221eff20c0d1dc190ab162d01eda3049bf0a952fdaf6d295db38d27462d1",
                                "typeString": "literal_string \"A subcourt cannot be the parent of a subcourt with a lower minimum stake.\""
                              },
                              "value": "A subcourt cannot be the parent of a subcourt with a lower minimum stake."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_99a5221eff20c0d1dc190ab162d01eda3049bf0a952fdaf6d295db38d27462d1",
                                "typeString": "literal_string \"A subcourt cannot be the parent of a subcourt with a lower minimum stake.\""
                              }
                            ],
                            "id": 4989,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [11907, 11908],
                            "referencedDeclaration": 11908,
                            "src": "16519:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16519:193:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5003,
                        "nodeType": "ExpressionStatement",
                        "src": "16519:193:7"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4979,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4976,
                      "src": "16459:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4980,
                            "name": "courts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4631,
                            "src": "16463:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                              "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                            }
                          },
                          "id": 4982,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 4981,
                            "name": "_subcourtID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4952,
                            "src": "16470:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16463:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Court_$4474_storage",
                            "typeString": "struct KlerosLiquid.Court storage ref"
                          }
                        },
                        "id": 4983,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "children",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4459,
                        "src": "16463:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 4984,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "16463:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16459:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5005,
                  "initializationExpression": {
                    "assignments": [4976],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4976,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 5014,
                        "src": "16447:6:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4975,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16447:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 4978,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16456:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16447:10:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 4987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16500:3:7",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 4986,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4976,
                        "src": "16500:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4988,
                    "nodeType": "ExpressionStatement",
                    "src": "16500:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "16442:281:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5006,
                          "name": "courts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4631,
                          "src": "16733:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                            "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                          }
                        },
                        "id": 5008,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5007,
                          "name": "_subcourtID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4952,
                          "src": "16740:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16733:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Court_$4474_storage",
                          "typeString": "struct KlerosLiquid.Court storage ref"
                        }
                      },
                      "id": 5009,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4463,
                      "src": "16733:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5010,
                      "name": "_minStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4954,
                      "src": "16764:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16733:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5012,
                  "nodeType": "ExpressionStatement",
                  "src": "16733:40:7"
                }
              ]
            },
            "documentation": "@dev Changes the `minStake` property value of a specified subcourt. Don't set to a value lower than its parent's `minStake` property value.\n @param _subcourtID The ID of the subcourt.\n @param _minStake The new value for the `minStake` property value.",
            "id": 5014,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 4957,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4956,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "16322:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "16322:14:7"
              }
            ],
            "name": "changeSubcourtMinStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4952,
                  "name": "_subcourtID",
                  "nodeType": "VariableDeclaration",
                  "scope": 5014,
                  "src": "16277:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 4951,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "16277:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4954,
                  "name": "_minStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 5014,
                  "src": "16297:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4953,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16297:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16276:36:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 4958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16337:0:7"
            },
            "scope": 7910,
            "src": "16245:535:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5030,
              "nodeType": "Block",
              "src": "17072:51:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5023,
                          "name": "courts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4631,
                          "src": "17082:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                            "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                          }
                        },
                        "id": 5025,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5024,
                          "name": "_subcourtID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5016,
                          "src": "17089:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17082:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Court_$4474_storage",
                          "typeString": "struct KlerosLiquid.Court storage ref"
                        }
                      },
                      "id": 5026,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "alpha",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4465,
                      "src": "17082:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5027,
                      "name": "_alpha",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5018,
                      "src": "17110:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17082:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5029,
                  "nodeType": "ExpressionStatement",
                  "src": "17082:34:7"
                }
              ]
            },
            "documentation": "@dev Changes the `alpha` property value of a specified subcourt.\n @param _subcourtID The ID of the subcourt.\n @param _alpha The new value for the `alpha` property value.",
            "id": 5031,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 5021,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5020,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "17057:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "17057:14:7"
              }
            ],
            "name": "changeSubcourtAlpha",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5016,
                  "name": "_subcourtID",
                  "nodeType": "VariableDeclaration",
                  "scope": 5031,
                  "src": "17015:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 5015,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "17015:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5018,
                  "name": "_alpha",
                  "nodeType": "VariableDeclaration",
                  "scope": 5031,
                  "src": "17035:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5017,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17035:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17014:33:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 5022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17072:0:7"
            },
            "scope": 7910,
            "src": "16986:137:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5047,
              "nodeType": "Block",
              "src": "17442:63:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5040,
                          "name": "courts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4631,
                          "src": "17452:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                            "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                          }
                        },
                        "id": 5042,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5041,
                          "name": "_subcourtID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5033,
                          "src": "17459:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17452:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Court_$4474_storage",
                          "typeString": "struct KlerosLiquid.Court storage ref"
                        }
                      },
                      "id": 5043,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feeForJuror",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4467,
                      "src": "17452:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5044,
                      "name": "_feeForJuror",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5035,
                      "src": "17486:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17452:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5046,
                  "nodeType": "ExpressionStatement",
                  "src": "17452:46:7"
                }
              ]
            },
            "documentation": "@dev Changes the `feeForJuror` property value of a specified subcourt.\n @param _subcourtID The ID of the subcourt.\n @param _feeForJuror The new value for the `feeForJuror` property value.",
            "id": 5048,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 5038,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5037,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "17427:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "17427:14:7"
              }
            ],
            "name": "changeSubcourtJurorFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5033,
                  "name": "_subcourtID",
                  "nodeType": "VariableDeclaration",
                  "scope": 5048,
                  "src": "17379:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 5032,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "17379:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5035,
                  "name": "_feeForJuror",
                  "nodeType": "VariableDeclaration",
                  "scope": 5048,
                  "src": "17399:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5034,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17399:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17378:39:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 5039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17442:0:7"
            },
            "scope": 7910,
            "src": "17347:158:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5064,
              "nodeType": "Block",
              "src": "17857:77:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5057,
                          "name": "courts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4631,
                          "src": "17867:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                            "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                          }
                        },
                        "id": 5059,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5058,
                          "name": "_subcourtID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5050,
                          "src": "17874:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17867:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Court_$4474_storage",
                          "typeString": "struct KlerosLiquid.Court storage ref"
                        }
                      },
                      "id": 5060,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "jurorsForCourtJump",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4469,
                      "src": "17867:38:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5061,
                      "name": "_jurorsForCourtJump",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5052,
                      "src": "17908:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17867:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5063,
                  "nodeType": "ExpressionStatement",
                  "src": "17867:60:7"
                }
              ]
            },
            "documentation": "@dev Changes the `jurorsForCourtJump` property value of a specified subcourt.\n @param _subcourtID The ID of the subcourt.\n @param _jurorsForCourtJump The new value for the `jurorsForCourtJump` property value.",
            "id": 5065,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 5055,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5054,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "17842:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "17842:14:7"
              }
            ],
            "name": "changeSubcourtJurorsForJump",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5050,
                  "name": "_subcourtID",
                  "nodeType": "VariableDeclaration",
                  "scope": 5065,
                  "src": "17787:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 5049,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "17787:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5052,
                  "name": "_jurorsForCourtJump",
                  "nodeType": "VariableDeclaration",
                  "scope": 5065,
                  "src": "17807:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5051,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17807:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17786:46:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 5056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17857:0:7"
            },
            "scope": 7910,
            "src": "17750:184:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5083,
              "nodeType": "Block",
              "src": "18274:69:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5076,
                          "name": "courts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4631,
                          "src": "18284:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                            "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                          }
                        },
                        "id": 5078,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5077,
                          "name": "_subcourtID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5067,
                          "src": "18291:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18284:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Court_$4474_storage",
                          "typeString": "struct KlerosLiquid.Court storage ref"
                        }
                      },
                      "id": 5079,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timesPerPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4473,
                      "src": "18284:34:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_storage",
                        "typeString": "uint256[4] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5080,
                      "name": "_timesPerPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5071,
                      "src": "18321:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                        "typeString": "uint256[4] calldata"
                      }
                    },
                    "src": "18284:52:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage",
                      "typeString": "uint256[4] storage ref"
                    }
                  },
                  "id": 5082,
                  "nodeType": "ExpressionStatement",
                  "src": "18284:52:7"
                }
              ]
            },
            "documentation": "@dev Changes the `timesPerPeriod` property value of a specified subcourt.\n @param _subcourtID The ID of the subcourt.\n @param _timesPerPeriod The new value for the `timesPerPeriod` property value.",
            "id": 5084,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 5074,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5073,
                  "name": "onlyByGovernor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4692,
                  "src": "18259:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "18259:14:7"
              }
            ],
            "name": "changeSubcourtTimesPerPeriod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5067,
                  "name": "_subcourtID",
                  "nodeType": "VariableDeclaration",
                  "scope": 5084,
                  "src": "18205:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 5066,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "18205:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5071,
                  "name": "_timesPerPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 5084,
                  "src": "18225:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
                    "typeString": "uint256[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5068,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "18225:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5070,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 5069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18230:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "18225:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                      "typeString": "uint256[4]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18204:45:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 5075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18274:0:7"
            },
            "scope": 7910,
            "src": "18167:176:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5184,
              "nodeType": "Block",
              "src": "18421:909:7",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_Phase_$4448",
                      "typeString": "enum KlerosLiquid.Phase"
                    },
                    "id": 5090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5087,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4613,
                      "src": "18435:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$4448",
                        "typeString": "enum KlerosLiquid.Phase"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5088,
                        "name": "Phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4448,
                        "src": "18444:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Phase_$4448_$",
                          "typeString": "type(enum KlerosLiquid.Phase)"
                        }
                      },
                      "id": 5089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "staking",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "18444:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Phase_$4448",
                        "typeString": "enum KlerosLiquid.Phase"
                      }
                    },
                    "src": "18435:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_Phase_$4448",
                        "typeString": "enum KlerosLiquid.Phase"
                      },
                      "id": 5129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5126,
                        "name": "phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4613,
                        "src": "18803:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Phase_$4448",
                          "typeString": "enum KlerosLiquid.Phase"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5127,
                          "name": "Phase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4448,
                          "src": "18812:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Phase_$4448_$",
                            "typeString": "type(enum KlerosLiquid.Phase)"
                          }
                        },
                        "id": 5128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "generating",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "18812:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Phase_$4448",
                          "typeString": "enum KlerosLiquid.Phase"
                        }
                      },
                      "src": "18803:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Phase_$4448",
                          "typeString": "enum KlerosLiquid.Phase"
                        },
                        "id": 5153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5150,
                          "name": "phase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4613,
                          "src": "19008:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$4448",
                            "typeString": "enum KlerosLiquid.Phase"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5151,
                            "name": "Phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4448,
                            "src": "19017:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Phase_$4448_$",
                              "typeString": "type(enum KlerosLiquid.Phase)"
                            }
                          },
                          "id": 5152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "drawing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "19017:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$4448",
                            "typeString": "enum KlerosLiquid.Phase"
                          }
                        },
                        "src": "19008:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 5173,
                      "nodeType": "IfStatement",
                      "src": "19004:258:7",
                      "trueBody": {
                        "id": 5172,
                        "nodeType": "Block",
                        "src": "19032:230:7",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 5163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5157,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 5155,
                                      "name": "disputesWithoutJurors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4617,
                                      "src": "19054:21:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 5156,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19079:1:7",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "19054:26:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5162,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 5160,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 5158,
                                        "name": "now",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11906,
                                        "src": "19084:3:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "id": 5159,
                                        "name": "lastPhaseChange",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4615,
                                        "src": "19090:15:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "19084:21:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 5161,
                                      "name": "maxDrawingTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4625,
                                      "src": "19109:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "19084:39:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "19054:69:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "546865726520617265207374696c6c20646973707574657320776974686f7574206a75726f727320616e6420746865206d6178696d756d2064726177696e672074696d6520686173206e6f7420706173736564207965742e",
                                  "id": 5164,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19125:90:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8051120d9625b5fc74fb03d8b3d1c8cb88ac3e7a96d772cf8e9a46ef591b4dfa",
                                    "typeString": "literal_string \"There are still disputes without jurors and the maximum drawing time has not passed yet.\""
                                  },
                                  "value": "There are still disputes without jurors and the maximum drawing time has not passed yet."
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_8051120d9625b5fc74fb03d8b3d1c8cb88ac3e7a96d772cf8e9a46ef591b4dfa",
                                    "typeString": "literal_string \"There are still disputes without jurors and the maximum drawing time has not passed yet.\""
                                  }
                                ],
                                "id": 5154,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [11907, 11908],
                                "referencedDeclaration": 11908,
                                "src": "19046:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 5165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19046:170:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 5166,
                            "nodeType": "ExpressionStatement",
                            "src": "19046:170:7"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 5170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 5167,
                                "name": "phase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4613,
                                "src": "19230:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Phase_$4448",
                                  "typeString": "enum KlerosLiquid.Phase"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5168,
                                  "name": "Phase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4448,
                                  "src": "19238:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Phase_$4448_$",
                                    "typeString": "type(enum KlerosLiquid.Phase)"
                                  }
                                },
                                "id": 5169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "staking",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "19238:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Phase_$4448",
                                  "typeString": "enum KlerosLiquid.Phase"
                                }
                              },
                              "src": "19230:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Phase_$4448",
                                "typeString": "enum KlerosLiquid.Phase"
                              }
                            },
                            "id": 5171,
                            "nodeType": "ExpressionStatement",
                            "src": "19230:21:7"
                          }
                        ]
                      }
                    },
                    "id": 5174,
                    "nodeType": "IfStatement",
                    "src": "18799:463:7",
                    "trueBody": {
                      "id": 5149,
                      "nodeType": "Block",
                      "src": "18830:168:7",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 5135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 5130,
                              "name": "RN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4621,
                              "src": "18844:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5133,
                                  "name": "RNBlock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4619,
                                  "src": "18879:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5131,
                                  "name": "RNGenerator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4611,
                                  "src": "18849:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RNG_$10749",
                                    "typeString": "contract RNG"
                                  }
                                },
                                "id": 5132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getUncorrelatedRN",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10748,
                                "src": "18849:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) external returns (uint256)"
                                }
                              },
                              "id": 5134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18849:38:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18844:43:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5136,
                          "nodeType": "ExpressionStatement",
                          "src": "18844:43:7"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 5138,
                                  "name": "RN",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4621,
                                  "src": "18909:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 5139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18915:1:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "18909:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "52616e646f6d206e756d626572206973206e6f74207265616479207965742e",
                                "id": 5141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18918:33:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_585b7141d83cb213252e1c99d55d617774571c8768aef166f1cfb3d88eaa5509",
                                  "typeString": "literal_string \"Random number is not ready yet.\""
                                },
                                "value": "Random number is not ready yet."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_585b7141d83cb213252e1c99d55d617774571c8768aef166f1cfb3d88eaa5509",
                                  "typeString": "literal_string \"Random number is not ready yet.\""
                                }
                              ],
                              "id": 5137,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [11907, 11908],
                              "referencedDeclaration": 11908,
                              "src": "18901:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 5142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18901:51:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 5143,
                          "nodeType": "ExpressionStatement",
                          "src": "18901:51:7"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 5147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 5144,
                              "name": "phase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4613,
                              "src": "18966:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Phase_$4448",
                                "typeString": "enum KlerosLiquid.Phase"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5145,
                                "name": "Phase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4448,
                                "src": "18974:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Phase_$4448_$",
                                  "typeString": "type(enum KlerosLiquid.Phase)"
                                }
                              },
                              "id": 5146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "drawing",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "18974:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Phase_$4448",
                                "typeString": "enum KlerosLiquid.Phase"
                              }
                            },
                            "src": "18966:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Phase_$4448",
                              "typeString": "enum KlerosLiquid.Phase"
                            }
                          },
                          "id": 5148,
                          "nodeType": "ExpressionStatement",
                          "src": "18966:21:7"
                        }
                      ]
                    }
                  },
                  "id": 5175,
                  "nodeType": "IfStatement",
                  "src": "18431:831:7",
                  "trueBody": {
                    "id": 5125,
                    "nodeType": "Block",
                    "src": "18459:334:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 5092,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11906,
                                  "src": "18481:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 5093,
                                  "name": "lastPhaseChange",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4615,
                                  "src": "18487:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18481:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 5095,
                                "name": "minStakingTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4623,
                                "src": "18506:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "18481:39:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206d696e696d756d207374616b696e672074696d6520686173206e6f7420706173736564207965742e",
                              "id": 5097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18522:46:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_844a381e5fc23ca326f3acb3e004094e78bb8a9ad54563df4e8c9e3ad9cb910c",
                                "typeString": "literal_string \"The minimum staking time has not passed yet.\""
                              },
                              "value": "The minimum staking time has not passed yet."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_844a381e5fc23ca326f3acb3e004094e78bb8a9ad54563df4e8c9e3ad9cb910c",
                                "typeString": "literal_string \"The minimum staking time has not passed yet.\""
                              }
                            ],
                            "id": 5091,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [11907, 11908],
                            "referencedDeclaration": 11908,
                            "src": "18473:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18473:96:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5099,
                        "nodeType": "ExpressionStatement",
                        "src": "18473:96:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 5101,
                                "name": "disputesWithoutJurors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4617,
                                "src": "18591:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 5102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18615:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "18591:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865726520617265206e6f2064697370757465732074686174206e656564206a75726f72732e",
                              "id": 5104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18618:41:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_13e53ddf1f3b3b0efc32618c54b2ee64f5f2ebfa466468112b4ce2553daa9ca2",
                                "typeString": "literal_string \"There are no disputes that need jurors.\""
                              },
                              "value": "There are no disputes that need jurors."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_13e53ddf1f3b3b0efc32618c54b2ee64f5f2ebfa466468112b4ce2553daa9ca2",
                                "typeString": "literal_string \"There are no disputes that need jurors.\""
                              }
                            ],
                            "id": 5100,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [11907, 11908],
                            "referencedDeclaration": 11908,
                            "src": "18583:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18583:77:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5106,
                        "nodeType": "ExpressionStatement",
                        "src": "18583:77:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 5107,
                            "name": "RNBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4619,
                            "src": "18674:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5108,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11894,
                                "src": "18684:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 5109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "18684:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 5110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18699:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "18684:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18674:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5113,
                        "nodeType": "ExpressionStatement",
                        "src": "18674:26:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5117,
                              "name": "RNBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4619,
                              "src": "18736:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5114,
                              "name": "RNGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4611,
                              "src": "18714:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RNG_$10749",
                                "typeString": "contract RNG"
                              }
                            },
                            "id": 5116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "requestRN",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10713,
                            "src": "18714:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 5118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18714:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5119,
                        "nodeType": "ExpressionStatement",
                        "src": "18714:30:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 5120,
                            "name": "phase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4613,
                            "src": "18758:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Phase_$4448",
                              "typeString": "enum KlerosLiquid.Phase"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5121,
                              "name": "Phase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4448,
                              "src": "18766:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Phase_$4448_$",
                                "typeString": "type(enum KlerosLiquid.Phase)"
                              }
                            },
                            "id": 5122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "generating",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "18766:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Phase_$4448",
                              "typeString": "enum KlerosLiquid.Phase"
                            }
                          },
                          "src": "18758:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Phase_$4448",
                            "typeString": "enum KlerosLiquid.Phase"
                          }
                        },
                        "id": 5124,
                        "nodeType": "ExpressionStatement",
                        "src": "18758:24:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5176,
                      "name": "lastPhaseChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4615,
                      "src": "19272:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5177,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11906,
                      "src": "19290:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19272:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5179,
                  "nodeType": "ExpressionStatement",
                  "src": "19272:21:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5181,
                        "name": "phase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4613,
                        "src": "19317:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Phase_$4448",
                          "typeString": "enum KlerosLiquid.Phase"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Phase_$4448",
                          "typeString": "enum KlerosLiquid.Phase"
                        }
                      ],
                      "id": 5180,
                      "name": "NewPhase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4550,
                      "src": "19308:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_Phase_$4448_$returns$__$",
                        "typeString": "function (enum KlerosLiquid.Phase)"
                      }
                    },
                    "id": 5182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19308:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5183,
                  "nodeType": "EmitStatement",
                  "src": "19303:20:7"
                }
              ]
            },
            "documentation": "@dev Passes the phase. TRUSTED ",
            "id": 5185,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "passPhase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18409:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 5086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18421:0:7"
            },
            "scope": 7910,
            "src": "18391:939:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5419,
              "nodeType": "Block",
              "src": "19494:2039:7",
              "statements": [
                {
                  "assignments": [5191],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5191,
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 5420,
                      "src": "19504:23:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                        "typeString": "struct KlerosLiquid.Dispute"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 5190,
                        "name": "Dispute",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4538,
                        "src": "19504:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                          "typeString": "struct KlerosLiquid.Dispute"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5195,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 5192,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4648,
                      "src": "19530:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$4538_storage_$dyn_storage",
                        "typeString": "struct KlerosLiquid.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 5194,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5193,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5187,
                      "src": "19539:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19530:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$4538_storage",
                      "typeString": "struct KlerosLiquid.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19504:46:7"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_Period_$4454",
                      "typeString": "enum KlerosLiquid.Period"
                    },
                    "id": 5200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5196,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5191,
                        "src": "19564:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                          "typeString": "struct KlerosLiquid.Dispute storage pointer"
                        }
                      },
                      "id": 5197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "period",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4507,
                      "src": "19564:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Period_$4454",
                        "typeString": "enum KlerosLiquid.Period"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5198,
                        "name": "Period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4454,
                        "src": "19582:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Period_$4454_$",
                          "typeString": "type(enum KlerosLiquid.Period)"
                        }
                      },
                      "id": 5199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "evidence",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "19582:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Period_$4454",
                        "typeString": "enum KlerosLiquid.Period"
                      }
                    },
                    "src": "19564:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_Period_$4454",
                        "typeString": "enum KlerosLiquid.Period"
                      },
                      "id": 5262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5258,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5191,
                          "src": "20123:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                            "typeString": "struct KlerosLiquid.Dispute storage pointer"
                          }
                        },
                        "id": 5259,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "period",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4507,
                        "src": "20123:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Period_$4454",
                          "typeString": "enum KlerosLiquid.Period"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5260,
                          "name": "Period",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4454,
                          "src": "20141:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Period_$4454_$",
                            "typeString": "type(enum KlerosLiquid.Period)"
                          }
                        },
                        "id": 5261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "commit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "20141:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Period_$4454",
                          "typeString": "enum KlerosLiquid.Period"
                        }
                      },
                      "src": "20123:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Period_$4454",
                          "typeString": "enum KlerosLiquid.Period"
                        },
                        "id": 5307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5303,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5191,
                            "src": "20545:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                              "typeString": "struct KlerosLiquid.Dispute storage pointer"
                            }
                          },
                          "id": 5304,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "period",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4507,
                          "src": "20545:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Period_$4454",
                            "typeString": "enum KlerosLiquid.Period"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5305,
                            "name": "Period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4454,
                            "src": "20563:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Period_$4454_$",
                              "typeString": "type(enum KlerosLiquid.Period)"
                            }
                          },
                          "id": 5306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "vote",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "20563:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Period_$4454",
                            "typeString": "enum KlerosLiquid.Period"
                          }
                        },
                        "src": "20545:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Period_$4454",
                            "typeString": "enum KlerosLiquid.Period"
                          },
                          "id": 5364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5360,
                              "name": "dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5191,
                              "src": "21054:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                "typeString": "struct KlerosLiquid.Dispute storage pointer"
                              }
                            },
                            "id": 5361,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "period",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4507,
                            "src": "21054:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Period_$4454",
                              "typeString": "enum KlerosLiquid.Period"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5362,
                              "name": "Period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4454,
                              "src": "21072:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Period_$4454_$",
                                "typeString": "type(enum KlerosLiquid.Period)"
                              }
                            },
                            "id": 5363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "appeal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "21072:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Period_$4454",
                              "typeString": "enum KlerosLiquid.Period"
                            }
                          },
                          "src": "21054:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_Period_$4454",
                              "typeString": "enum KlerosLiquid.Period"
                            },
                            "id": 5396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5392,
                                "name": "dispute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5191,
                                "src": "21321:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                  "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                }
                              },
                              "id": 5393,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "period",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4507,
                              "src": "21321:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Period_$4454",
                                "typeString": "enum KlerosLiquid.Period"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5394,
                                "name": "Period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4454,
                                "src": "21339:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Period_$4454_$",
                                  "typeString": "type(enum KlerosLiquid.Period)"
                                }
                              },
                              "id": 5395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "execution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "21339:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Period_$4454",
                                "typeString": "enum KlerosLiquid.Period"
                              }
                            },
                            "src": "21321:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": null,
                          "id": 5402,
                          "nodeType": "IfStatement",
                          "src": "21317:117:7",
                          "trueBody": {
                            "id": 5401,
                            "nodeType": "Block",
                            "src": "21357:77:7",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "546865206469737075746520697320616c726561647920696e20746865206c61737420706572696f642e",
                                      "id": 5398,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21378:44:7",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_1082b3dcaadb8eb5ebd4b93830f91e52e2eb50d0445ff8f926c70a613eec0456",
                                        "typeString": "literal_string \"The dispute is already in the last period.\""
                                      },
                                      "value": "The dispute is already in the last period."
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_1082b3dcaadb8eb5ebd4b93830f91e52e2eb50d0445ff8f926c70a613eec0456",
                                        "typeString": "literal_string \"The dispute is already in the last period.\""
                                      }
                                    ],
                                    "id": 5397,
                                    "name": "revert",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [11909, 11910],
                                    "referencedDeclaration": 11910,
                                    "src": "21371:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (string memory) pure"
                                    }
                                  },
                                  "id": 5399,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21371:52:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 5400,
                                "nodeType": "ExpressionStatement",
                                "src": "21371:52:7"
                              }
                            ]
                          }
                        },
                        "id": 5403,
                        "nodeType": "IfStatement",
                        "src": "21050:384:7",
                        "trueBody": {
                          "id": 5391,
                          "nodeType": "Block",
                          "src": "21087:224:7",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 5369,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 5366,
                                        "name": "now",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11906,
                                        "src": "21109:3:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 5367,
                                          "name": "dispute",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5191,
                                          "src": "21115:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                            "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                          }
                                        },
                                        "id": 5368,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lastPeriodChange",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4509,
                                        "src": "21115:24:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "21109:30:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 5370,
                                            "name": "courts",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4631,
                                            "src": "21143:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                                              "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                                            }
                                          },
                                          "id": 5373,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 5371,
                                              "name": "dispute",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5191,
                                              "src": "21150:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                                "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                              }
                                            },
                                            "id": 5372,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "subcourtID",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4501,
                                            "src": "21150:18:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint96",
                                              "typeString": "uint96"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "21143:26:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Court_$4474_storage",
                                            "typeString": "struct KlerosLiquid.Court storage ref"
                                          }
                                        },
                                        "id": 5374,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timesPerPeriod",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4473,
                                        "src": "21143:41:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$4_storage",
                                          "typeString": "uint256[4] storage ref"
                                        }
                                      },
                                      "id": 5379,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 5376,
                                              "name": "dispute",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5191,
                                              "src": "21190:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                                "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                              }
                                            },
                                            "id": 5377,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "period",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4507,
                                            "src": "21190:14:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_Period_$4454",
                                              "typeString": "enum KlerosLiquid.Period"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_enum$_Period_$4454",
                                              "typeString": "enum KlerosLiquid.Period"
                                            }
                                          ],
                                          "id": 5375,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "21185:4:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": "uint"
                                        },
                                        "id": 5378,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "21185:20:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "21143:63:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "21109:97:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "5468652061707065616c20706572696f642074696d6520686173206e6f7420706173736564207965742e",
                                    "id": 5381,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21208:44:7",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b74e455ead807d4fbb9be10e1a5a59ac5a69d3af325dab81ec25910b2db8e45a",
                                      "typeString": "literal_string \"The appeal period time has not passed yet.\""
                                    },
                                    "value": "The appeal period time has not passed yet."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_b74e455ead807d4fbb9be10e1a5a59ac5a69d3af325dab81ec25910b2db8e45a",
                                      "typeString": "literal_string \"The appeal period time has not passed yet.\""
                                    }
                                  ],
                                  "id": 5365,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [11907, 11908],
                                  "referencedDeclaration": 11908,
                                  "src": "21101:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 5382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21101:152:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5383,
                              "nodeType": "ExpressionStatement",
                              "src": "21101:152:7"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 5384,
                                    "name": "dispute",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5191,
                                    "src": "21267:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                      "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                    }
                                  },
                                  "id": 5386,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "period",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4507,
                                  "src": "21267:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Period_$4454",
                                    "typeString": "enum KlerosLiquid.Period"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 5387,
                                    "name": "Period",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4454,
                                    "src": "21284:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Period_$4454_$",
                                      "typeString": "type(enum KlerosLiquid.Period)"
                                    }
                                  },
                                  "id": 5388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "execution",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "21284:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Period_$4454",
                                    "typeString": "enum KlerosLiquid.Period"
                                  }
                                },
                                "src": "21267:33:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Period_$4454",
                                  "typeString": "enum KlerosLiquid.Period"
                                }
                              },
                              "id": 5390,
                              "nodeType": "ExpressionStatement",
                              "src": "21267:33:7"
                            }
                          ]
                        }
                      },
                      "id": 5404,
                      "nodeType": "IfStatement",
                      "src": "20541:893:7",
                      "trueBody": {
                        "id": 5359,
                        "nodeType": "Block",
                        "src": "20576:468:7",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 5342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 5312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 5309,
                                        "name": "now",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11906,
                                        "src": "20615:3:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 5310,
                                          "name": "dispute",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5191,
                                          "src": "20621:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                            "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                          }
                                        },
                                        "id": 5311,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lastPeriodChange",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4509,
                                        "src": "20621:24:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "20615:30:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 5313,
                                            "name": "courts",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4631,
                                            "src": "20649:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                                              "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                                            }
                                          },
                                          "id": 5316,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 5314,
                                              "name": "dispute",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5191,
                                              "src": "20656:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                                "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                              }
                                            },
                                            "id": 5315,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "subcourtID",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4501,
                                            "src": "20656:18:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint96",
                                              "typeString": "uint96"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "20649:26:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Court_$4474_storage",
                                            "typeString": "struct KlerosLiquid.Court storage ref"
                                          }
                                        },
                                        "id": 5317,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timesPerPeriod",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4473,
                                        "src": "20649:41:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$4_storage",
                                          "typeString": "uint256[4] storage ref"
                                        }
                                      },
                                      "id": 5322,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 5319,
                                              "name": "dispute",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5191,
                                              "src": "20696:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                                "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                              }
                                            },
                                            "id": 5320,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "period",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4507,
                                            "src": "20696:14:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_Period_$4454",
                                              "typeString": "enum KlerosLiquid.Period"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_enum$_Period_$4454",
                                              "typeString": "enum KlerosLiquid.Period"
                                            }
                                          ],
                                          "id": 5318,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "20691:4:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": "uint"
                                        },
                                        "id": 5321,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "20691:20:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "20649:63:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "20615:97:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5341,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 5324,
                                          "name": "dispute",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5191,
                                          "src": "20716:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                            "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                          }
                                        },
                                        "id": 5325,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "votesInEachRound",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4529,
                                        "src": "20716:24:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 5331,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5330,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 5326,
                                              "name": "dispute",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5191,
                                              "src": "20741:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                                "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                              }
                                            },
                                            "id": 5327,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "votes",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4513,
                                            "src": "20741:13:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_array$_t_struct$_Vote_$4490_storage_$dyn_storage_$dyn_storage",
                                              "typeString": "struct KlerosLiquid.Vote storage ref[] storage ref[] storage ref"
                                            }
                                          },
                                          "id": 5328,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "length",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "20741:20:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31",
                                          "id": 5329,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "20764:1:7",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "20741:24:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "20716:50:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 5332,
                                            "name": "dispute",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5191,
                                            "src": "20770:7:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                              "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                            }
                                          },
                                          "id": 5333,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "votes",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4513,
                                          "src": "20770:13:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_array$_t_struct$_Vote_$4490_storage_$dyn_storage_$dyn_storage",
                                            "typeString": "struct KlerosLiquid.Vote storage ref[] storage ref[] storage ref"
                                          }
                                        },
                                        "id": 5339,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 5338,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 5334,
                                                "name": "dispute",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5191,
                                                "src": "20784:7:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                                  "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                                }
                                              },
                                              "id": 5335,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "votes",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 4513,
                                              "src": "20784:13:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_array$_t_struct$_Vote_$4490_storage_$dyn_storage_$dyn_storage",
                                                "typeString": "struct KlerosLiquid.Vote storage ref[] storage ref[] storage ref"
                                              }
                                            },
                                            "id": 5336,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "20784:20:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "31",
                                            "id": 5337,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "20807:1:7",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "20784:24:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "20770:39:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Vote_$4490_storage_$dyn_storage",
                                          "typeString": "struct KlerosLiquid.Vote storage ref[] storage ref"
                                        }
                                      },
                                      "id": 5340,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "20770:46:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "20716:100:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "20615:201:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "54686520766f746520706572696f642074696d6520686173206e6f74207061737365642079657420616e64206e6f74206576657279206a75726f722068617320766f746564207965742e",
                                  "id": 5343,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20834:76:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_cbf75ca3b6be7c6c8135a4bc217661aea20ada170a6ee062b31311265359e97e",
                                    "typeString": "literal_string \"The vote period time has not passed yet and not every juror has voted yet.\""
                                  },
                                  "value": "The vote period time has not passed yet and not every juror has voted yet."
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_cbf75ca3b6be7c6c8135a4bc217661aea20ada170a6ee062b31311265359e97e",
                                    "typeString": "literal_string \"The vote period time has not passed yet and not every juror has voted yet.\""
                                  }
                                ],
                                "id": 5308,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [11907, 11908],
                                "referencedDeclaration": 11908,
                                "src": "20590:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 5344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20590:334:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 5345,
                            "nodeType": "ExpressionStatement",
                            "src": "20590:334:7"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 5351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5346,
                                  "name": "dispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5191,
                                  "src": "20938:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                    "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                  }
                                },
                                "id": 5348,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "period",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4507,
                                "src": "20938:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Period_$4454",
                                  "typeString": "enum KlerosLiquid.Period"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5349,
                                  "name": "Period",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4454,
                                  "src": "20955:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Period_$4454_$",
                                    "typeString": "type(enum KlerosLiquid.Period)"
                                  }
                                },
                                "id": 5350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "appeal",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "20955:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Period_$4454",
                                  "typeString": "enum KlerosLiquid.Period"
                                }
                              },
                              "src": "20938:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Period_$4454",
                                "typeString": "enum KlerosLiquid.Period"
                              }
                            },
                            "id": 5352,
                            "nodeType": "ExpressionStatement",
                            "src": "20938:30:7"
                          },
                          {
                            "eventCall": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5354,
                                  "name": "_disputeID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5187,
                                  "src": "21002:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 5355,
                                    "name": "dispute",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5191,
                                    "src": "21014:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                      "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                    }
                                  },
                                  "id": 5356,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "arbitrated",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4503,
                                  "src": "21014:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Arbitrable_$8221",
                                    "typeString": "contract Arbitrable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_Arbitrable_$8221",
                                    "typeString": "contract Arbitrable"
                                  }
                                ],
                                "id": 5353,
                                "name": "AppealPossible",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8480,
                                "src": "20987:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_Arbitrable_$8221_$returns$__$",
                                  "typeString": "function (uint256,contract Arbitrable)"
                                }
                              },
                              "id": 5357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20987:46:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 5358,
                            "nodeType": "EmitStatement",
                            "src": "20982:51:7"
                          }
                        ]
                      }
                    },
                    "id": 5405,
                    "nodeType": "IfStatement",
                    "src": "20119:1315:7",
                    "trueBody": {
                      "id": 5302,
                      "nodeType": "Block",
                      "src": "20156:379:7",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 5291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5267,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 5264,
                                      "name": "now",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11906,
                                      "src": "20195:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 5265,
                                        "name": "dispute",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5191,
                                        "src": "20201:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                          "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                        }
                                      },
                                      "id": 5266,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lastPeriodChange",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4509,
                                      "src": "20201:24:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "20195:30:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 5268,
                                          "name": "courts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4631,
                                          "src": "20229:6:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                                            "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                                          }
                                        },
                                        "id": 5271,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 5269,
                                            "name": "dispute",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5191,
                                            "src": "20236:7:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                              "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                            }
                                          },
                                          "id": 5270,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "subcourtID",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4501,
                                          "src": "20236:18:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint96",
                                            "typeString": "uint96"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "20229:26:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Court_$4474_storage",
                                          "typeString": "struct KlerosLiquid.Court storage ref"
                                        }
                                      },
                                      "id": 5272,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timesPerPeriod",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4473,
                                      "src": "20229:41:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$4_storage",
                                        "typeString": "uint256[4] storage ref"
                                      }
                                    },
                                    "id": 5277,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 5274,
                                            "name": "dispute",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5191,
                                            "src": "20276:7:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                              "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                            }
                                          },
                                          "id": 5275,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "period",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4507,
                                          "src": "20276:14:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Period_$4454",
                                            "typeString": "enum KlerosLiquid.Period"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_enum$_Period_$4454",
                                            "typeString": "enum KlerosLiquid.Period"
                                          }
                                        ],
                                        "id": 5273,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "20271:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": "uint"
                                      },
                                      "id": 5276,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20271:20:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "20229:63:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "20195:97:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 5279,
                                      "name": "dispute",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5191,
                                      "src": "20296:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                        "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                      }
                                    },
                                    "id": 5280,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "commitsInRound",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4526,
                                    "src": "20296:22:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 5281,
                                          "name": "dispute",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5191,
                                          "src": "20322:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                            "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                          }
                                        },
                                        "id": 5282,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "votes",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4513,
                                        "src": "20322:13:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_array$_t_struct$_Vote_$4490_storage_$dyn_storage_$dyn_storage",
                                          "typeString": "struct KlerosLiquid.Vote storage ref[] storage ref[] storage ref"
                                        }
                                      },
                                      "id": 5288,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5287,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 5283,
                                              "name": "dispute",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5191,
                                              "src": "20336:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                                "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                              }
                                            },
                                            "id": 5284,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "votes",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4513,
                                            "src": "20336:13:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_array$_t_struct$_Vote_$4490_storage_$dyn_storage_$dyn_storage",
                                              "typeString": "struct KlerosLiquid.Vote storage ref[] storage ref[] storage ref"
                                            }
                                          },
                                          "id": 5285,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "length",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "20336:20:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31",
                                          "id": 5286,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "20359:1:7",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "20336:24:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "20322:39:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Vote_$4490_storage_$dyn_storage",
                                        "typeString": "struct KlerosLiquid.Vote storage ref[] storage ref"
                                      }
                                    },
                                    "id": 5289,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "20322:46:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "20296:72:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "20195:173:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "54686520636f6d6d697420706572696f642074696d6520686173206e6f74207061737365642079657420616e64206e6f74206576657279206a75726f722068617320636f6d6d6974746564207965742e",
                                "id": 5292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20386:82:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_90d936af3ee687654917ab45d615fa6413f819a2d955f25dabf020f5e285f12a",
                                  "typeString": "literal_string \"The commit period time has not passed yet and not every juror has committed yet.\""
                                },
                                "value": "The commit period time has not passed yet and not every juror has committed yet."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_90d936af3ee687654917ab45d615fa6413f819a2d955f25dabf020f5e285f12a",
                                  "typeString": "literal_string \"The commit period time has not passed yet and not every juror has committed yet.\""
                                }
                              ],
                              "id": 5263,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [11907, 11908],
                              "referencedDeclaration": 11908,
                              "src": "20170:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 5293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20170:312:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 5294,
                          "nodeType": "ExpressionStatement",
                          "src": "20170:312:7"
                        },
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 5300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5295,
                                "name": "dispute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5191,
                                "src": "20496:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                  "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                }
                              },
                              "id": 5297,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "period",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4507,
                              "src": "20496:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Period_$4454",
                                "typeString": "enum KlerosLiquid.Period"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5298,
                                "name": "Period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4454,
                                "src": "20513:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Period_$4454_$",
                                  "typeString": "type(enum KlerosLiquid.Period)"
                                }
                              },
                              "id": 5299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "vote",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "20513:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Period_$4454",
                                "typeString": "enum KlerosLiquid.Period"
                              }
                            },
                            "src": "20496:28:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Period_$4454",
                              "typeString": "enum KlerosLiquid.Period"
                            }
                          },
                          "id": 5301,
                          "nodeType": "ExpressionStatement",
                          "src": "20496:28:7"
                        }
                      ]
                    }
                  },
                  "id": 5406,
                  "nodeType": "IfStatement",
                  "src": "19560:1874:7",
                  "trueBody": {
                    "id": 5257,
                    "nodeType": "Block",
                    "src": "19599:514:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 5222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 5202,
                                      "name": "dispute",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5191,
                                      "src": "19638:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                        "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                      }
                                    },
                                    "id": 5203,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4513,
                                    "src": "19638:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_array$_t_struct$_Vote_$4490_storage_$dyn_storage_$dyn_storage",
                                      "typeString": "struct KlerosLiquid.Vote storage ref[] storage ref[] storage ref"
                                    }
                                  },
                                  "id": 5204,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "19638:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 5205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19661:1:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "19638:24:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 5207,
                                    "name": "now",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11906,
                                    "src": "19666:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 5208,
                                      "name": "dispute",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5191,
                                      "src": "19672:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                        "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                      }
                                    },
                                    "id": 5209,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lastPeriodChange",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4509,
                                    "src": "19672:24:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "19666:30:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 5211,
                                        "name": "courts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4631,
                                        "src": "19700:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Court_$4474_storage_$dyn_storage",
                                          "typeString": "struct KlerosLiquid.Court storage ref[] storage ref"
                                        }
                                      },
                                      "id": 5214,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 5212,
                                          "name": "dispute",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5191,
                                          "src": "19707:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                            "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                          }
                                        },
                                        "id": 5213,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "subcourtID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4501,
                                        "src": "19707:18:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19700:26:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Court_$4474_storage",
                                        "typeString": "struct KlerosLiquid.Court storage ref"
                                      }
                                    },
                                    "id": 5215,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timesPerPeriod",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4473,
                                    "src": "19700:41:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$4_storage",
                                      "typeString": "uint256[4] storage ref"
                                    }
                                  },
                                  "id": 5220,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 5217,
                                          "name": "dispute",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5191,
                                          "src": "19747:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                            "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                          }
                                        },
                                        "id": 5218,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "period",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4507,
                                        "src": "19747:14:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Period_$4454",
                                          "typeString": "enum KlerosLiquid.Period"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_Period_$4454",
                                          "typeString": "enum KlerosLiquid.Period"
                                        }
                                      ],
                                      "id": 5216,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "19742:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": "uint"
                                    },
                                    "id": 5219,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19742:20:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19700:63:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19666:97:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "19638:125:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5468652065766964656e636520706572696f642074696d6520686173206e6f74207061737365642079657420616e64206974206973206e6f7420616e2061707065616c2e",
                              "id": 5223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19781:70:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_542d1cee39f4c2c69f5b8455bbf3ee33df41aae9a6aae9f4eea22ad5ae2bae45",
                                "typeString": "literal_string \"The evidence period time has not passed yet and it is not an appeal.\""
                              },
                              "value": "The evidence period time has not passed yet and it is not an appeal."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_542d1cee39f4c2c69f5b8455bbf3ee33df41aae9a6aae9f4eea22ad5ae2bae45",
                                "typeString": "literal_string \"The evidence period time has not passed yet and it is not an appeal.\""
                              }
                            ],
                            "id": 5201,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [11907, 11908],
                            "referencedDeclaration": 11908,
                            "src": "19613:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19613:252:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5225,
                        "nodeType": "ExpressionStatement",
                        "src": "19613:252:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5227,
                                  "name": "dispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5191,
                                  "src": "19887:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                    "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                  }
                                },
                                "id": 5228,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "drawsInRound",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4524,
                                "src": "19887:20:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 5229,
                                      "name": "dispute",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5191,
                                      "src": "19911:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                        "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                      }
                                    },
                                    "id": 5230,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4513,
                                    "src": "19911:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_array$_t_struct$_Vote_$4490_storage_$dyn_storage_$dyn_storage",
                                      "typeString": "struct KlerosLiquid.Vote storage ref[] storage ref[] storage ref"
                                    }
                                  },
                                  "id": 5236,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 5231,
                                          "name": "dispute",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5191,
                                          "src": "19925:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Dispute_$4538_storage_ptr",
                                            "typeString": "struct KlerosLiquid.Dispute storage pointer"
                                          }
                                        },
                                        "id": 5232,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "votes",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4513,
                                        "src": "19925:13:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_array$_t_struct$_Vote_$4490_storage_$dyn_storage_$dyn_storage",
                                          "typeString": "struct KlerosLiquid.Vote storage ref[] storage ref[] storage ref"
                                        }
                                      },
                                      "id": 5233,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "19925:20:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 5234,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19948:1:7",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "19925:24:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19911:39:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Vote_$4490_storage_$dyn_storage",
                                    "typeString": "struct KlerosLiquid.Vote storage ref[] storage ref"
                                  }
                                },
                                "id": 5237,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "19911:46:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19887:70:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865206469737075746520686173206e6f742066696e69736865642064726177696e67207965742e",
                              "id": 5239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19959:43:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9f26b5dfb3fd13d6f8cd2b276fd80ec56e32c6ae6984660d1ab5a56bac306467",
                                "typeString": "literal_string \"The dispute has not finished drawing yet.\""
                              },
                              "value": "The dispute has not finished drawing yet."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9f26b5dfb3fd13d6f8cd2b276fd80ec56e32c6ae6984660d1ab5a56bac306467",
                                "typeString": "literal_string \"The dispute has not finished drawing yet.\""
                              }
                            ],
                            "id": 5226,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [11907, 11908],
                            "referencedDeclaration": 11908,
 